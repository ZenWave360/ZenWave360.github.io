"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[793],{51573:function(e,t,n){n.r(t),n.d(t,{default:function(){return v}});var a=n(27378),l=n(20951),r=n(48171),i=n(51162),o=n(85887),s=n(75961),c=n(20470),m=n(68411),u=n(42142),d=n(38140),h=n(53468);function g(e){const t=Object.assign({p:"p",a:"a",h1:"h1",div:"div",ul:"ul",li:"li",h2:"h2",strong:"strong",em:"em",blockquote:"blockquote",h3:"h3",ol:"ol",code:"code",pre:"pre",h4:"h4",img:"img"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(r.Ee,{src:"automobile.png",alt:""}),"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"https://x.com/ghohpe/status/1513362076990803969"},"https://x.com/ghohpe/status/1513362076990803969")),"\n",a.createElement(t.h1,{id:"ddd-in-practice-from-an-ubiquitous-language-dsl-to-a-complete-spring-boot-kotlin-project",style:{position:"relative"}},a.createElement(t.a,{href:"#ddd-in-practice-from-an-ubiquitous-language-dsl-to-a-complete-spring-boot-kotlin-project","aria-label":"ddd in practice from an ubiquitous language dsl to a complete spring boot kotlin project permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"DDD In Practice: From an Ubiquitous Language DSL to a Complete Spring Boot Kotlin Project"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#ddd-in-practice-from-an-ubiquitous-language-dsl-to-a-complete-spring-boot-kotlin-project"},"DDD In Practice: From an Ubiquitous Language DSL to a Complete Spring Boot Kotlin Project"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#the-importance-of-ubiquitous-language-in-domain-driven-design"},"The Importance of Ubiquitous Language in Domain Driven Design")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#zenwave-domain-model-language-a-modeling-language-that-works-as-ubiquitous-language"},"ZenWave Domain Model Language: A Modeling Language that Works as Ubiquitous Language")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#business-domain-modeling-with-zenwave-360%C2%BA"},"Business Domain Modeling with ZenWave 360ยบ"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#understanding-the-mental-model-of-business-experts"},"Understanding the Mental Model of Business Experts")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#converting-ubiquitous-language-into-different-software-artifacts-with-zenwave-sdk"},"Converting Ubiquitous Language into Different Software Artifacts with ZenWave SDK")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#zenwave-360-quick-start-for-the-impatient"},"ZenWave 360: Quick Start for the Impatient")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#practical-case-customers-service---from-zdl-model-to-spring-boot-project"},"Practical Case: Customers Service - From ZDL Model to Spring-Boot Project"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#creating-a-zdl-for-our-customers-service"},"Creating a ZDL for our Customers Service")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#modeling-domain-commands-and-events"},"Modeling Domain Commands and Events")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#connecting-the-service-with-the-outside-via-apis"},"Connecting the Service with the Outside via APIs"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#converting-zdl-to-openapi"},"Converting ZDL to OpenAPI")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#converting-zdl-to-asyncapi"},"Converting ZDL to AsyncAPI")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#modeling-the-customer-aggregate"},"Modeling the Customer Aggregate"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#about-relational-andor-document-models"},"About Relational and/or Document Models")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#zenwave-sdk-scripts-file"},"ZenWave SDK Scripts File")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#generated-code-customization"},"Generated Code Customization"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#available-customization-types"},"Available Customization Types")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#basic-customization"},"Basic Customization"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#architecture-layouts"},"Architecture Layouts")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#package-configuration"},"Package Configuration")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#modular-monoliths"},"Modular Monoliths")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#intermediate-customization"},"Intermediate Customization"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#custom-templates"},"Custom Templates")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#advanced-customization"},"Advanced Customization"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#classpath-extension-with-jbang"},"Classpath Extension with JBang")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#total-customization-example-of-complete-substitution-replacing-java-with-kotlin"},"Total customization: Example of complete substitution replacing Java with Kotlin")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#creating-custom-plugins"},"Creating Custom Plugins")),"\n"),"\n"),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#complete-spring-boot-project-with-kotlin"},"Complete Spring-Boot Project with Kotlin"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#technology-stack"},"Technology Stack")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#functionality-and-domain-model"},"Functionality and Domain Model"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#entities-and-value-objects"},"Entities and Value Objects")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#available-operations"},"Available Operations")),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#zenwave-sdk-models"},"ZenWave SDK Models")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"#running-the-project"},"Running the Project")),"\n"),"\n"),"\n"),"\n"),"\n"),"\n",a.createElement(t.h2,{id:"the-importance-of-ubiquitous-language-in-domain-driven-design",style:{position:"relative"}},a.createElement(t.a,{href:"#the-importance-of-ubiquitous-language-in-domain-driven-design","aria-label":"the importance of ubiquitous language in domain driven design permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"The Importance of Ubiquitous Language in Domain Driven Design"),"\n",a.createElement(t.p,null,"Domain Driven Design is now 20 years old and remains more relevant than ever. However, due to the broad scope of its proposal, DDD is not a simple technique."),"\n",a.createElement(t.p,null,"DDD is not a single technique, nor a closed recipe. It's a comprehensive design approach that spans different levels of abstraction and decision-making:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Strategic DDD"),": where we identify ",a.createElement(t.em,null,"domains")," and their ",a.createElement(t.em,null,"subdomains")," and classify them according to their impact on business strategy: ",a.createElement(t.em,null,"core"),", ",a.createElement(t.em,null,"generic")," or ",a.createElement(t.em,null,"supporting"),"... and define different ",a.createElement(t.em,null,"bounded contexts")," for these domains and how they will relate to each other through ",a.createElement(t.em,null,"context maps"),"."),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Tactical DDD"),": where we go down to the model level and talk about ",a.createElement(t.em,null,"entities"),", ",a.createElement(t.em,null,"aggregates"),", ",a.createElement(t.em,null,"value objects"),", ",a.createElement(t.em,null,"domain events"),", ",a.createElement(t.em,null,"services")," and ",a.createElement(t.em,null,"repositories"),"."),"\n"),"\n",a.createElement(t.p,null,"Although ",a.createElement(t.strong,null,"Strategic DDD")," and ",a.createElement(t.strong,null,"Tactical DDD")," have different levels of abstraction, and generally interest different profiles, both ",a.createElement(t.strong,null,"are interconnected"),"."),"\n",a.createElement(t.p,null,"It's important to consider the strategic context to make good decisions at the tactical level. For example:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"It may make sense to define a ",a.createElement(t.strong,null,"clean/hexagonal architecture for a ",a.createElement(t.em,null,"core")," domain"),", using aggregates, rich entities, domain events and a separate persistence model, since we would be modeling and discovering more complex business rules with a strong impact on business strategy."),"\n",a.createElement(t.li,null,"But it makes much less sense for a ",a.createElement(t.strong,null,a.createElement(t.em,null,"generic")," or ",a.createElement(t.em,null,"supporting")," subdomain where simplicity and ease of maintenance")," are more important, and the complexity of a rich domain model not only adds no value but would harm maintainability."),"\n"),"\n",a.createElement(t.p,null,"However, these tactical design decisions are frequently made without considering the strategic context."),"\n",a.createElement(t.p,null,"Furthermore, ",a.createElement(t.strong,null,"DDD's main proposal is to create a Common Language / Ubiquitous Language")," and deepen domain knowledge by discovering, identifying and making visible the language that business experts use to describe their processes, and ensuring that this language permeates the entire software development process. That it's spoken in meetings, in diagrams, in code, in tests, in documentation... and that it's the language used by business experts."),"\n",a.createElement(t.p,null,"A Common Language that unites technical experts and business experts."),"\n",a.createElement(r.Ee,{alt:"Domain Driven Design Triangle",src:m.Z,width:"80%"}),"\n",a.createElement(t.p,null,"And although it's common to see projects that use DDD at the tactical or even strategic level, it's very rare to see a Ubiquitous Language effectively used by everyone involved throughout the entire development process... Mainly because it's difficult. Even if we invest in discovering and making visible the domain's Ubiquitous Language, this still requires manual propagation throughout the entire development process. And there are too many translation points (business experts, analysts, architects, developers, testers...) where that common language, and understanding, is lost."),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"Therefore, we not only need a Common Language, but also an automatic way to propagate that Common Language through code, tests and documentation."),"\n"),"\n",a.createElement(t.p,null,"And this is how ",a.createElement(t.strong,null,"ZenWave Domain Model Language (ZDL)")," emerges: To be able to think about software, talk about software, design software..."),"\n",a.createElement(t.p,null,"A compact and expressive way, capable of capturing technical and business concepts in a concentrated form, to describe our domain and that also works as a Ubiquitous Language format, which can be automatically transformed into executable code, API definitions, automated tests, technical documentation and business term glossaries."),"\n",a.createElement(t.p,null,"In this way, domain knowledge propagates consistently throughout the entire development cycle, maintaining coherence between what business experts think and what developers implement."),"\n",a.createElement(t.h2,{id:"zenwave-domain-model-language-a-modeling-language-that-works-as-ubiquitous-language",style:{position:"relative"}},a.createElement(t.a,{href:"#zenwave-domain-model-language-a-modeling-language-that-works-as-ubiquitous-language","aria-label":"zenwave domain model language a modeling language that works as ubiquitous language permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ZenWave Domain Model Language: A Modeling Language that Works as Ubiquitous Language"),"\n",a.createElement(t.p,null,"ZenWave Domain Model Language (ZDL) is a modeling language that allows describing the content of backend services based on DDD principles and API-First for Event-Driven Architectures."),"\n",a.createElement(t.p,null,"ZDL is a compact, readable, and expressive language. It also works well as a Ubiquitous Language format, and thanks to the set of ",a.createElement(t.a,{href:"https://www.zenwave360.io/zenwave-sdk/"},"ZenWave SDK Plugins"),", it can be converted into different software artifacts and documentation, thus propagating the common language throughout the entire development process."),"\n",a.createElement(t.p,null,"Initially inspired by ",a.createElement(t.a,{href:"https://www.jhipster.tech/jdl/intro"},"JHipster Domain Language (JDL)")," and borrowing its syntax, ZDL extends JDL beyond the definition of entities and their relationships for CRUD applications. It adds support for defining services, commands, and domain events, as well as integration with API-First specifications like OpenAPI, AsyncAPI, and AVRO."),"\n",a.createElement(t.p,null,"ZDL is especially designed to capture the discoveries from a ",a.createElement(t.strong,null,"design-level")," ",a.createElement(t.a,{href:"https://www.eventstorming.com/"},"Event Storming")," session, for a ",a.createElement(t.em,null,"Bounded Context"),", as the first step to bring the language of business experts to technical documentation and source code."),"\n",a.createElement(r.Ee,{alt:"Event-Storming to ZDL Mapping",src:i.Z}),"\n",a.createElement(t.p,null,"In this ",a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground"},"GitHub repository")," you can find different examples of ZDL models, both for microservices and modular monoliths, such as this example: ",a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-baseline/zenwave-model.zdl"},"customer-address-jpa.zdl")),"\n",a.createElement(t.h2,{id:"business-domain-modeling-with-zenwave-360ยบ",style:{position:"relative"}},a.createElement(t.a,{href:"#business-domain-modeling-with-zenwave-360%C2%BA","aria-label":"business domain modeling with zenwave 360ยบ permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Business Domain Modeling with ZenWave 360ยบ"),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"A good model is one that allows accommodating changes in the direction and perspective of business experts."),"\n"),"\n",a.createElement(t.p,null,"ZenWave 360ยบ Business Domain Modeling is sustained by three pillars:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Understanding the Mental Model")," of Business Experts."),"\n",a.createElement(t.li,null,"Using the ",a.createElement(t.strong,null,"ZDL Modeling Language")," to create a Ubiquitous Language that reflects the mental model of Business Experts."),"\n",a.createElement(t.li,null,"Using ",a.createElement(t.strong,null,"ZenWave SDK")," to convert the ZDL Model ",a.createElement(t.strong,null,"into different Software Artifacts")," accelerating the development process."),"\n"),"\n",a.createElement(r.Ee,{alt:"Domain Driven Design Feedback Loop",dark:s.Z,light:c.Z}),"\n",a.createElement(t.h3,{id:"understanding-the-mental-model-of-business-experts",style:{position:"relative"}},a.createElement(t.a,{href:"#understanding-the-mental-model-of-business-experts","aria-label":"understanding the mental model of business experts permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Understanding the Mental Model of Business Experts"),"\n",a.createElement(t.p,null,"Domain Driven Design emphasizes ",a.createElement(t.strong,null,"the importance of understanding the business domain")," to create effective software."),"\n",a.createElement(t.p,null,"If we don't correctly capture the mental model of business experts, no amount of ",a.createElement(t.strong,null,"Clean Code"),", ",a.createElement(t.strong,null,"Clean Architecture"),", ",a.createElement(t.strong,null,"Hexagonal Architecture"),", etc... will help create maintainable and quality software."),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Event-Storming"),": is an excellent method for capturing the mental model of business experts and understanding business processes, due to its ",a.createElement(t.strong,null,"low technological barrier")," to entry and because it's ",a.createElement(t.strong,null,"perfect for modeling Event-Driven Architectures"),"."),"\n",a.createElement(r.Ee,{src:o.Z,alt:"Event Storming"}),"\n",a.createElement(t.p,null,"The ",a.createElement(t.strong,null,"ZDL")," language allows documenting the Mental Model of business experts in a structured way, following DDD principles and Event-Driven Architectures. It allows ",a.createElement(t.strong,null,"mapping the discoveries from an Event-Storming session"),", retaining the language of business experts."),"\n",a.createElement(t.p,null,"As a technical expert, you can use this ZDL Modeling Language to communicate within your team and narrate the story expressed by the model back to domain experts in their own language."),"\n",a.createElement(t.h3,{id:"converting-ubiquitous-language-into-different-software-artifacts-with-zenwave-sdk",style:{position:"relative"}},a.createElement(t.a,{href:"#converting-ubiquitous-language-into-different-software-artifacts-with-zenwave-sdk","aria-label":"converting ubiquitous language into different software artifacts with zenwave sdk permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Converting Ubiquitous Language into Different Software Artifacts with ZenWave SDK"),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"The best way to validate a conceptual model is to implement it."),"\n"),"\n",a.createElement(t.p,null,"ZenWave SDK allows accelerating the development process, converting your Domain Models into Software and functional Tests. ",a.createElement(t.strong,null,"Working software")," is the best way to evaluate the validity of a conceptual model. It enables ",a.createElement(t.strong,null,"early feedback")," to all development team members, which is crucial for iterative model refinement."),"\n",a.createElement(r.Ee,{alt:"Speed Feedback Loop",dark:d.Z,light:u.Z,style:{marginTop:"15px"}}),"\n",a.createElement(t.p,null,"This also enables the propagation of the Ubiquitous Language captured in the ZDL to code, APIs, tests, documentation, and diagrams... automatically."),"\n",a.createElement(t.p,null,"In the following sections, we'll see how we can model a simple domain and convert it into a complete Spring-Boot project with Kotlin."),"\n",a.createElement(t.h2,{id:"zenwave-360-quick-start-for-the-impatient",style:{position:"relative"}},a.createElement(t.a,{href:"#zenwave-360-quick-start-for-the-impatient","aria-label":"zenwave 360 quick start for the impatient permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ZenWave 360: Quick Start for the Impatient"),"\n",a.createElement(t.p,null,"This section is for the most impatient. If you want to test ZenWave 360's capabilities ",a.createElement(t.em,null,"end-to-end")," and generate a complete Spring Boot project from a ZDL model, here's a concise and direct step-by-step guide. This section is designed for users who prefer immediate actions without going into extensive details at the beginning. In the following sections, we'll see in more detail how to model a domain with ZenWave 360."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Clone the base project"),": Download the ",a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/tree/main/zenwave-jpa-baseline"},"base project"),". Alternatively, you can create a Maven project from ",a.createElement(t.a,{href:"https://start.spring.io/"},"https://start.spring.io/"),", although you'll need to manually configure the OpenAPI Maven Generator and the ZenWave SDK Maven Plugin for AsyncAPI. Any single-module Spring-Boot Maven project will be compatible, as ZenWave only generates business code."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Install the necessary tools"),": Follow the instructions in ",a.createElement(t.a,{href:"https://www.zenwave360.io/docs/getting-started/"},"Getting Started")," to install ZenWave SDK CLI and the ",a.createElement(t.a,{href:"https://plugins.jetbrains.com/plugin/22858-zenwave-domain-model-editor-for-zdl"},"ZenWave Domain Model Editor for ZDL for IntelliJ"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Execute the plugins"),": In IntelliJ, open the ",a.createElement(t.code,null,"zenwave-scripts.zw")," file and execute each plugin individually. Use the green ",a.createElement(t.code,null,"Play")," button that appears in the left margin next to each plugin."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Plugins that will be executed"),": By following these steps, you'll be executing the following plugins:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"ZDLToOpenAPIPlugin"),": Generates an OpenAPI definition from the ZDL model."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"ZDLToAsyncAPIPlugin"),": Generates an AsyncAPI v3 definition from the ZDL model."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"BackendApplicationDefaultPlugin"),": Generates the Spring Boot project source code. This is the core only, without controllers or adapters."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"OpenAPIControllersPlugin"),": Generates web controllers to expose the core through a REST API."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"SpringWebTestClientPlugin"),": Generates integration tests for web controllers."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"OpenAPIKaratePlugin"),": Generates acceptance tests based on KarateDSL for REST APIs."),"\n"),"\n"),"\n"),"\n",a.createElement(r.Ee,{src:h.Z,style:{marginTop:"10px"}}),"\n",a.createElement(t.p,null,"This will generate a complete and functional Spring-Boot project, although there are certain sections that will require your review and manual implementation:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"MapStruct Mappers"),": Although the generated mappers compile correctly, it's important to verify that they map data appropriately, especially in complex or non-trivial conversions."),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Automated Tests"),": Both unit and integration tests are generated as basic skeletons. You'll need to complete the test logic and provide realistic input data."),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Service Implementation"),": For methods that go beyond basic CRUD operations, you'll need to review and adjust the implementation that ZenWave has inferred according to your specific business logic."),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Key advantage"),": ZenWave generates only clean business code, without exotic dependencies. It uses exclusively standard technologies like Spring-Boot, Spring-Cloud, MapStruct, and Lombok (optional), ensuring compatibility with any existing project starter or archetype."),"\n",a.createElement(t.p,null,"Following these steps, you'll have a complete working project in minutes: API-First with OpenAPI and AsyncAPI, Clean/Hexagonal or layered architecture, unit tests with in-memory implementations and integration tests with SpringBootTest, Spring WebTestClient, and KarateDSL. Ready to experiment with all ZenWave 360 capabilities."),"\n",a.createElement(t.p,null,"In the following sections, we'll explore in detail how to model a domain using ZDL."),"\n",a.createElement(t.h2,{id:"practical-case-customers-service---from-zdl-model-to-spring-boot-project",style:{position:"relative"}},a.createElement(t.a,{href:"#practical-case-customers-service---from-zdl-model-to-spring-boot-project","aria-label":"practical case customers service   from zdl model to spring boot project permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Practical Case: Customers Service - From ZDL Model to Spring-Boot Project"),"\n",a.createElement(t.p,null,"Now that you've experienced ZenWave 360's capabilities, let's model step by step a simple service for managing a \"Customer Master\"."),"\n",a.createElement(t.p,null,"From a strategic point of view, this is a ",a.createElement(t.strong,null,"generic")," or ",a.createElement(t.strong,null,"supporting")," subdomain: it doesn't provide direct competitive value to the company, but it's crucial for the operation of other more critical subdomains."),"\n",a.createElement(t.p,null,"This customer master service will manage:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Creation, updating, and deletion of customers"),"\n",a.createElement(t.li,null,"Notification of state changes to other interested services via message queues"),"\n"),"\n",a.createElement(t.p,null,'Although it\'s a generic subdomain, it\'s essential to model it using the language of the business experts who will interact with it. For example, if experts refer to customers as "Customer" instead of "Client" or "Prospect", we must adopt that exact term in the model to avoid ambiguities and ensure the ubiquitous language permeates the entire system.'),"\n",a.createElement(t.p,null,'In this practical case, based on the mental model of the experts, we\'ll use "Customer" as the main entity with its key attributes.'),"\n",a.createElement(t.h3,{id:"creating-a-zdl-for-our-customers-service",style:{position:"relative"}},a.createElement(t.a,{href:"#creating-a-zdl-for-our-customers-service","aria-label":"creating a zdl for our customers service permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Creating a ZDL for our Customers Service"),"\n",a.createElement(t.p,null,"We'll start by creating a file with ",a.createElement(t.code,null,".zdl")," extension for our model. ZDL files begin with a global documentation section and a configuration section where we can define global properties that will be used by all ZenWave SDK plugins."),"\n",a.createElement(t.p,null,"These two sections are optional, but if they exist, they must go together at the beginning of the ZDL file."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'/**\r\n * Customer Master Service.\r\n *\r\n * This model describes a customer master service that manages customer data...\r\n *\r\n * Use zenwave-scripts.zw to generate your code from this model definition.\r\n */\r\nconfig {\r\n    title "Customer Master Service"\r\n    basePackage "io.zenwave360.example"\r\n    persistence jpa\r\n    databaseType postgresql\r\n\r\n    // ...\r\n}\n')),"\n",a.createElement(t.h3,{id:"modeling-domain-commands-and-events",style:{position:"relative"}},a.createElement(t.a,{href:"#modeling-domain-commands-and-events","aria-label":"modeling domain commands and events permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Modeling Domain Commands and Events"),"\n",a.createElement(t.p,null,"There are multiple approaches to start modeling a service: from the internal model, input commands, REST API, or published events..."),"\n",a.createElement(t.p,null,"In this case, we'll start by modeling the input commands and domain events that are part of this bounded context, that is, its public interface."),"\n",a.createElement(t.p,null,"We group commands in a service and document through which APIs the service exposes its commands and events."),"\n",a.createElement(t.p,null,"In ZDL, each service always manages one or several aggregates. Since we haven't created any aggregate yet, we'll simply create an empty ",a.createElement(t.code,null,"Customer")," entity and use it as the aggregate root."),"\n",a.createElement(t.p,null,"We create:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"A ",a.createElement(t.code,null,"CustomerService")," service to manage customers (the ",a.createElement(t.code,null,"Customer")," aggregate)"),"\n",a.createElement(t.li,null,"An input command ",a.createElement(t.code,null,"enrollCustomer")," that:","\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Receives input data from a ",a.createElement(t.code,null,"CustomerInput")),"\n",a.createElement(t.li,null,"Returns the newly created aggregate ",a.createElement(t.code,null,"Customer")),"\n",a.createElement(t.li,null,"Emits a domain event ",a.createElement(t.code,null,"CustomerEnrolled")),"\n"),"\n"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"NOTE"),": Commands can also receive the aggregate entity itself as an input parameter, in this case ",a.createElement(t.code,null,"Customer"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},"@aggregate\r\nentity Customer { }\r\n\r\n/** ReadModel: contains the information needed to create a customer */\r\ninput CustomerInput {\r\n    /** Customer name */\r\n    name String required maxlength(254)\r\n    /** Customer familiar name is how we refer to the customer in a friendly way */\r\n    familiarName String required maxlength(254)\r\n    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\r\n}\r\n\r\nservice CustomerService for (Customer) {\r\n    /** Enroll Customer Command: creates a new customer */\r\n    enrollCustomer(CustomerInput) Customer withEvents CustomerEnrolled\r\n}\r\n\r\nevent CustomerEnrolled {\r\n    customerId String\r\n    customer Customer\r\n}\n")),"\n",a.createElement(t.h3,{id:"connecting-the-service-with-the-outside-via-apis",style:{position:"relative"}},a.createElement(t.a,{href:"#connecting-the-service-with-the-outside-via-apis","aria-label":"connecting the service with the outside via apis permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Connecting the Service with the Outside via APIs"),"\n",a.createElement(t.p,null,"Now we're going to document how our ",a.createElement(t.code,null,"CustomerService")," will communicate with the outside world through REST and asynchronous APIs."),"\n",a.createElement(t.p,null,"For this, we'll use certain annotations (decorators) to document"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'@rest("/customers")\r\nservice CustomerService for (Customer) {\r\n    @post\r\n    enrollCustomer(CustomerInput) Customer withEvents CustomerEnrolled\r\n}\r\n\r\n@asyncapi({ channel: "CustomerEvents", topic: "customer.events" })\r\nevent CustomerEnrolled {\r\n  //...\r\n}\n')),"\n",a.createElement(t.p,null,"These annotations serve not only to document how our service communicates with the outside, but also thanks to ZenWave SDK plugins (",a.createElement(t.code,null,"ZDLToOpenAPIPlugin")," and ",a.createElement(t.code,null,"ZDLToAsyncAPIPlugin"),"), they allow us to generate a preliminary version of said APIs."),"\n",a.createElement(t.p,null,"The ZDL format has evolved as an IDL language to define both OpenAPI and AsyncAPI type APIs almost completely:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://www.zenwave360.io/docs/zenwave-sdk/exposing-a-rest-api/"},"Exposing a REST API")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://www.zenwave360.io/docs/zenwave-sdk/producing-domain-events/"},"Producing Domain Events")),"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://www.zenwave360.io/docs/zenwave-sdk/consuming-async-commands/"},"Consuming Async Commands")),"\n"),"\n",a.createElement(t.h4,{id:"converting-zdl-to-openapi",style:{position:"relative"}},a.createElement(t.a,{href:"#converting-zdl-to-openapi","aria-label":"converting zdl to openapi permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Converting ZDL to OpenAPI"),"\n",a.createElement(t.p,null,"The syntax inherited from JHipster JDL allows defining request and response payloads in a compact way:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Field names"),": Using the domain's ubiquitous language"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Data types"),": String, Integer, Long, Boolean, etc."),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Validations"),": required, maxlength, pattern, min, max, etc."),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Relationships and nested entities"),": For complex data structures"),"\n"),"\n",a.createElement(t.p,null,"For defining different endpoints, we use the following annotations:"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Service configuration:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,'@rest("/<path>")')," - Defines the service's base path"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"HTTP methods:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"@post"),", ",a.createElement(t.code,null,"@get"),", ",a.createElement(t.code,null,"@put"),", ",a.createElement(t.code,null,"@delete"),", ",a.createElement(t.code,null,"@patch")," - Specify the HTTP method for each command"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Advanced endpoint configuration:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,'@put("/{customerId}")')," - Defines routes with path parameters"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,'@post({ path: "/search", params: {search: String}, status: 200 })'),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Includes query params and their types"),"\n",a.createElement(t.li,null,"Custom response codes: POST by default generates status ",a.createElement(t.code,null,"201"),", in the case of a search ",a.createElement(t.code,null,"200")," is more appropriate"),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"@paginated")," - Indicates that the endpoint returns paginated results"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,'@filedownload("documentData.data")')," - File download endpoint (binary), where ",a.createElement(t.code,null,"documentData.data")," is the field containing the file data"),"\n",a.createElement(t.li,null,a.createElement(t.code,null,'@fileupload("myfile")')," - Multipart endpoint with ",a.createElement(t.code,null,"myfile")," field of binary type for file upload"),"\n"),"\n",a.createElement(t.p,null,"The following example shows a complete service with CRUD operations:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'@rest("/customers")\r\nservice CustomerService for (Customer) {\r\n    @post\r\n    createCustomer(Customer) Customer withEvents CustomerEvent\r\n\r\n    @get("/{id}")\r\n    getCustomer(id) Customer?\r\n\r\n    @put("/{id}")\r\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\r\n\r\n    @delete("/{id}")\r\n    deleteCustomer(id) withEvents CustomerEvent\r\n\r\n    @post({ path: "/search", status: 200 }) @paginated\r\n    searchCustomers(CustomerSearchCriteria) Customer[]\r\n}\n')),"\n",a.createElement(r.TJ,{text1:"When using the `ZDLToOpenAPIPlugin`, the following",sourceTitle:"ZDL Model",sourceLanguage:"zdl",sourceUrl:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl",text2:"would produce this:",outputTitle:"OpenAPI Definition",outputLanguage:"yaml",outputUrl:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml"}),"\n",a.createElement(t.p,null,"For more details on how to define REST APIs in ZDL, see the documentation on ",a.createElement(t.a,{href:"https://www.zenwave360.io/docs/zenwave-sdk/exposing-a-rest-api/"},"Exposing a REST API"),"."),"\n",a.createElement(t.h4,{id:"converting-zdl-to-asyncapi",style:{position:"relative"}},a.createElement(t.a,{href:"#converting-zdl-to-asyncapi","aria-label":"converting zdl to asyncapi permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Converting ZDL to AsyncAPI"),"\n",a.createElement(t.p,null,"Defining AsyncAPI APIs with ZDL is equally simple and straightforward."),"\n",a.createElement(t.p,null,"The process consists of creating ",a.createElement(t.code,null,"event")," type entities that follow the same syntax rules as ",a.createElement(t.code,null,"entity")," entities: field names, data types, validations, documentation, annotations, and nested entities."),"\n",a.createElement(t.p,null,"Once events are defined, we annotate them with ",a.createElement(t.code,null,"@asyncapi")," to specify:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,a.createElement(t.code,null,"channel")),": Name of the channel where events are published. Multiple events can share the same channel, especially useful for AVRO type events"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,a.createElement(t.code,null,"topic")),": Name of the specific topic for publication. In AsyncAPI v3 corresponds to the ",a.createElement(t.code,null,"address")," field of the channel definition"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Practical example:")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'@copy(Customer)\r\n@asyncapi({ channel: "CustomersChannel", topic: "customers" })\r\nevent CustomerEvent {\r\n    id Long required\r\n    version Integer\r\n    // All Customer fields are copied here, except relationships\r\n    paymentMethods PaymentMethod[]\r\n}\n')),"\n",a.createElement(r.TJ,{text1:"When using the `ZDLToAsyncAPIPlugin`, the following",sourceTitle:"ZDL Entity Model",sourceLanguage:"zdl",sourceUrl:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl",text2:"would produce this:",outputTitle:"AsyncAPI Definition",outputLanguage:"yaml",outputUrl:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml",text3:"with all event schemas and corresponding channel configurations."}),"\n",a.createElement(t.h3,{id:"modeling-the-customer-aggregate",style:{position:"relative"}},a.createElement(t.a,{href:"#modeling-the-customer-aggregate","aria-label":"modeling the customer aggregate permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Modeling the Customer Aggregate"),"\n",a.createElement(t.p,null,"Now we'll define the internal structure of the ",a.createElement(t.code,null,"Customer")," aggregate, applying DDD principles:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Ubiquitous Language"),": We use the structure, field names, and descriptions (javadoc) to capture and document the domain-specific vocabulary"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Aggregate"),": We mark the ",a.createElement(t.code,null,"Customer")," entity with ",a.createElement(t.code,null,"@aggregate")," to indicate it's an aggregate root. For simplicity, we use a data-centric aggregate, although we could model a richer aggregate with specific domain behavior"),"\n"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},"/**\r\n* Customer entity: represents a customer in our system with their basic information and contact details\r\n*/\r\n@aggregate\r\nentity Customer {\r\n    /** Customer name */\r\n    name String required maxlength(254)\r\n\r\n    /** Customer email is used to contact the customer */\r\n    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\r\n\r\n    /** Customer can have multiple addresses, but at least one is required and max 5 */\r\n    @json addresses Address[] minlength(1) maxlength(5) {\r\n        street String required maxlength(254)\r\n        city String required maxlength(254)\r\n    }\r\n}\r\n\r\n/** PaymentMethod entity: represents a payment method associated with a customer */\r\nentity PaymentMethod {\r\n    type PaymentMethodType required\r\n    cardNumber String required\r\n}\r\n\r\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\r\n\r\nrelationship OneToMany {\r\n    /** Customer has multiple payment methods, but at least one is required and max 3 */\r\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\r\n}\n")),"\n",a.createElement(t.h4,{id:"about-relational-andor-document-models",style:{position:"relative"}},a.createElement(t.a,{href:"#about-relational-andor-document-models","aria-label":"about relational andor document models permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"About Relational and/or Document Models"),"\n",a.createElement(t.p,null,"ZDL supports both ",a.createElement(t.strong,null,"Relational Model")," design (inherited from JHipster JDL) and ",a.createElement(t.strong,null,"Document Models"),", using nested entities for greater expressiveness and efficiency."),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Examples of nested entities:")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},"@aggregate\r\nentity Customer {\r\n  oneAddress Address\r\n}\r\n@embedded\r\nentity Address {\r\n  street String\r\n}\n")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},"@aggregate\r\nentity Customer {\r\n  addresses Address {\r\n    street String\r\n  }\r\n}\n")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},"@aggregate\r\nentity Customer {\r\n  addresses Address {\r\n    street String\r\n  }\r\n  manyAddresses Address[]\r\n}\n")),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Considerations for relational models (JPA):")),"\n",a.createElement(t.p,null,"In the case of relational models, nested entities have specific semantics:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Simple nested entities"),": Map to columns in the same table as the root entity"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Arrays of nested entities"),": Not directly supported in the relational model, but can be stored in a JSON column using the ",a.createElement(t.code,null,"@json")," decorator"),"\n"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},"@aggregate\r\nentity Customer {\r\n  @json addresses Address[] {\r\n    street String\r\n  }\r\n}\n")),"\n",a.createElement(t.h3,{id:"zenwave-sdk-scripts-file",style:{position:"relative"}},a.createElement(t.a,{href:"#zenwave-sdk-scripts-file","aria-label":"zenwave sdk scripts file permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ZenWave SDK Scripts File"),"\n",a.createElement(t.p,null,"The ",a.createElement(t.a,{href:"https://plugins.jetbrains.com/plugin/22858-zenwave-domain-model-editor-for-zdl"},"ZenWave Domain Model Editor for ZDL for IntelliJ")," allows configuring and executing ZenWave SDK plugins directly from the editor."),"\n",a.createElement(t.p,null,"For this, we use a file with ",a.createElement(t.code,null,".zw")," extension that contains the configurations of the different ZenWave SDK plugins in the ",a.createElement(t.code,null,"config")," section, following this format:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'config {\r\n    // Global configuration options\r\n    zdlFile "zenwave-model.zdl"\r\n\r\n    plugins {\r\n        /** Description of this plugin execution */\r\n        PluginName {\r\n            // Plugin-specific options\r\n            // Override global options\r\n        }\r\n    }\r\n}\n')),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Advantages of this approach:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Shared configuration"),": Allows saving and sharing plugin configurations with the team"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Simplified execution"),": Facilitates plugin execution with a single click from the editor"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Reproducibility"),": Ensures all team members execute plugins with the same configuration"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Traceability"),": Maintains a history of configurations used for project construction"),"\n"),"\n",a.createElement(t.p,null,"Iterative execution of plugins is common, especially during initial development phases, to validate both the domain model and specific configurations for each plugin."),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Execution from the editor:")),"\n",a.createElement(t.p,null,"The IntelliJ plugin automatically detects ",a.createElement(t.code,null,".zw")," files and shows a ",a.createElement(t.code,null,"Play")," button in the left margin next to each plugin configuration. When clicked, the editor:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Automatically builds the necessary command line"),"\n",a.createElement(t.li,null,"Executes it in an integrated console"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Important requirement"),": ",a.createElement(t.code,null,"jbang")," must be installed and available in the PATH of the console configured by default in IntelliJ."),"\n",a.createElement(t.p,null,a.createElement(t.img,{src:"./ZenWaveModelEditor-Plugins-light.png",alt:"ZenWaveModelEditor Plugins"})),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Configuration precedence:")),"\n",a.createElement(t.p,null,"It's important to understand that configurations are applied following a specific hierarchy, where the most specific ones take priority over the more general ones:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Command line configurations")," (highest priority)"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Plugin-specific configurations")," (in the ",a.createElement(t.code,null,"*.zw")," file)"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Global configurations")," (in the ",a.createElement(t.code,null,"*.zw")," file)"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Model configurations")," (in the ",a.createElement(t.code,null,"*.zdl")," file) (lowest priority)"),"\n"),"\n",a.createElement(t.p,null,"Model configurations (",a.createElement(t.code,null,"*.zdl"),") have the lowest priority in the hierarchy, allowing them to be overridden by more specific configurations. It's recommended to document in the model file ",a.createElement(t.code,null,"*.zdl")," the fundamental configurations related to the domain and project structure: ",a.createElement(t.code,null,"basePackage"),", ",a.createElement(t.code,null,"persistence"),", ",a.createElement(t.code,null,"layout"),", etc."),"\n",a.createElement(t.h2,{id:"generated-code-customization",style:{position:"relative"}},a.createElement(t.a,{href:"#generated-code-customization","aria-label":"generated code customization permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Generated Code Customization"),"\n",a.createElement(t.p,null,"ZenWave SDK arose from a personal need to have an analysis and design tool that could generate projects, initially Java and Spring-Boot, with sufficient flexibility to adapt to the needs of each project, team, and client."),"\n",a.createElement(t.h3,{id:"available-customization-types",style:{position:"relative"}},a.createElement(t.a,{href:"#available-customization-types","aria-label":"available customization types permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Available Customization Types"),"\n",a.createElement(t.p,null,"ZenWave SDK offers different levels of customization that adapt to different needs and complexity levels:"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Basic Customization:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Architecture layouts"),": Choose between different architectural styles (layers, clean/hexagonal, simple packaging)"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Package configuration"),": Customize the structure of generated packages"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Modular monoliths"),": Configure multiple modules sharing common base classes"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Intermediate Customization:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Custom templates"),": Modify specific templates for small adjustments (annotations, custom starters, etc.)"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Advanced Customization:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Classpath extension"),": Add custom dependencies and plugins via JBang"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Total customization"),": Example of complete substitution replacing Java with Kotlin"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Plugin creation"),": Develop completely new plugins for specific cases"),"\n"),"\n",a.createElement(t.h3,{id:"basic-customization",style:{position:"relative"}},a.createElement(t.a,{href:"#basic-customization","aria-label":"basic customization permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Basic Customization"),"\n",a.createElement(t.h4,{id:"architecture-layouts",style:{position:"relative"}},a.createElement(t.a,{href:"#architecture-layouts","aria-label":"architecture layouts permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Architecture Layouts"),"\n",a.createElement(t.p,null,"The simplest way to customize generated code is by selecting the architectural layout that best fits your project:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'config {\r\n    title "My Backend Application"\r\n    basePackage "io.zenwave360.example"\r\n    persistence jpa\r\n    databaseType postgresql\r\n\r\n    // Available options:\r\n    // DefaultProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout\r\n    // CleanHexagonalProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\r\n    layout CleanHexagonalProjectLayout\r\n}\n')),"\n",a.createElement(t.p,null,"You can check the source code of each layout in the ZenWave SDK repository:"),"\n",a.createElement(r.rv,{summary:"LayeredProjectLayout",visibleRange:"3,33",language:"java",collapsed:!0,showLegend:!0,url:"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java"}),"\n",a.createElement(r.rv,{summary:"CleanHexagonalProjectLayout",visibleRange:"3,33",language:"java",collapsed:!0,showLegend:!0,url:"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java"}),"\n",a.createElement(r.rv,{summary:"SimpleDomainProjectLayout",visibleRange:"3,33",language:"java",collapsed:!0,showLegend:!0,url:"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java"}),"\n",a.createElement(t.p,null,"You could also create your own layout class, add it to the classpath via JBang, and reference it here with the fully qualified class name."),"\n",a.createElement(t.h4,{id:"package-configuration",style:{position:"relative"}},a.createElement(t.a,{href:"#package-configuration","aria-label":"package configuration permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Package Configuration"),"\n",a.createElement(t.p,null,"You can customize any package path in the chosen layout:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'config {\r\n    layout CleanHexagonalProjectLayout\r\n    \r\n    // Specific package customization\r\n    layout.entitiesPackage "{{basePackage}}.core.model"\r\n    layout.openApiApiPackage "{{basePackage}}.web"\r\n    layout.openApiModelPackage "{{basePackage}}.web.dtos"\r\n}\n')),"\n",a.createElement(t.h4,{id:"modular-monoliths",style:{position:"relative"}},a.createElement(t.a,{href:"#modular-monoliths","aria-label":"modular monoliths permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Modular Monoliths"),"\n",a.createElement(t.p,null,"Initially, ZenWave SDK was designed to generate microservices, although nothing prevents using it to generate modules of a monolith."),"\n",a.createElement(t.p,null,"The main peculiarity when building modular monoliths is sharing base classes between different modules to avoid code duplication."),"\n",a.createElement(t.p,null,"For monolithic projects, it's necessary to configure the module's base package name, which will be the root package of all packages generated by ZenWave SDK (equivalent to ",a.createElement(t.code,null,"basePackage")," in microservices)."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'// Module-specific configuration\r\nconfig {\r\n    title "Customer Module"\r\n    layout CleanHexagonalProjectLayout\r\n    layout.moduleBasePackage "io.zenwave360.example.modules.customers"\r\n}\n')),"\n",a.createElement(t.p,null,"And also configure the base packages to share classes between modules, as they will probably be at a higher level than the modules themselves."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'// Common configuration for all modules\r\nconfig {\r\n    title "Modular Monolith"\r\n    basePackage "io.zenwave360.example"\r\n\r\n    // Packages shared between modules\r\n    layout.commonPackage "{{basePackage}}.common"\r\n    layout.infrastructureRepositoryCommonPackage "{{commonPackage}}"\r\n    layout.adaptersWebMappersCommonPackage "{{commonPackage}}.mappers"\r\n}\n')),"\n",a.createElement(t.h3,{id:"intermediate-customization",style:{position:"relative"}},a.createElement(t.a,{href:"#intermediate-customization","aria-label":"intermediate customization permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Intermediate Customization"),"\n",a.createElement(t.h4,{id:"custom-templates",style:{position:"relative"}},a.createElement(t.a,{href:"#custom-templates","aria-label":"custom templates permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Custom Templates"),"\n",a.createElement(t.p,null,"For specific modifications without creating a complete plugin, you can override individual templates:"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Process:")),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Locate the original template in the ZenWave SDK repository"),"\n",a.createElement(t.li,null,"Copy the template to ",a.createElement(t.code,null,".zenwave/templates/[original-path]")," in your project"),"\n",a.createElement(t.li,null,"Modify the content according to your needs"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Example:")," Customize Spring Data repositories with a base class:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,".zenwave/templates/io/zenwave360/sdk/plugins/BackendApplicationDefaultGenerator/\r\n  src/main/java/core/outbound/jpa/imperative/EntityRepository.java.hbs\n")),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Limitations:")," This approach allows modifying templates but not adding new helpers or changing generation logic."),"\n",a.createElement(t.h3,{id:"advanced-customization",style:{position:"relative"}},a.createElement(t.a,{href:"#advanced-customization","aria-label":"advanced customization permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Advanced Customization"),"\n",a.createElement(t.h4,{id:"classpath-extension-with-jbang",style:{position:"relative"}},a.createElement(t.a,{href:"#classpath-extension-with-jbang","aria-label":"classpath extension with jbang permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Classpath Extension with JBang"),"\n",a.createElement(t.p,null,"For customizations requiring new dependencies or plugins, you can use JBang's magic, for example by creating a ",a.createElement(t.code,null,"jbang-catalog.json")," file in the project root, which would override ZenWave SDK's classpath when invoked from that directory:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-json"},'{\r\n  "catalogs": {},\r\n  "aliases": {\r\n    "zw": {\r\n      "script-ref": "io.github.zenwave360.zenwave-sdk:zenwave-sdk-cli:RELEASE",\r\n      "dependencies": [\r\n        "org.slf4j:slf4j-simple:1.7.36",\r\n        "<your-custom-dependency>",\r\n        // ... standard ZenWave dependencies\r\n      ],\r\n      "main": "io.zenwave360.sdk.Main"\r\n    }\r\n  }\r\n}\n')),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Important note:")," Dependencies added at the beginning will override ZenWave SDK classes."),"\n",a.createElement(t.h4,{id:"total-customization-example-of-complete-substitution-replacing-java-with-kotlin",style:{position:"relative"}},a.createElement(t.a,{href:"#total-customization-example-of-complete-substitution-replacing-java-with-kotlin","aria-label":"total customization example of complete substitution replacing java with kotlin permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Total customization: Example of complete substitution replacing Java with Kotlin"),"\n",a.createElement(t.p,null,"ZenWave SDK allows total customization. In fact, it includes a complete customization that replaces Java with Kotlin."),"\n",a.createElement(t.p,null,"You can check the ",a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-sdk/tree/main/plugins/customizations/kotlin-backend-application"},"Kotlin customization source code")," to see how it's implemented."),"\n",a.createElement(t.p,null,"In practical terms, to use the Kotlin customization, simply configure the ",a.createElement(t.code,null,"templates")," option with the corresponding class in the following plugins:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-zdl"},'config {\r\n    zdlFile "zenwave-model.zdl"\r\n\r\n    plugins {\r\n        BackendApplicationDefaultPlugin {\r\n            templates "new io.zenwave360.sdk.plugins.kotlin.BackendApplicationKotlinTemplates()"\r\n        }\r\n\r\n        OpenAPIControllersPlugin {\r\n            openapiFile "src/main/resources/public/apis/openapi.yml"\r\n            templates "new io.zenwave360.sdk.plugins.kotlin.OpenAPIControllersKotlinTemplates()"\r\n        }\r\n\r\n        SpringWebTestClientPlugin {\r\n            openapiFile "src/main/resources/public/apis/openapi.yml"\r\n            templates "new io.zenwave360.sdk.plugins.kotlin.SpringWebTestClientKotlinTemplates()"\r\n        }\r\n    }\r\n}\n')),"\n",a.createElement(t.h4,{id:"creating-custom-plugins",style:{position:"relative"}},a.createElement(t.a,{href:"#creating-custom-plugins","aria-label":"creating custom plugins permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Creating Custom Plugins"),"\n",a.createElement(t.p,null,"For specific needs, you can create completely new plugins that generate any type of artifact: code, APIs, documentation, tests..."),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Available tools:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"ZDL Parser"),"\n",a.createElement(t.li,null,"OpenAPI/AsyncAPI Parser with reference resolution"),"\n",a.createElement(t.li,null,"Java code formatters (Google, Palantir, Spring) and Kotlin (ktfmt)"),"\n",a.createElement(t.li,null,"Handlebars template engine"),"\n"),"\n",a.createElement(t.p,null,"You can base your work on any existing plugin and/or use the ",a.createElement(t.code,null,"ZdlToJsonPlugin")," Plugin to inspect the ZDL model structure and understand the transformations needed to achieve your goal."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"jbang zw -p ZdlToJsonPlugin zdlFile=zenwave-model.zdl\n")),"\n",a.createElement(t.h2,{id:"complete-spring-boot-project-with-kotlin",style:{position:"relative"}},a.createElement(t.a,{href:"#complete-spring-boot-project-with-kotlin","aria-label":"complete spring boot project with kotlin permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Complete Spring-Boot Project with Kotlin"),"\n",a.createElement(t.p,null,"As a practical demonstration of everything explained, we have developed a complete project that implements DDD principles using ZenWave SDK:"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"๐ ",a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/tree/main/examples/kustomer-address-jpa"},"Kustomer with Address and Payment Methods in JPA"))),"\n",a.createElement(t.h3,{id:"technology-stack",style:{position:"relative"}},a.createElement(t.a,{href:"#technology-stack","aria-label":"technology stack permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Technology Stack"),"\n",a.createElement(t.p,null,"We have chosen a simple but complete technology stack that can serve as a solid foundation for any modern enterprise microservice:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Spring-Boot 3.5.x"),"\n",a.createElement(t.li,null,"Hibernate"),"\n",a.createElement(t.li,null,"Spring-Data-JPA"),"\n",a.createElement(t.li,null,"MapStruct"),"\n",a.createElement(t.li,null,"OpenAPI Generator"),"\n",a.createElement(t.li,null,"AsyncAPI Generator (ZenWave SDK)"),"\n",a.createElement(t.li,null,"Avro + Avro Compiler"),"\n",a.createElement(t.li,null,"Spring-Cloud-Streams"),"\n",a.createElement(t.li,null,"Spring-Security"),"\n",a.createElement(t.li,null,"TestContainers with Docker Compose"),"\n"),"\n",a.createElement(t.h3,{id:"functionality-and-domain-model",style:{position:"relative"}},a.createElement(t.a,{href:"#functionality-and-domain-model","aria-label":"functionality and domain model permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Functionality and Domain Model"),"\n",a.createElement(t.p,null,"The project implements complete management of the ",a.createElement(t.code,null,"Customer")," ",a.createElement(t.strong,null,"aggregate")," with the following characteristics:"),"\n",a.createElement(t.h4,{id:"entities-and-value-objects",style:{position:"relative"}},a.createElement(t.a,{href:"#entities-and-value-objects","aria-label":"entities and value objects permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Entities and Value Objects"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Customer"),": Aggregate root entity"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Address"),": Collection of addresses persisted as JSON in database"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"PaymentMethod"),": ",a.createElement(t.code,null,"OneToMany")," relationship managed by JPA/Hibernate"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"PaymentMethodType"),": Enum with custom converter (persists as integer)"),"\n"),"\n",a.createElement(t.h4,{id:"available-operations",style:{position:"relative"}},a.createElement(t.a,{href:"#available-operations","aria-label":"available operations permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Available Operations"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"โ ",a.createElement(t.strong,null,"Complete CRUD")," via REST API"),"\n",a.createElement(t.li,null,"๐ ",a.createElement(t.strong,null,"Paginated search")," with filters"),"\n",a.createElement(t.li,null,"๐ก ",a.createElement(t.strong,null,"Domain events")," published to Kafka for each operation"),"\n",a.createElement(t.li,null,"๐ ",a.createElement(t.strong,null,"Authentication")," with Spring Security"),"\n"),"\n",a.createElement(t.h3,{id:"zenwave-sdk-models",style:{position:"relative"}},a.createElement(t.a,{href:"#zenwave-sdk-models","aria-label":"zenwave sdk models permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ZenWave SDK Models"),"\n",a.createElement(t.p,null,"The project was built using the following ZenWave SDK models:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/kustomer-address-jpa/zenwave-model.zdl"},"zenwave-model.zdl")),": Domain model definition"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/kustomer-address-jpa/zenwave-scripts.zdl"},"zenwave-scripts.zw")),": Code generation scripts"),"\n"),"\n",a.createElement(t.h3,{id:"running-the-project",style:{position:"relative"}},a.createElement(t.a,{href:"#running-the-project","aria-label":"running the project permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Running the Project"),"\n",a.createElement(t.p,null,"Follow the instructions in the ",a.createElement(t.strong,null,a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/kustomer-address-jpa/README.md"},"README.md"))," to run the project:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"# Start infrastructure (Kafka, PostgreSQL)\r\ndocker-compose up -d\r\n\r\n# Run the application\r\nmvn spring-boot:run -Dspring-boot.run.profiles=local\n")),"\n",a.createElement(t.p,null,"You can access the functionality through:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"SwaggerUI"),": ",a.createElement(t.a,{href:"http://localhost:8080/swagger-ui/index.html"},"http://localhost:8080/swagger-ui/index.html")),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Credentials"),": ",a.createElement(t.code,null,"admin/password")),"\n"),"\n",a.createElement(t.h2,{id:"conclusion",style:{position:"relative"}},a.createElement(t.a,{href:"#conclusion","aria-label":"conclusion permalink",className:"anchor before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Conclusion"),"\n",a.createElement(t.p,null,"In this article, we explored how ZenWave 360ยบ bridges the gap between Domain-Driven Design theory and practical implementation. We demonstrated how ZenWave Domain Language (ZDL) serves as an effective Ubiquitous Language that captures the mental model of business experts and automatically propagates it throughout the entire development process."),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Key takeaways:")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"From Event Storming to Code"),": ZDL effectively maps Event Storming discoveries into a structured format that preserves business language while enabling automatic code generation"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Ubiquitous Language in Practice"),": Unlike traditional DDD implementations where the common language often gets lost in translation, ZDL ensures consistency from business conversations to executable code"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Complete Project Generation"),": With ZenWave SDK, we generated a fully functional Spring Boot Kotlin project including clean architecture, REST APIs, domain events, and comprehensive tests"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Customization Flexibility"),": The framework offers multiple levels of customization, from simple template overrides to complete architectural transformations"),"\n"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"The ZenWave 360ยบ advantage")," lies in its ability to maintain domain knowledge coherence throughout the development lifecycle. Business experts can recognize their language in the generated code, architects can ensure proper DDD implementation, and developers can focus on business logic rather than boilerplate infrastructure."),"\n",a.createElement(t.p,null,"By combining strategic DDD thinking with tactical implementation through automated code generation, ZenWave 360ยบ enables teams to build software that truly reflects the business domain while maintaining high code quality and architectural consistency."),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Ready to get started?")," Explore the ",a.createElement(t.a,{href:"https://github.com/ZenWave360/zenwave-playground/tree/main/examples/kustomer-address-jpa"},"complete Kotlin example project")," and see how ZenWave 360ยบ can accelerate your next DDD project."))}var p=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?a.createElement(t,e,a.createElement(g,e)):g(e)};function f(e){let{children:t}=e;return t}function v(e){return a.createElement(f,e,a.createElement(p,e))}},48171:function(e,t,n){n.d(t,{d2:function(){return a.d},zx:function(){return c},TJ:function(){return m.T},L0:function(){return g},$s:function(){return E},VS:function(){return b},gT:function(){return w},P7:function(){return f},Gz:function(){return p},S:function(){return R},VM:function(){return C},sd:function(){return I},kW:function(){return D},$D:function(){return k},DH:function(){return x},vC:function(){return S},LR:function(){return y},Ee:function(){return A},Gh:function(){return K},Bk:function(){return j},Nm:function(){return T},rv:function(){return O.r},X_:function(){return d.X},YZ:function(){return W},vk:function(){return F},BW:function(){return _},Mo:function(){return B}});var a=n(63585),l=n(27378),r=n(87573),i=n(30294);const o=e=>{let{background:t,backgroundHover:n,on:a}=e;return()=>(0,i.ivY)(["background-color:",";color:",";&:hover:not(:disabled){background-color:",";color:",";}&:active:not(:disabled){background-color:",";color:",";}"],t,a,n,a,n,a)},s=i.ZPm.buttonBox.withConfig({displayName:"Button__InnerButton",componentId:"sc-1qxez5q-0"})(["appearance:none;border-radius:base;transition:base;font-weight:500;border:0;display:inline-flex;align-items:center;cursor:pointer;font-size:16;padding:2 3;text-decoration:none !important;&:disabled{opacity:0.5;cursor:default;}&[data-variant='primary']{","}&[data-variant='success']{","}&[data-variant='danger']{","}&[data-variant='neutral']{","}"],o({background:"primary-600",backgroundHover:"primary-700",on:"white"}),o({background:"green-600",backgroundHover:"green-700",on:"white"}),o({background:"red-600",backgroundHover:"red-700",on:"white"}),o({background:"gray-300",backgroundHover:"gray-400",on:"black"})),c=l.forwardRef(((e,t)=>{let{variant:n="primary",children:a,...i}=e;return l.createElement(r.z,{ref:t,"data-variant":n},(e=>l.createElement(s,Object.assign({},e,i),a)))}));n(23824);var m=n(37898),u=(n(31729),n(63681)),d=n(84234);const h=i.ZPm.box.withConfig({displayName:"Feature__InnerFeature",componentId:"sc-17n9iec-0"})(["border-left:1;border-left-style:dashed;border-left-color:layout-border;padding-left:4 !important;padding-right:5 !important;"]),g=l.forwardRef(((e,t)=>l.createElement(h,Object.assign({ref:t,col:{xs:1,md:1/3},px:2,pt:4,pb:{xs:2,md:5}},e)))),p=i.ZPm.h2.withConfig({displayName:"Feature__FeatureTitle",componentId:"sc-17n9iec-1"})(["margin:3 0;font-size:16;font-weight:500;border-left:1;border-color:primary-400;margin-left:",";padding-left:",";"],u.th.px(-9),u.th.px(9)),f=i.ZPm.p.withConfig({displayName:"Feature__FeatureText",componentId:"sc-17n9iec-2"})(["color:on-background-light;font-size:15;text-align:justify;margin:4 0;"]),v=i.ZPm.img.withConfig({displayName:"Feature__InnerFeatureImage",componentId:"sc-17n9iec-3"})(["margin-top:3;"]),E=l.forwardRef(((e,t)=>l.createElement(v,Object.assign({ref:t,width:48,height:48},e)))),b=l.forwardRef(((e,t)=>l.createElement(d.X,Object.assign({ref:t,row:!0,my:-4,px:3},e)))),w=l.forwardRef(((e,t)=>l.createElement(i.x.section,Object.assign({ref:t,py:4,borderTop:1,borderBottom:1,borderColor:"layout-border"},e)))),y=i.ZPm.h1Box.withConfig({displayName:"Hero__HeroTitle",componentId:"sc-18tbum5-0"})(["font-size:38;font-weight:600;line-height:1.2;letter-spacing:-1.12px;margin:0 0 2;"," ",""],(0,u.up)("md",(0,i.ivY)(["padding-top:4;font-size:48;"])),(0,u.up)("xl",(0,i.ivY)(["font-size:60;"]))),S=i.ZPm.pBox.withConfig({displayName:"Hero__HeroTeaser",componentId:"sc-18tbum5-1"})(["font-size:18;margin:3 0;"," ",""],(0,u.up)("md",(0,i.ivY)(["font-size:20;"])),(0,u.up)("xl",(0,i.ivY)(["font-size:24;"]))),z=(0,i.ZPm)(d.X).withConfig({displayName:"Hero__InnerHero",componentId:"sc-18tbum5-2"})(["background-repeat:no-repeat;background-position:top -5% center;background-size:100% auto;padding-top:65%;text-align:center;"," ",""],(0,u.up)("md",(0,i.ivY)(["padding-top:0;margin-top:5;background-position:center right;background-size:58% auto;min-height:400;text-align:left;"])),(0,u.up)("xl",(0,i.ivY)(["margin-top:6;"]))),C=l.forwardRef(((e,t)=>{let{backgroundImageURL:n,...a}=e;return l.createElement(z,Object.assign({ref:t,backgroundImage:"url("+n+")"},a))})),k=l.forwardRef(((e,t)=>l.createElement(i.x.div,Object.assign({ref:t,w:{md:.5}},e)))),x=i.ZPm.sectionBox.withConfig({displayName:"Hero__HeroSection",componentId:"sc-18tbum5-3"})(["overflow:hidden;padding-top:2;padding-bottom:5;"]),D=l.forwardRef(((e,t)=>l.createElement(i.x.div,Object.assign({ref:t,row:!0,m:-2,justifyContent:{xs:"center",md:"initial"}},e)))),I=l.forwardRef(((e,t)=>l.createElement(i.x.div,Object.assign({ref:t,col:"auto",p:2},e))));var H=n(24956);const P=i.ZPm.div.withConfig({displayName:"Image__ImageContainer",componentId:"sc-1b0134e-0"})(["text-align:",";"],(e=>e.align)),L=i.ZPm.img.withConfig({displayName:"Image__InnerImage",componentId:"sc-1b0134e-1"})(["display:inline-block;"]),M=(e,t)=>"dark"===t?e.dark||e.src:e.light||e.src,A=l.forwardRef(((e,t)=>l.createElement(P,{align:e.align||"center",className:e.visible},l.createElement(L,Object.assign({ref:t,src:M(e,(0,H.If)()[0])},e)))));n(15239),n(83160);const Z=(0,i.ZPm)(i.x.cite).withConfig({displayName:"Quote__Cite",componentId:"sc-12i53kz-0"})(["display:block;text-align:right;margin-top:1rem;"]),j=l.forwardRef(((e,t)=>l.createElement(i.x.blockquote,Object.assign({ref:t,className:"quote"},e)))),T=l.forwardRef(((e,t)=>l.createElement(Z,Object.assign({ref:t},e)))),_=l.forwardRef(((e,t)=>l.createElement(i.x.section,Object.assign({ref:t,py:4,borderTop:1,borderBottom:1,borderColor:"layout-border"},e)))),W=i.ZPm.divBox.withConfig({displayName:"WideFeature",componentId:"sc-1ak5yjf-0"})(["display:block;",")"],(0,u.up)("md",(0,i.ivY)(["margin:0 20px;border-top:1px dashed;border-bottom:1px dotted;border-color:var(--xstyled-colors-layout-border,#d4d4d8);display:grid;grid-template-columns:1fr 1fr 1fr;"]))),B=i.ZPm.divBox.withConfig({displayName:"WideFeature__WideFeatureText",componentId:"sc-1ak5yjf-1"})(["padding:1rem;grid-column-start:span 2;font-size:18;"," ",""],(0,u.up)("md",(0,i.ivY)(["font-size:20;padding:3rem;padding-top:2rem;"])),(0,u.up)("xl",(0,i.ivY)(["font-size:24;"]))),N=i.ZPm.divBox.withConfig({displayName:"WideFeature__WideFeatureImageContainer",componentId:"sc-1ak5yjf-2"})(["padding:1rem;text-align:center;"]),q=i.ZPm.imgBox.withConfig({displayName:"WideFeature__InnerImage",componentId:"sc-1ak5yjf-3"})(["display:inline-block;"]),V=(e,t)=>"dark"===t?e.dark||e.src:e.light||e.src,F=l.forwardRef(((e,t)=>l.createElement(N,{className:e.className},l.createElement(q,Object.assign({ref:t,src:V(e,(0,H.If)()[0])},e))))),R=e=>{let{gist:t,file:n}=e;const a=(0,l.useRef)(null);(0,l.useEffect)((()=>{(async()=>{const e=n?"https://gist.githubusercontent.com/"+t+"/raw/"+n:"https://gist.githubusercontent.com/"+t+"/raw";try{const t=await fetch(e);if(t.ok){const e=22*(await t.text()).split("\n").length+40;a.current&&(a.current.style.height=e+"px")}else console.error("Failed to fetch Gist content")}catch(l){console.error("Error fetching Gist content:",l)}})()}),[t,n]);const r=n?"https://gist.github.com/"+t+".pibb?file="+n:"https://gist.github.com/"+t+".pibb",i=n?"https://gist.github.com/"+t+"#file-"+n.replace(/\./g,"-").toLowerCase():"https://gist.github.com/"+t;return l.createElement("div",{style:{border:"1px solid #ccc",padding:"10px 0 0 0",borderRadius:"5px"}},n&&l.createElement("header",{style:{marginLeft:"10px",fontStyle:"oblique"}},l.createElement("span",{role:"img","aria-label":"source code"},"๐๏ธ"),l.createElement("a",{href:i,target:"_blank",rel:"noopener noreferrer"},n)),l.createElement("iframe",{title:n,ref:a,src:r,width:"100%",frameBorder:"0",style:{margin:"0",padding:"0"}}))},K=l.forwardRef(((e,t)=>l.createElement(i.x.strong,Object.assign({ref:t,className:"orange"},e))));var O=n(29368)},38140:function(e,t,n){t.Z=n.p+"static/ZenWave-SDK-Design-Code-Loop.dark-475a45be0974497ccd4d749c50396bdd.png"},42142:function(e,t,n){t.Z=n.p+"static/ZenWave-SDK-Design-Code-Loop.light-8895761fbb21542d5b2c564f7614b590.png"},53468:function(e,t,n){t.Z=n.p+"static/plugin-screenshot-a27ba0713f3d33cf5b761c45e4c3debc.png"},75961:function(e,t,n){t.Z=n.p+"static/ZenWave-360-DDD-Feedback-Loop-with-ZW-Products.dark-7427760088d30aebaf151b93891b82bb.png"},20470:function(e,t,n){t.Z=n.p+"static/ZenWave-360-DDD-Feedback-Loop-with-ZW-Products.light-48139b6e3e76bdc45a8442974d936c9f.png"},68411:function(e,t,n){t.Z=n.p+"static/business-developers-software-triangle.light-c9f9eefba3ce2a408c6e623059931fa8.png"},85887:function(e,t,n){t.Z=n.p+"static/DLES-Brandolini-transparent-4440ac0f69a76514aff4d7acf91e4078.png"},51162:function(e,t,n){t.Z=n.p+"static/EventStorming-ZDL-Mapping-cb9c987d5d0aff110c5890481034ae20.png"}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-post-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-posts-ddd-in-practice-from-dsl-to-complete-spring-boot-kotlin-mdx-b3a3eacb87354127ed62.js.map