{"version":3,"file":"component---smooth-doc-src-templates-post-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-posts-transactional-out-box-with-async-api-and-spring-modulith-mdx-30c7e7821fecc63ccb45.js","mappings":"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","sources":["webpack://website/./pages/posts/TransactionalOutBoxWithAsyncAPIAndSpringModulith.mdx","webpack://website/../smooth-doc/src/templates/post.js","webpack://website/../smooth-doc/src/components/Button.js","webpack://website/../smooth-doc/src/components/Feature.js","webpack://website/../smooth-doc/src/components/Hero.js","webpack://website/../smooth-doc/src/components/Image.js","webpack://website/../smooth-doc/src/components/Quote.js","webpack://website/../smooth-doc/src/components/WideFeature.js","webpack://website/../smooth-doc/src/components/Gist.js","webpack://website/../smooth-doc/src/components/Orange.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Image} from \"smooth-doc/components\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    pre: \"pre\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"implementing-a-transactional-outbox-with-asyncapi-springmodulith-and-zenwavesdk\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#implementing-a-transactional-outbox-with-asyncapi-springmodulith-and-zenwavesdk\",\n    \"aria-label\": \"implementing a transactional outbox with asyncapi springmodulith and zenwavesdk permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Implementing a Transactional OutBox With AsyncAPI, SpringModulith and ZenWaveSDK\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"introduction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#introduction\",\n    \"aria-label\": \"introduction permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"When processes span multiple services without shared transaction boundaries, ensuring atomicity and consistency in distributed systems is challenging.\"), \"\\n\", React.createElement(_components.p, null, \"Distributed transactions with Two-Phase Commits (2PC) are complex, introduce significant performance overhead, and may not even be feasible for certain services.\"), \"\\n\", React.createElement(_components.p, null, \"The Outbox Pattern solves this by using a Database Transaction to store events in a dedicated \\\"outbox\\\" table within the same transaction as a database update. These events are then published to external systems, such as an email service or message broker, ensuring eventual consistency without the need for distributed transactions.\"), \"\\n\", React.createElement(_components.p, null, \"In this post, we’ll explore how we can implement a Transactional Outbox Pattern to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Persist data to a supported transactional database (e.g., SQL or MongoDB).\"), \"\\n\", React.createElement(_components.li, null, \"Send events to an external message broker like Kafka or RabbitMQ using Spring Cloud Stream.\"), \"\\n\", React.createElement(_components.li, null, \"Leverage Spring Modulith Events transactional features.\"), \"\\n\", React.createElement(_components.li, null, \"Use ZenWaveSDK Code Generator for AsyncAPI so you don’t need to write a single line of boilerplate code for the transactional outbox and event publishing.\"), \"\\n\"), \"\\n\", React.createElement(Image, {\n    dark: \"TransactionalOutBoxWithAsyncAPIAndSpringModulith-dark.png\",\n    light: \"TransactionalOutBoxWithAsyncAPIAndSpringModulith-light.png\",\n    alt: \"Transactional OutBox With AsyncAPI SpringCloud Stream And Spring Modulith\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"playground-project\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#playground-project\",\n    \"aria-label\": \"playground project permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Playground Project\"), \"\\n\", React.createElement(_components.p, null, \"Because working software is worth more than a thousand words, we’ll use a fully functional playground project that you can explore and test yourself.\"), \"\\n\", React.createElement(_components.p, null, \"We'll use the following project as our playground: \", React.createElement(_components.a, {\n    href: \"https://github.com/EDALearn/EDA-TransactionalOutbox-Modulith-JPA\"\n  }, \"EDA-TransactionalOutbox-Modulith-JPA\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"This project provides a simple API for managing customer details, including REST endpoints for CRUD operations. These operations publish event notifications to a Kafka topic, using Avro as the payload format.\"), \"\\n\", React.createElement(_components.p, null, \"Key components of the project include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"OpenAPI definition file\"), \": \", React.createElement(_components.a, {\n    href: \"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-example/src/main/resources/public/apis/openapi.yml\"\n  }, \"openapi.yml\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"AsyncAPI definition file\"), \": \", React.createElement(_components.a, {\n    href: \"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-example/src/main/resources/public/apis/asyncapi.yml\"\n  }, \"asyncapi.yml\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Avro schemas for events\"), \": \", React.createElement(_components.a, {\n    href: \"https://github.com/ZenWave360/zenwave-playground/tree/main/zenwave-jpa-example/src/main/resources/public/apis/avro\"\n  }, \"Avro schemas\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"distributed-transactions-problem-and-the-outbox-pattern\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#distributed-transactions-problem-and-the-outbox-pattern\",\n    \"aria-label\": \"distributed transactions problem and the outbox pattern permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Distributed Transactions Problem and The Outbox Pattern\"), \"\\n\", React.createElement(Image, {\n    src: \"CustomerEvents.plantuml.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"When managing a \", React.createElement(_components.code, null, \"Customer\"), \" entity, we encounter a significant challenge: ensuring the atomicity of persisting customer details in the database and publishing a related event to an external message broker. Since the database and the message broker do not share a transaction boundary, this can lead to potential inconsistencies.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"key-scenarios-highlighting-the-problem\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#key-scenarios-highlighting-the-problem\",\n    \"aria-label\": \"key scenarios highlighting the problem permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Key Scenarios Highlighting the Problem:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Event Sent Before Database Transaction Commits\"), \":\\r\\nIf the event is published before the database transaction is committed, a rollback of the transaction would leave the system in an inconsistent state, as the published event cannot be undone.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Event Sent After Database Transaction Commits\"), \":\\r\\nIf the event is published after the database transaction is committed, there’s no guarantee the event will actually be sent. A service crash or network failure could prevent the event from being published, resulting in data inconsistency.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Service\\r\\npublic class CustomerService {\\r\\n    // ...\\r\\n\\r\\n    @Transactional\\r\\n    public Customer createCustomer(Customer input) {\\r\\n        log.debug(\\\"Request to save Customer: {}\\\", input);\\r\\n        var customer = mapper.update(new Customer(), input);\\r\\n        customer = customerRepository.save(customer); // Persist to DB\\r\\n\\r\\n        var customerEvent = eventsMapper.asCustomerEvent(customer);\\r\\n        eventsProducer.onCustomerEvent(customerEvent); // Emit Event to external Broker\\r\\n        return customer;\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"With the transactional outbox pattern, instead of directly sending the event to the external system, the call to \", React.createElement(_components.code, null, \"eventsProducer.onCustomerEvent(customerEvent)\"), \" stores the event in a dedicated outbox table as part of the same transaction as the database update. An external process then reads from the outbox table and publishes the event to the message broker.\"), \"\\n\", React.createElement(_components.p, null, \"However, implementing this external process, managing the outbox table, and ensuring that events are published once and in the correct order can be complex and error-prone.\"), \"\\n\", React.createElement(_components.p, null, \"Fortunately, tools like \", React.createElement(_components.a, {\n    href: \"https://docs.spring.io/spring-modulith/reference/events.html#publication-registry\"\n  }, \"Spring Modulith’s Event Publication Registry\"), \" and the \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/zenwave-sdk/plugins/asyncapi-spring-cloud-streams3/\"\n  }, \"ZenWaveSDK Code Generator for AsyncAPI\"), \" simplify this process, so you can focus only on implementing your business logic.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"zenwavesdk-code-generation-for-asyncapi-and-spring-cloud-streams\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#zenwavesdk-code-generation-for-asyncapi-and-spring-cloud-streams\",\n    \"aria-label\": \"zenwavesdk code generation for asyncapi and spring cloud streams permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ZenWaveSDK Code Generation for AsyncAPI and Spring Cloud Streams\"), \"\\n\", React.createElement(_components.p, null, \"ZenWaveSDK generates all the boilerplate code needed to send and receive events using Spring Cloud Stream from an AsyncAPI definition file.\"), \"\\n\", React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/d5xddNWYR5I?si=G9MQO9afhNIw6ym2\",\n    title: \"AsyncAPI: Full Code Generation for Java with ZenWave SDK\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    referrerpolicy: \"strict-origin-when-cross-origin\",\n    allowfullscreen: true\n  }), \"\\n\", React.createElement(_components.p, null, \"From your AsyncAPI definition file, ZenWaveSDK generates:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"DTO/Models\"), \" for your event payloads.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Typed Header Objects\"), \" to ensure consistency.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"\\\"Intention-revealing\\\" Java interfaces\"), \" with methods named explicitly after your operationIds.\"), \"\\n\", React.createElement(_components.li, null, \"A lightweight implementation using Spring Cloud Streams that can be \", React.createElement(_components.code, null, \"@Autowire\"), \"d directly into your services.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"You can then configure Spring Cloud Stream to send and receive messages using any of the \", React.createElement(_components.a, {\n    href: \"https://docs.spring.io/spring-cloud-stream/reference/index.html\"\n  }, \"supported binders\"), \", such as Kafka or RabbitMQ. With ZenWaveSDK, you don’t need to write any boilerplate code, allowing you to focus entirely on your business logic.\"), \"\\n\", React.createElement(\"details\", null, React.createElement(\"summary\", null, \"ZenWave SDK Maven Plugin Configuration\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"  <plugin>\\r\\n    <groupId>io.zenwave360.sdk</groupId>\\r\\n    <artifactId>zenwave-sdk-maven-plugin</artifactId>\\r\\n    <version>${zenwave.version}</version>\\r\\n    <configuration>\\r\\n      <inputSpec>${project.basedir}/src/main/resources/public/apis/asyncapi.yml</inputSpec>\\r\\n      <addCompileSourceRoot>true</addCompileSourceRoot>\\r\\n      <addTestCompileSourceRoot>true</addTestCompileSourceRoot>\\r\\n    </configuration>\\r\\n    <executions>\\r\\n      <!-- DTOs -->\\r\\n      <!-- we skip DTOs generation in this case b/c we are using Avro for that -->\\r\\n\\r\\n      <!-- Generate PROVIDER -->\\r\\n      <execution>\\r\\n        <id>generate-asyncapi</id>\\r\\n        <phase>generate-sources</phase>\\r\\n        <goals>\\r\\n          <goal>generate</goal>\\r\\n        </goals>\\r\\n        <configuration>\\r\\n          <generatorName>spring-cloud-streams3</generatorName>\\r\\n          <configOptions>\\r\\n            <role>provider</role>\\r\\n            <style>imperative</style>\\r\\n            <transactionalOutbox>modulith</transactionalOutbox><!-- using Spring Modulith implementation -->\\r\\n            <modelPackage>${asyncApiModelPackage}</modelPackage>\\r\\n            <producerApiPackage>${asyncApiProducerApiPackage}</producerApiPackage>\\r\\n            <consumerApiPackage>${asyncApiConsumerApiPackage}</consumerApiPackage>\\r\\n          </configOptions>\\r\\n        </configuration>\\r\\n      </execution>\\r\\n    </executions>\\r\\n    <dependencies>\\r\\n      // ...\\r\\n    </dependencies>\\r\\n  </plugin>\\n\"))), \"\\n\", React.createElement(\"details\", null, React.createElement(\"summary\", null, \"Avro Maven Plugin Configuration\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"<plugin>\\r\\n  <groupId>org.apache.avro</groupId>\\r\\n  <artifactId>avro-maven-plugin</artifactId>\\r\\n  <version>1.11.1</version>\\r\\n  <executions>\\r\\n    <execution>\\r\\n      <goals>\\r\\n        <goal>schema</goal>\\r\\n      </goals>\\r\\n      <phase>generate-sources</phase>\\r\\n    </execution>\\r\\n  </executions>\\r\\n  <configuration>\\r\\n    <sourceDirectory>${project.basedir}/src/main/resources/public/apis/avro</sourceDirectory>\\r\\n    <outputDirectory>${project.basedir}/target/generated-sources/avro</outputDirectory>\\r\\n    <imports>\\r\\n      <import>${project.basedir}/src/main/resources/public/apis/avro/PaymentMethodType.avsc</import>\\r\\n      <import>${project.basedir}/src/main/resources/public/apis/avro/PaymentMethod.avsc</import>\\r\\n      <import>${project.basedir}/src/main/resources/public/apis/avro/Address.avsc</import>\\r\\n    </imports>\\r\\n  </configuration>\\r\\n</plugin>\\n\"))), \"\\n\", React.createElement(_components.p, null, \"To achieve this, we configure the \", React.createElement(_components.code, null, \"zenwave-sdk-maven-plugin\"), \" and, in this case, also the \", React.createElement(_components.code, null, \"avro-maven-plugin\"), \" in the \", React.createElement(_components.code, null, \"pom.xml\"), \" file. This setup ensures that the necessary code is generated in the \", React.createElement(_components.code, null, \"target/generated-sources\"), \" folder as part of your build process.\"), \"\\n\", React.createElement(_components.p, null, \"Since this configuration runs automatically during the build, every time you update your AsyncAPI definition file, you can be sure that your code remains in sync with your API definition.\"), \"\\n\", React.createElement(Image, {\n    dark: \"ZenWaveSDK-Target-Generated-Sources-With-Arrow.png\",\n    light: \"ZenWaveSDK-Target-Generated-Sources-With-Arrow-light.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"And because we configured the \", React.createElement(_components.code, null, \"transactionalOutbox\"), \" option to \", React.createElement(_components.code, null, \"modulith\"), \", ZenWaveSDK will generate the code to use Spring Modulith Events Publication Registry to manage the transactional outbox for you.\"), \"\\n\", React.createElement(Image, {\n    dark: \"ZenWaveSDK-TransactionalOutBox-Modulith-With-Arrows.png\",\n    light: \"ZenWaveSDK-TransactionalOutBox-Modulith-With-Arrows-light.png\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"spring-modulith-events-publication-registry\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#spring-modulith-events-publication-registry\",\n    \"aria-label\": \"spring modulith events publication registry permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Spring Modulith Events Publication Registry\"), \"\\n\", React.createElement(_components.p, null, \"Because Event Externalization is enabled, and \", React.createElement(_components.code, null, \"Message<?>\"), \" objects are configured for externalization (see below), these events are also stored transactionally in the Spring Modulith Event Publication Registry.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"spring:\\r\\n  modulith.events.externalization.enabled: true\\r\\n  modulith.events.jdbc.schema-initialization.enabled: true\\r\\n  modulith.events.republish-outstanding-events-on-restart: true\\n\")), \"\\n\", React.createElement(Image, {\n    dark: \"Modulith-Event-Publication-Registry.png\",\n    light: \"Modulith-Event-Publication-Registry-light.png\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"using-spring-cloud-streams-to-externalize-modulith-events\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#using-spring-cloud-streams-to-externalize-modulith-events\",\n    \"aria-label\": \"using spring cloud streams to externalize modulith events permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Using Spring Cloud Streams to Externalize Modulith Events\"), \"\\n\", React.createElement(_components.p, null, \"Now that Spring Modulith is managing our \", React.createElement(_components.code, null, \"Message<?>\"), \" events, we need to configure one of the many supported \", React.createElement(_components.a, {\n    href: \"https://docs.spring.io/spring-modulith/reference/events.html#externalization\"\n  }, \"event externalizers\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"If we were publishing POJOs in JSON format, we could use \", React.createElement(_components.code, null, \"spring-modulith-events-kafka\"), \" to externalize events to a Kafka topic. However, since we want to externalize \", React.createElement(_components.code, null, \"Message<?>\"), \" objects with Avro payloads, we will use \", React.createElement(_components.code, null, \"io.zenwave360.sdk:spring-modulith-events-scs\"), \", which supports serializing and deserializing \", React.createElement(_components.code, null, \"Message<?>\"), \" objects, with or without Avro payloads.\"), \"\\n\", React.createElement(_components.p, null, \"For more details, see \", React.createElement(_components.a, {\n    href: \"https://github.com/ZenWave360/spring-modulith-events-spring-cloud-stream\"\n  }, \"ZenWave360 Spring Modulith Events for Spring Cloud Stream\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"To enable this, add the following dependencies to your \", React.createElement(_components.code, null, \"pom.xml\"), \" file:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"<dependency><!-- Spring Cloud Stream Externalization for Message<?> -->\\r\\n    <groupId>io.zenwave360.sdk</groupId>\\r\\n    <artifactId>spring-modulith-events-scs</artifactId>\\r\\n    <version>${spring-modulith-events-scs.version}</version>\\r\\n</dependency>\\r\\n<dependency><!-- Needed for serializing Avro payloads to db storage as json -->\\r\\n    <groupId>com.fasterxml.jackson.dataformat</groupId>\\r\\n    <artifactId>jackson-dataformat-avro</artifactId>\\r\\n</dependency>\\n\")), \"\\n\", React.createElement(_components.p, null, \"And \", React.createElement(_components.code, null, \"@EnableSpringCloudStreamEventExternalization\"), \" to our Spring Boot Configuration:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"import io.zenwave360.modulith.events.scs.config.EnableSpringCloudStreamEventExternalization;\\r\\nimport org.springframework.context.annotation.Configuration;\\r\\n\\r\\n@Configuration\\r\\n@EnableSpringCloudStreamEventExternalization\\r\\nclass ExternalizationConfiguration {\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"This will route programmatically route our \", React.createElement(_components.code, null, \"Message<?>\"), \" objects to the correct Spring Cloud Stream binding, but you don't need to worry about any of this as it is handled automatically behind the scenes.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"// this is some of what you get when adding @EnableSpringCloudStreamEventExternalization\\r\\n@AutoConfiguration\\r\\n@AutoConfigureAfter(EventExternalizationAutoConfiguration.class)\\r\\n@ConditionalOnProperty(name = \\\"spring.modulith.events.externalization.enabled\\\", havingValue = \\\"true\\\",\\r\\n        matchIfMissing = true)\\r\\npublic class MessageExternalizationConfiguration {\\r\\n\\r\\n    @Bean\\r\\n    EventExternalizationConfiguration eventExternalizationConfiguration() {\\r\\n        return EventExternalizationConfiguration.externalizing()\\r\\n            .select(event -> annotatedAsExternalized().test(event)\\r\\n                    || event instanceof Message<?> && getTarget(event) != null)\\r\\n            .route(Message.class, event -> RoutingTarget.forTarget(getTarget(event)).withoutKey())\\r\\n            .build();\\r\\n    }\\r\\n\\r\\n    private String getTarget(Object event) {\\r\\n        if (event instanceof Message<?> message) {\\r\\n            return message.getHeaders()\\r\\n                .get(SpringCloudStreamEventExternalizer.SPRING_CLOUD_STREAM_SENDTO_DESTINATION_HEADER, String.class);\\r\\n        }\\r\\n        return null;\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"automagic-transactional-outbox-implementation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#automagic-transactional-outbox-implementation\",\n    \"aria-label\": \"automagic transactional outbox implementation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Automagic Transactional OutBox Implementation\"), \"\\n\", React.createElement(_components.p, null, \"Our original code is now \", React.createElement(_components.em, null, \"automagically\"), \" implementing the Transactional OutBox pattern using Spring Modulith Events Publication Registry and Spring Cloud Stream, all made possible by the ZenWaveSDK AsyncAPI Code Generator. 🚀🚀🚀\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Service\\r\\npublic class CustomerService {\\r\\n    // ...\\r\\n\\r\\n    @Transactional\\r\\n    public Customer createCustomer(Customer input) {\\r\\n        log.debug(\\\"Request to save Customer: {}\\\", input);\\r\\n        var customer = mapper.update(new Customer(), input);\\r\\n        customer = customerRepository.save(customer); // Persist to DB\\r\\n\\r\\n        var customerEvent = eventsMapper.asCustomerEvent(customer);\\r\\n        eventsProducer.onCustomerEvent(customerEvent); // Emit Event to external Broker via Tx OutBox\\r\\n        return customer;\\r\\n    }\\r\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/ivangsa/workspace/zenwave/ZenWave360.github.io/website/pages/posts/TransactionalOutBoxWithAsyncAPIAndSpringModulith.mdx\";\nimport {graphql} from \"gatsby\";\nexport const postQuery = graphql`\n  query PostPage($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n      }\n    }\n  }\n`;\nfunction PostTemplate({children}) {\n  return children;\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Button as AriakitButton } from 'ariakit/button'\r\nimport styled, { css } from '@xstyled/styled-components'\r\n\r\nconst variant =\r\n  ({ background, backgroundHover, on }) =>\r\n  () => {\r\n    return css`\r\n      background-color: ${background};\r\n      color: ${on};\r\n\r\n      &:hover:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n\r\n      &:active:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n    `\r\n  }\r\n\r\nconst InnerButton = styled.buttonBox`\r\n  appearance: none;\r\n  border-radius: base;\r\n  transition: base;\r\n  font-weight: 500;\r\n  border: 0;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 16;\r\n  padding: 2 3;\r\n  text-decoration: none !important;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n  }\r\n\r\n  &[data-variant='primary'] {\r\n    ${variant({\r\n      background: 'primary-600',\r\n      backgroundHover: 'primary-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='success'] {\r\n    ${variant({\r\n      background: 'green-600',\r\n      backgroundHover: 'green-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='danger'] {\r\n    ${variant({\r\n      background: 'red-600',\r\n      backgroundHover: 'red-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='neutral'] {\r\n    ${variant({\r\n      background: 'gray-300',\r\n      backgroundHover: 'gray-400',\r\n      on: 'black',\r\n    })}\r\n  }\r\n`\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ variant = 'primary', children, ...props }, ref) => {\r\n    return (\r\n      <AriakitButton ref={ref} data-variant={variant}>\r\n        {(buttonProps) => (\r\n          <InnerButton {...buttonProps} {...props}>\r\n            {children}\r\n          </InnerButton>\r\n        )}\r\n      </AriakitButton>\r\n    )\r\n  },\r\n)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { th, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst InnerFeature = styled.box`\r\n  border-left: 1;\r\n  border-left-style: dashed;\r\n  border-left-color: layout-border;\r\n  padding-left: 4 !important;\r\n  padding-right: 5 !important;\r\n`\r\n\r\nexport const Feature = React.forwardRef((props, ref) => (\r\n  <InnerFeature\r\n    ref={ref}\r\n    col={{ xs: 1, md: 1 / 3 }}\r\n    px={2}\r\n    pt={4}\r\n    pb={{ xs: 2, md: 5 }}\r\n    {...props}\r\n  />\r\n))\r\n\r\nexport const FeatureTitle = styled.h2`\r\n  margin: 3 0;\r\n  font-size: 16;\r\n  font-weight: 500;\r\n  border-left: 1;\r\n  border-color: primary-400;\r\n  margin-left: ${th.px(-9)};\r\n  padding-left: ${th.px(9)};\r\n`\r\n\r\nexport const FeatureText = styled.p`\r\n  color: on-background-light;\r\n  font-size: 15;\r\n  text-align: justify;\r\n  margin: 4 0;\r\n`\r\n\r\nconst InnerFeatureImage = styled.img`\r\n  margin-top: 3;\r\n`\r\n\r\nexport const FeatureImage = React.forwardRef((props, ref) => (\r\n  <InnerFeatureImage ref={ref} width={48} height={48} {...props} />\r\n))\r\n\r\nexport const FeatureList = React.forwardRef((props, ref) => (\r\n  <ScreenContainer ref={ref} row my={-4} px={3} {...props} />\r\n))\r\n\r\nexport const FeatureSection = React.forwardRef((props, ref) => (\r\n  <x.section\r\n    ref={ref}\r\n    py={4}\r\n    borderTop={1}\r\n    borderBottom={1}\r\n    borderColor=\"layout-border\"\r\n    {...props}\r\n  />\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nexport const HeroTitle = styled.h1Box`\r\n  font-size: 38;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  letter-spacing: -1.12px;\r\n  margin: 0 0 2;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 4;\r\n      font-size: 48;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 60;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const HeroTeaser = styled.pBox`\r\n  font-size: 18;\r\n  margin: 3 0;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      font-size: 20;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\n\r\nconst InnerHero = styled(ScreenContainer)`\r\n  background-repeat: no-repeat;\r\n  background-position: top -5% center;\r\n  background-size: 100% auto;\r\n  padding-top: 65%;\r\n  text-align: center;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 0;\r\n      margin-top: 5;\r\n      background-position: center right;\r\n      background-size: 58% auto;\r\n      min-height: 400;\r\n      text-align: left;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      margin-top: 6;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const Hero = React.forwardRef(\r\n  ({ backgroundImageURL, ...props }, ref) => {\r\n    return (\r\n      <InnerHero\r\n        ref={ref}\r\n        backgroundImage={`url(${backgroundImageURL})`}\r\n        {...props}\r\n      />\r\n    )\r\n  },\r\n)\r\n\r\nexport const HeroBody = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} w={{ md: 0.5 }} {...props} />\r\n})\r\n\r\nexport const HeroSection = styled.sectionBox`\r\n  overflow: hidden;\r\n  padding-top: 2;\r\n  padding-bottom: 5;\r\n`\r\n\r\nexport const HeroActionList = React.forwardRef((props, ref) => {\r\n  return (\r\n    <x.div\r\n      ref={ref}\r\n      row\r\n      m={-2}\r\n      justifyContent={{ xs: 'center', md: 'initial' }}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport const HeroAction = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} col=\"auto\" p={2} {...props} />\r\n})\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { useColorMode, th, x } from '@xstyled/styled-components'\r\n\r\nconst ImageContainer = styled.div`\r\n   text-align: ${props => props.align};\r\n`\r\nconst InnerImage = styled.img`\r\n  display: inline-block;\r\n`\r\nconst src = (props, colorMode) => {\r\n    return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const Image = React.forwardRef((props, ref) => (\r\n    <ImageContainer align={props.align || 'center'} className={props.visible}>\r\n        <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </ImageContainer>\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst Cite = styled(x.cite)`\r\n    display: block;\r\n    text-align: right;\r\n    margin-top: 1rem;\r\n`\r\n\r\nexport const Quote = React.forwardRef((props, ref) => {\r\n    return <x.blockquote ref={ref} className=\"quote\" {...props} />\r\n})\r\n\r\nexport const QuoteAuthor = React.forwardRef((props, ref) => {\r\n    return <Cite ref={ref} {...props} />\r\n})\r\n","import styled, {up, css, x, useColorMode} from '@xstyled/styled-components'\r\nimport React from \"react\";\r\n\r\nexport const WideFeatureSection = React.forwardRef((props, ref) => (\r\n    <x.section\r\n        ref={ref}\r\n        py={4}\r\n        borderTop={1}\r\n        borderBottom={1}\r\n        borderColor=\"layout-border\"\r\n        {...props}\r\n    />\r\n))\r\n\r\nexport const WideFeature = styled.divBox`\r\n  display: block;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        margin: 0 20px;\r\n        border-top: 1px dashed;\r\n        border-bottom: 1px dotted;\r\n        border-color: var(--xstyled-colors-layout-border,#d4d4d8);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      `,\r\n  )})\r\n`\r\n\r\nexport const WideFeatureText = styled.divBox`\r\n  padding: 1rem;\r\n  grid-column-start: span 2;\r\n\r\n  font-size: 18;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        font-size: 20;\r\n        padding: 3rem;\r\n        padding-top: 2rem;\r\n      `,\r\n  )}\r\n\r\n  ${up(\r\n      'xl',\r\n      css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\nconst WideFeatureImageContainer = styled.divBox`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`\r\n\r\nconst InnerImage = styled.imgBox`\r\n  display: inline-block;\r\n  //max-width: 300px;\r\n`\r\n\r\nconst src = (props, colorMode) => {\r\n  return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const WideFeatureImage = React.forwardRef((props, ref) => (\r\n    <WideFeatureImageContainer className={props.className}>\r\n      <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </WideFeatureImageContainer>\r\n))\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { marginLeft } from '@xstyled/styled-components'\r\n\r\nconst Gist = ({ gist, file }) => {\r\n  const iframeRef = useRef(null);\r\n\r\n  const fetchGistContent = async () => {\r\n    const url = file\r\n      ? `https://gist.githubusercontent.com/${gist}/raw/${file}`\r\n      : `https://gist.githubusercontent.com/${gist}/raw`;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n        const lineCount = text.split('\\n').length;\r\n        const lineHeight = 22; // Approximate line height in pixels\r\n        const height = lineCount * lineHeight + 40;\r\n        if (iframeRef.current) {\r\n          iframeRef.current.style.height = `${height}px`;\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch Gist content');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Gist content:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGistContent();\r\n  }, [gist, file]);\r\n\r\n  const src = file\r\n    ? `https://gist.github.com/${gist}.pibb?file=${file}`\r\n    : `https://gist.github.com/${gist}.pibb`;\r\n\r\n  const gistUrl = file\r\n    ? `https://gist.github.com/${gist}#file-${file.replace(/\\./g, '-').toLowerCase()}`\r\n    : `https://gist.github.com/${gist}`;\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #ccc', padding: '10px 0 0 0', borderRadius: '5px' }}>\r\n      {file && (\r\n        <header style={{ marginLeft: '10px', fontStyle: 'oblique' }}>\r\n          <span role=\"img\" aria-label=\"source code\">🗒️</span>\r\n          <a href={gistUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {file}\r\n          </a>\r\n        </header>\r\n      )}\r\n      <iframe\r\n        title={file}\r\n        ref={iframeRef}\r\n        src={src}\r\n        width=\"100%\"\r\n        frameBorder=\"0\"\r\n        style={{ margin: '0', padding: '0' }}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Gist };\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport { x } from '@xstyled/styled-components'\r\n\r\nexport const Orange = React.forwardRef((props, ref) => {\r\n  return <x.strong ref={ref} className=\"orange\" {...props} />\r\n})\r\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","p","ul","li","strong","code","h3","ol","pre","em","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","Image","dark","light","alt","src","width","height","title","frameborder","allow","referrerpolicy","allowfullscreen","wrapper","MDXLayout","PostTemplate","children","_ref","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","variant","background","backgroundHover","on","css","InnerButton","styled","Button","ref","_ref2","AriakitButton","buttonProps","InnerFeature","Feature","col","xs","md","px","pt","pb","FeatureTitle","th","FeatureText","InnerFeatureImage","FeatureImage","FeatureList","ScreenContainer","row","my","FeatureSection","x","py","borderTop","borderBottom","borderColor","HeroTitle","up","HeroTeaser","InnerHero","withConfig","Hero","backgroundImageURL","backgroundImage","HeroBody","w","HeroSection","HeroActionList","m","justifyContent","HeroAction","ImageContainer","align","InnerImage","colorMode","visible","useColorMode","Cite","Quote","QuoteAuthor","WideFeatureSection","WideFeature","WideFeatureText","WideFeatureImageContainer","WideFeatureImage","Gist","gist","file","iframeRef","useRef","useEffect","async","url","response","fetch","ok","text","split","length","current","console","error","fetchGistContent","gistUrl","replace","toLowerCase","border","padding","borderRadius","marginLeft","fontStyle","role","target","rel","frameBorder","margin","Orange"],"sourceRoot":""}