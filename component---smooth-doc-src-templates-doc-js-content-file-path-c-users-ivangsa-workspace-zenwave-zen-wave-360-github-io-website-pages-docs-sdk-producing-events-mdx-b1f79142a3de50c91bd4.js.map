{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-docs-sdk-producing-events-mdx-b1f79142a3de50c91bd4.js","mappings":"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","sources":["webpack://website/./pages/docs/SDK/ProducingEvents.mdx","webpack://website/../smooth-doc/src/templates/doc.js","webpack://website/../smooth-doc/src/components/Button.js","webpack://website/../smooth-doc/src/components/Feature.js","webpack://website/../smooth-doc/src/components/Hero.js","webpack://website/../smooth-doc/src/components/Image.js","webpack://website/../smooth-doc/src/components/Quote.js","webpack://website/../smooth-doc/src/components/WideFeature.js","webpack://website/../smooth-doc/src/components/Gist.js","webpack://website/../smooth-doc/src/components/Orange.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Image, Quote, QuoteAuthor} from \"smooth-doc/components\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"producing-domain-events\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#producing-domain-events\",\n    \"aria-label\": \"producing domain events permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Producing Domain Events\"), \"\\n\", React.createElement(_components.p, null, \"Producing Domain Events with AsyncAPI and ZenWave Maven Plugin\"), \"\\n\", React.createElement(_components.p, null, \"In this section you will learn how to produce domain events from your services and publish them to a message broker.\"), \"\\n\", React.createElement(_components.p, null, \"We will be using AsyncAPI specification to define our message structure, and use ZenWave SDK Maven Plugin to generate models (DTOs) and a producer implementation from your API-First definition.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"using-zenwave-zdl-as-definition-language-for-asyncapi\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#using-zenwave-zdl-as-definition-language-for-asyncapi\",\n    \"aria-label\": \"using zenwave zdl as definition language for asyncapi permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Using ZenWave ZDL as Definition Language for AsyncAPI\"), \"\\n\", React.createElement(_components.p, null, \"While AsyncAPI is the source of truth for Event-Driven communication, with \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/zenwave-sdk/plugins/zdl-to-asyncapi/\"\n  }, \"ZDLToAsyncAPIPlugin\"), \" plugins you can create complete draft version of AsyncAPI specification from your annotated Services and Events.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang zw -p io.zenwave360.sdk.plugins.ZDLToAsyncAPIPlugin \\\\\\r\\n    zdlFile=src/main/resources/model/orders-model.zdl \\\\\\r\\n    idType=integer \\\\\\r\\n    idTypeFormat=int64 \\\\\\r\\n    targetFile=src/main/resources/model/asyncapi.yml\\n\")), \"\\n\", React.createElement(_components.p, null, \"For instance the following ZDL model:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"service OrdersService for (CustomerOrder) {\\r\\n    // only emited events will be included in the asyncapi definition\\r\\n    updateOrder(id, CustomerOrderInput) CustomerOrder withEvents OrderStatusUpdated\\r\\n}\\r\\n\\r\\n@asyncapi({channel: \\\"OrderUpdatesChannel\\\", topic: \\\"orders.order_updates\\\"})\\r\\nevent OrderStatusUpdated {\\r\\n    id String\\r\\n    dateTime Instant required\\r\\n    status OrderStatus required\\r\\n    previousStatus OrderStatus\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Will generate the following sections in an AsyncAPI definition:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"An \", React.createElement(_components.code, null, \"schema\"), \" named \", React.createElement(_components.code, null, \"OrderStatusUpdated\"), \" with a \", React.createElement(_components.code, null, \"payload\"), \" containing the \", React.createElement(_components.code, null, \"id\"), \", \", React.createElement(_components.code, null, \"dateTime\"), \", \", React.createElement(_components.code, null, \"status\"), \" and \", React.createElement(_components.code, null, \"previousStatus\"), \" fields.\"), \"\\n\", React.createElement(_components.li, null, \"A \", React.createElement(_components.code, null, \"message\"), \" named \", React.createElement(_components.code, null, \"OrderStatusUpdatedMessage\"), \" pointing to \", React.createElement(_components.code, null, \"OrderStatusUpdated\"), \" schema.\"), \"\\n\", React.createElement(_components.li, null, \"An a \", React.createElement(_components.code, null, \"Channel\"), \" named \", React.createElement(_components.code, null, \"OrderUpdatesChannel\"), \" containing a reference to the \", React.createElement(_components.code, null, \"OrderStatusUpdatedMessage\"), \" message.\"), \"\\n\", React.createElement(_components.li, null, \"It also will generate an \", React.createElement(_components.code, null, \"Operation\"), \" named \", React.createElement(_components.code, null, \"onOrderStatusUpdated\"), \" with and action \", React.createElement(_components.code, null, \"send\"), \"to the \", React.createElement(_components.code, null, \"OrderUpdatesChannel\"), \" channel.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"💡 This is as a compact format as it can get!! Saving you a lot of typing and giving you very concise representation of your events.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"api-first-code-generator-from-asyncapi\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#api-first-code-generator-from-asyncapi\",\n    \"aria-label\": \"api first code generator from asyncapi permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"API-First Code Generator from AsyncAPI\"), \"\\n\", React.createElement(_components.p, null, \"You can use \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/zenwave-sdk/plugins/asyncapi-spring-cloud-streams3/#maven-plugin-configuration-api-first\"\n  }, \"API-First AsyncAPI Maven Plugin\"), \" to generate models (DTOs) and a producer implementation.\"), \"\\n\", React.createElement(_components.p, null, \"Configure \", React.createElement(_components.code, null, \"zenwave-sdk-maven-plugin\"), \" as follows:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Set \", React.createElement(_components.code, null, \"inputSpec\"), \" to point to your AsyncAPI specification. You can use \", React.createElement(_components.code, null, \"classpath\"), \", \", React.createElement(_components.code, null, \"file\"), \", \", React.createElement(_components.code, null, \"http(s)\"), \" or \", React.createElement(_components.code, null, \"https\"), \" as inputSpec.\"), \"\\n\", React.createElement(_components.li, null, \"Add \", React.createElement(_components.code, null, \"asyncapi-spring-cloud-streams3\"), \" and \", React.createElement(_components.code, null, \"asyncapi-jsonschema2pojo\"), \" as dependencies.\"), \"\\n\", React.createElement(_components.li, null, \"Add two executions to generate the models (DTOs) and an Events Producer implementation.\"), \"\\n\", React.createElement(_components.li, null, \"Configure \", React.createElement(_components.code, null, \"modelPackage\"), \", \", React.createElement(_components.code, null, \"producerApiPackage\"), \" and \", React.createElement(_components.code, null, \"consumerApiPackage\"), \" to match your project structure.\"), \"\\n\", React.createElement(_components.li, null, \"Configure \", React.createElement(_components.code, null, \"role\"), \" to \", React.createElement(_components.code, null, \"provider\"), \" or \", React.createElement(_components.code, null, \"client\"), \" if you are generating code from a third-party specification. If you are defining \", React.createElement(_components.code, null, \"all\"), \" the operations (client and provider) then you are acting as the \", React.createElement(_components.code, null, \"provider\"), \" which is the default.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"<plugin>\\r\\n    <groupId>io.zenwave360.sdk</groupId>\\r\\n    <artifactId>zenwave-sdk-maven-plugin</artifactId>\\r\\n    <version>${zenwave.version}</version>\\r\\n    <configuration>\\r\\n        <inputSpec>classpath:/apis/asyncapi.yml</inputSpec><!-- classpath, file, http(s) -->\\r\\n        <addCompileSourceRoot>true</addCompileSourceRoot><!-- default is true -->\\r\\n        <addTestCompileSourceRoot>true</addTestCompileSourceRoot><!-- default is true -->\\r\\n    </configuration>\\r\\n\\r\\n    <executions>\\r\\n        <!-- DTOs -->\\r\\n        <execution>\\r\\n            <id>generate-asyncapi-provider-dtos</id>\\r\\n            <phase>generate-sources</phase>\\r\\n            <goals>\\r\\n                <goal>generate</goal>\\r\\n            </goals>\\r\\n            <configuration>\\r\\n                <generatorName>jsonschema2pojo</generatorName>\\r\\n                <configOptions>\\r\\n                    <modelPackage>${basePackage}.core.domain.events</modelPackage>\\r\\n                    <jsonschema2pojo.isUseJakartaValidation>true</jsonschema2pojo.isUseJakartaValidation>\\r\\n                    <jsonschema2pojo.useLongIntegers>true</jsonschema2pojo.useLongIntegers>\\r\\n                </configOptions>\\r\\n            </configuration>\\r\\n        </execution>\\r\\n        <!-- Generate PROVIDER -->\\r\\n        <execution>\\r\\n            <id>generate-asyncapi-provider-implementation</id>\\r\\n            <phase>generate-sources</phase>\\r\\n            <goals><goal>generate</goal></goals>\\r\\n            <configuration>\\r\\n                <generatorName>spring-cloud-streams3</generatorName>\\r\\n                <configOptions>\\r\\n                    <role>provider</role>\\r\\n                    <style>imperative</style>\\r\\n                    <modelPackage>${basePackage}.core.domain.events</modelPackage>\\r\\n                    <producerApiPackage>${basePackage}.core.outbound.events</producerApiPackage>\\r\\n                    <consumerApiPackage>${basePackage}.adapters.commands</consumerApiPackage>\\r\\n                </configOptions>\\r\\n            </configuration>\\r\\n        </execution>\\r\\n    </executions>\\r\\n\\r\\n    <!-- add any sdk plugin (custom or standard) as dependency here -->\\r\\n    <dependencies>\\r\\n        <dependency>\\r\\n            <groupId>io.zenwave360.sdk.plugins</groupId>\\r\\n            <artifactId>asyncapi-spring-cloud-streams3</artifactId>\\r\\n            <version>${zenwave.version}</version>\\r\\n        </dependency>\\r\\n        <dependency>\\r\\n            <groupId>io.zenwave360.sdk.plugins</groupId>\\r\\n            <artifactId>asyncapi-jsonschema2pojo</artifactId>\\r\\n            <version>${zenwave.version}</version>\\r\\n        </dependency>\\r\\n    </dependencies>\\r\\n</plugin>\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"producing-domain-events-with-generated-code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#producing-domain-events-with-generated-code\",\n    \"aria-label\": \"producing domain events with generated code permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Producing Domain Events with Generated Code\"), \"\\n\", React.createElement(_components.p, null, \"By default, ZenWave generates Spring Cloud Streams implementation that counts with different binders for virtually any message broker:\"), \"\\n\", React.createElement(Image, {\n    src: \"https://www.zenwave360.io/zenwave-sdk/docs/ZenWave360-AsyncAPI-SpringCloudStreams.excalidraw.svg\",\n    alt: \"ZenWave360 AsyncAPI Spring Cloud Streams\"\n  }), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"📦 target/generated-sources/zenwave\\r\\n    📦 src/main/java\\r\\n         └─ <modelPackage> models (DTOs)\\r\\n            └─ AddressDTO.java\\r\\n            └─ CustomerDTO.java\\r\\n         └─ <producerPackage>\\r\\n             └─ ICustomerEventsProducer (interface and header objects)\\r\\n             └─ CustomerEventsProducer (spring-cloud-streams producer)\\r\\n   📦 src/test/java\\r\\n         └─ <producerPackage>\\r\\n             └─ CustomerEventsProducerCaptor (in-memory producer/captor)\\r\\n             └─ EventsProducerInMemoryContext (spring-boot/manual context)\\n\")), \"\\n\", React.createElement(_components.p, null, \"With this schema you just need to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Autowire \", React.createElement(_components.code, null, \"ICustomerEventsProducer\"), \" wherever you would like to produce events.\"), \"\\n\", React.createElement(_components.li, null, \"Add \", React.createElement(_components.code, null, \"CustomerEventsProducer\"), \" to your Spring Boot context and set any required configuration for \", React.createElement(_components.code, null, \"spring.streams.bindings\"), \" in \", React.createElement(_components.code, null, \"application.yml\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public CustomerServiceImpl {\\r\\n    @Autowired\\r\\n    ICustomerEventsProducer eventsProducer;\\r\\n    // ...\\r\\n    public Customer createCustomer(Customer input) {\\r\\n        // ...\\r\\n        eventsProducer.onCustomerEvent(customerEvent);\\r\\n        // ...\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"spring:\\r\\n    stream:\\r\\n      bindings:\\r\\n        on-order-event-out-0: ## you can get this name from 'CustomerEventsProducer' class\\r\\n          destination: orders.orders\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"inmemory-event-producer-captor-for-your-tests\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#inmemory-event-producer-captor-for-your-tests\",\n    \"aria-label\": \"inmemory event producer captor for your tests permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"InMemory Event Producer (Captor) for your Tests\"), \"\\n\", React.createElement(_components.p, null, \"ZenWave SDK Maven Plugin will generate an in-memory implementation of your Events Producer that you can use in your tests to capture events and perform assertions on them. All this without a message broker, TestContainers or Mockito.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Configuration\\r\\n@Profile(\\\"in-memory\\\")\\r\\npublic class ServicesInMemoryConfig extends RepositoriesInMemoryConfig {\\r\\n\\r\\n\\tprotected final EventsProducerInMemoryContext eventsProducerInMemoryContext = new EventsProducerInMemoryContext();\\r\\n\\r\\n\\tprotected final CustomerServiceImpl customerService = new CustomerServiceImpl(\\r\\n            customerRepository(),\\r\\n\\t\\t\\teventsProducerInMemoryContext.customerEventsProducer());\\r\\n\\r\\n\\t@Bean\\r\\n\\tpublic CustomerServiceImpl customerService() {\\r\\n\\t\\treturn customerService;\\r\\n\\t}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now you can perform assertions on captured events in your tests:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class CustomerServiceTest {\\r\\n    CustomerEventsProducerCaptor eventsProducerCaptor = serviceInMemoryContext.customerEventsProducerCaptor();\\r\\n\\r\\n\\t@Test\\r\\n\\tvoid createCustomerTest() {\\r\\n\\t\\tvar input = new Customer();\\r\\n\\t\\t// TODO fill input data\\r\\n\\r\\n\\t\\tvar customer = customerService.createCustomer(input);\\r\\n\\t\\tassertNotNull(customer.getId());\\r\\n\\r\\n        // Assertions on captured events\\r\\n        var customerEvents = eventsProducerCaptor.getCapturedMessages(eventsProducerCaptor.onCustomerEventBindingName);\\r\\n        Assertions.assertEquals(1, customerEvents.size());\\r\\n\\t}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"letting-zenwave-sdk-include-event-producers-in-your-services\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#letting-zenwave-sdk-include-event-producers-in-your-services\",\n    \"aria-label\": \"letting zenwave sdk include event producers in your services permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Letting ZenWave SDK Include Event Producers in Your Services\"), \"\\n\", React.createElement(_components.p, null, \"Because this depends on ZenWave AsyncAPI Plugins naming conventions, you need to explicitly set \", React.createElement(_components.code, null, \"includeEmitEventsImplementation\"), \" to \", React.createElement(_components.code, null, \"true\"), \" in \", React.createElement(_components.code, null, \"ZenWave SDK Backend Plugin\"), \" option to include event publishing code in your core services.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"// This will only be generated if includeEmitEventsImplementation is set to true\\r\\nprivate final EventsMapper eventsMapper = EventsMapper.INSTANCE;\\r\\nprivate final ICustomerEventsProducer eventsProducer;\\r\\n\\r\\n@Transactional\\r\\npublic Customer createCustomer(Customer input) {\\r\\n    log.debug(\\\"Request to save Customer: {}\\\", input);\\r\\n    var customer = customerServiceMapper.update(new Customer(), input);\\r\\n    customer = customerRepository.save(customer);\\r\\n\\r\\n    // This will only be generated if includeEmitEventsImplementation is set to true\\r\\n    var customerEvent = eventsMapper.asCustomerEvent(customer);\\r\\n    eventsProducer.onCustomerEvent(customerEvent);\\r\\n\\r\\n    return customer;\\r\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/ivangsa/workspace/zenwave/ZenWave360.github.io/website/pages/docs/SDK/ProducingEvents.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Button as AriakitButton } from 'ariakit/button'\r\nimport styled, { css } from '@xstyled/styled-components'\r\n\r\nconst variant =\r\n  ({ background, backgroundHover, on }) =>\r\n  () => {\r\n    return css`\r\n      background-color: ${background};\r\n      color: ${on};\r\n\r\n      &:hover:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n\r\n      &:active:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n    `\r\n  }\r\n\r\nconst InnerButton = styled.buttonBox`\r\n  appearance: none;\r\n  border-radius: base;\r\n  transition: base;\r\n  font-weight: 500;\r\n  border: 0;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 16;\r\n  padding: 2 3;\r\n  text-decoration: none !important;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n  }\r\n\r\n  &[data-variant='primary'] {\r\n    ${variant({\r\n      background: 'primary-600',\r\n      backgroundHover: 'primary-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='success'] {\r\n    ${variant({\r\n      background: 'green-600',\r\n      backgroundHover: 'green-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='danger'] {\r\n    ${variant({\r\n      background: 'red-600',\r\n      backgroundHover: 'red-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='neutral'] {\r\n    ${variant({\r\n      background: 'gray-300',\r\n      backgroundHover: 'gray-400',\r\n      on: 'black',\r\n    })}\r\n  }\r\n`\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ variant = 'primary', children, ...props }, ref) => {\r\n    return (\r\n      <AriakitButton ref={ref} data-variant={variant}>\r\n        {(buttonProps) => (\r\n          <InnerButton {...buttonProps} {...props}>\r\n            {children}\r\n          </InnerButton>\r\n        )}\r\n      </AriakitButton>\r\n    )\r\n  },\r\n)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { th, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst InnerFeature = styled.box`\r\n  border-left: 1;\r\n  border-left-style: dashed;\r\n  border-left-color: layout-border;\r\n  padding-left: 4 !important;\r\n  padding-right: 5 !important;\r\n`\r\n\r\nexport const Feature = React.forwardRef((props, ref) => (\r\n  <InnerFeature\r\n    ref={ref}\r\n    col={{ xs: 1, md: 1 / 3 }}\r\n    px={2}\r\n    pt={4}\r\n    pb={{ xs: 2, md: 5 }}\r\n    {...props}\r\n  />\r\n))\r\n\r\nexport const FeatureTitle = styled.h2`\r\n  margin: 3 0;\r\n  font-size: 16;\r\n  font-weight: 500;\r\n  border-left: 1;\r\n  border-color: primary-400;\r\n  margin-left: ${th.px(-9)};\r\n  padding-left: ${th.px(9)};\r\n`\r\n\r\nexport const FeatureText = styled.p`\r\n  color: on-background-light;\r\n  font-size: 15;\r\n  text-align: justify;\r\n  margin: 4 0;\r\n`\r\n\r\nconst InnerFeatureImage = styled.img`\r\n  margin-top: 3;\r\n`\r\n\r\nexport const FeatureImage = React.forwardRef((props, ref) => (\r\n  <InnerFeatureImage ref={ref} width={48} height={48} {...props} />\r\n))\r\n\r\nexport const FeatureList = React.forwardRef((props, ref) => (\r\n  <ScreenContainer ref={ref} row my={-4} px={3} {...props} />\r\n))\r\n\r\nexport const FeatureSection = React.forwardRef((props, ref) => (\r\n  <x.section\r\n    ref={ref}\r\n    py={4}\r\n    borderTop={1}\r\n    borderBottom={1}\r\n    borderColor=\"layout-border\"\r\n    {...props}\r\n  />\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nexport const HeroTitle = styled.h1Box`\r\n  font-size: 38;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  letter-spacing: -1.12px;\r\n  margin: 0 0 2;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 4;\r\n      font-size: 48;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 60;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const HeroTeaser = styled.pBox`\r\n  font-size: 18;\r\n  margin: 3 0;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      font-size: 20;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\n\r\nconst InnerHero = styled(ScreenContainer)`\r\n  background-repeat: no-repeat;\r\n  background-position: top -5% center;\r\n  background-size: 100% auto;\r\n  padding-top: 65%;\r\n  text-align: center;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 0;\r\n      margin-top: 5;\r\n      background-position: center right;\r\n      background-size: 58% auto;\r\n      min-height: 400;\r\n      text-align: left;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      margin-top: 6;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const Hero = React.forwardRef(\r\n  ({ backgroundImageURL, ...props }, ref) => {\r\n    return (\r\n      <InnerHero\r\n        ref={ref}\r\n        backgroundImage={`url(${backgroundImageURL})`}\r\n        {...props}\r\n      />\r\n    )\r\n  },\r\n)\r\n\r\nexport const HeroBody = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} w={{ md: 0.5 }} {...props} />\r\n})\r\n\r\nexport const HeroSection = styled.sectionBox`\r\n  overflow: hidden;\r\n  padding-top: 2;\r\n  padding-bottom: 5;\r\n`\r\n\r\nexport const HeroActionList = React.forwardRef((props, ref) => {\r\n  return (\r\n    <x.div\r\n      ref={ref}\r\n      row\r\n      m={-2}\r\n      justifyContent={{ xs: 'center', md: 'initial' }}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport const HeroAction = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} col=\"auto\" p={2} {...props} />\r\n})\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { useColorMode, th, x } from '@xstyled/styled-components'\r\n\r\nconst ImageContainer = styled.div`\r\n   text-align: ${props => props.align};\r\n`\r\nconst InnerImage = styled.img`\r\n  display: inline-block;\r\n`\r\nconst src = (props, colorMode) => {\r\n    return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const Image = React.forwardRef((props, ref) => (\r\n    <ImageContainer align={props.align || 'center'} className={props.visible}>\r\n        <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </ImageContainer>\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst Cite = styled(x.cite)`\r\n    display: block;\r\n    text-align: right;\r\n    margin-top: 1rem;\r\n`\r\n\r\nexport const Quote = React.forwardRef((props, ref) => {\r\n    return <x.blockquote ref={ref} className=\"quote\" {...props} />\r\n})\r\n\r\nexport const QuoteAuthor = React.forwardRef((props, ref) => {\r\n    return <Cite ref={ref} {...props} />\r\n})\r\n","import styled, {up, css, x, useColorMode} from '@xstyled/styled-components'\r\nimport React from \"react\";\r\n\r\nexport const WideFeatureSection = React.forwardRef((props, ref) => (\r\n    <x.section\r\n        ref={ref}\r\n        py={4}\r\n        borderTop={1}\r\n        borderBottom={1}\r\n        borderColor=\"layout-border\"\r\n        {...props}\r\n    />\r\n))\r\n\r\nexport const WideFeature = styled.divBox`\r\n  display: block;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        margin: 0 20px;\r\n        border-top: 1px dashed;\r\n        border-bottom: 1px dotted;\r\n        border-color: var(--xstyled-colors-layout-border,#d4d4d8);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      `,\r\n  )})\r\n`\r\n\r\nexport const WideFeatureText = styled.divBox`\r\n  padding: 1rem;\r\n  grid-column-start: span 2;\r\n\r\n  font-size: 18;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        font-size: 20;\r\n        padding: 3rem;\r\n        padding-top: 2rem;\r\n      `,\r\n  )}\r\n\r\n  ${up(\r\n      'xl',\r\n      css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\nconst WideFeatureImageContainer = styled.divBox`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`\r\n\r\nconst InnerImage = styled.imgBox`\r\n  display: inline-block;\r\n  //max-width: 300px;\r\n`\r\n\r\nconst src = (props, colorMode) => {\r\n  return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const WideFeatureImage = React.forwardRef((props, ref) => (\r\n    <WideFeatureImageContainer className={props.className}>\r\n      <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </WideFeatureImageContainer>\r\n))\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { marginLeft } from '@xstyled/styled-components'\r\n\r\nconst Gist = ({ gist, file }) => {\r\n  const iframeRef = useRef(null);\r\n\r\n  const fetchGistContent = async () => {\r\n    const url = file\r\n      ? `https://gist.githubusercontent.com/${gist}/raw/${file}`\r\n      : `https://gist.githubusercontent.com/${gist}/raw`;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n        const lineCount = text.split('\\n').length;\r\n        const lineHeight = 22; // Approximate line height in pixels\r\n        const height = lineCount * lineHeight + 40;\r\n        if (iframeRef.current) {\r\n          iframeRef.current.style.height = `${height}px`;\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch Gist content');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Gist content:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGistContent();\r\n  }, [gist, file]);\r\n\r\n  const src = file\r\n    ? `https://gist.github.com/${gist}.pibb?file=${file}`\r\n    : `https://gist.github.com/${gist}.pibb`;\r\n\r\n  const gistUrl = file\r\n    ? `https://gist.github.com/${gist}#file-${file.replace(/\\./g, '-').toLowerCase()}`\r\n    : `https://gist.github.com/${gist}`;\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #ccc', padding: '10px 0 0 0', borderRadius: '5px' }}>\r\n      {file && (\r\n        <header style={{ marginLeft: '10px', fontStyle: 'oblique' }}>\r\n          <span role=\"img\" aria-label=\"source code\">🗒️</span>\r\n          <a href={gistUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {file}\r\n          </a>\r\n        </header>\r\n      )}\r\n      <iframe\r\n        title={file}\r\n        ref={iframeRef}\r\n        src={src}\r\n        width=\"100%\"\r\n        frameBorder=\"0\"\r\n        style={{ margin: '0', padding: '0' }}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Gist };\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport { x } from '@xstyled/styled-components'\r\n\r\nexport const Orange = React.forwardRef((props, ref) => {\r\n  return <x.strong ref={ref} className=\"orange\" {...props} />\r\n})\r\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","h2","pre","code","ul","li","blockquote","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","Image","src","alt","wrapper","MDXLayout","DocTemplate","children","_ref","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","variant","background","backgroundHover","on","css","InnerButton","styled","Button","ref","_ref2","AriakitButton","buttonProps","InnerFeature","Feature","col","xs","md","px","pt","pb","FeatureTitle","th","FeatureText","InnerFeatureImage","FeatureImage","width","height","FeatureList","ScreenContainer","row","my","FeatureSection","x","py","borderTop","borderBottom","borderColor","HeroTitle","up","HeroTeaser","InnerHero","withConfig","Hero","backgroundImageURL","backgroundImage","HeroBody","w","HeroSection","HeroActionList","m","justifyContent","HeroAction","ImageContainer","align","InnerImage","colorMode","dark","light","visible","useColorMode","Cite","Quote","QuoteAuthor","WideFeatureSection","WideFeature","WideFeatureText","WideFeatureImageContainer","WideFeatureImage","Gist","gist","file","iframeRef","useRef","useEffect","async","url","response","fetch","ok","text","split","length","current","console","error","fetchGistContent","gistUrl","replace","toLowerCase","border","padding","borderRadius","marginLeft","fontStyle","role","target","rel","title","frameBorder","margin","Orange"],"sourceRoot":""}