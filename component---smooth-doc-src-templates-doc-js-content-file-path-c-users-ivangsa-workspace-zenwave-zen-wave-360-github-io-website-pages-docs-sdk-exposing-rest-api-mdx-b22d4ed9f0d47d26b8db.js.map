{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-docs-sdk-exposing-rest-api-mdx-b22d4ed9f0d47d26b8db.js","mappings":"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","sources":["webpack://website/./pages/docs/SDK/images/openapi-customer-service-outline.png","webpack://website/./pages/docs/SDK/Exposing-REST-API.mdx","webpack://website/../smooth-doc/src/templates/doc.js","webpack://website/../smooth-doc/src/components/Button.js","webpack://website/../smooth-doc/src/components/Feature.js","webpack://website/../smooth-doc/src/components/Hero.js","webpack://website/../smooth-doc/src/components/Image.js","webpack://website/../smooth-doc/src/components/Quote.js","webpack://website/../smooth-doc/src/components/WideFeature.js","webpack://website/../smooth-doc/src/components/Gist.js","webpack://website/../smooth-doc/src/components/Orange.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/openapi-customer-service-outline-68b9a96e93c4c92af26c41eaeecc07c3.png\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Image, Quote, QuoteAuthor} from \"smooth-doc/components\";\nimport openapiCustomerServiceOutline from './images/openapi-customer-service-outline.png';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    blockquote: \"blockquote\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"exposing-a-rest-api-for-your-service\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#exposing-a-rest-api-for-your-service\",\n    \"aria-label\": \"exposing a rest api for your service permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Exposing a REST API for your Service\"), \"\\n\", React.createElement(_components.p, null, \"While ZDL Models the inside of your application, OpenAPI (whether generated, or manually written) will be the source of truth for your REST API.\"), \"\\n\", React.createElement(_components.p, null, \"You can still document your ZDL Models for:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Annotate each service command documenting how it is connected to the REST API.\"), \"\\n\", React.createElement(_components.li, null, \"Generate a quite complete draft versions of OpenAPI from these ZDL models annotations.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"using-zenwave-zdl-as-definition-language-for-openapi\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#using-zenwave-zdl-as-definition-language-for-openapi\",\n    \"aria-label\": \"using zenwave zdl as definition language for openapi permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Using ZenWave ZDL as Definition Language for OpenAPI\"), \"\\n\", React.createElement(_components.p, null, \"Annotating each service command to document how is connected to the REST API.\"), \"\\n\", React.createElement(_components.p, null, \"ZenWave SDK will use the service command name for matching with OpenAPI operationId, but you can always set it explicitly like this: \", React.createElement(_components.code, null, \"@get({path: \\\"/somepath\\\", operationId: \\\"someOperationId\\\"})\")), \"\\n\", React.createElement(_components.p, null, \"Supported annotations are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"@rest(\\\"/customers\\\")\"), \" marks this service as exposed via REST API and defines the base path for all operations in this service.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"@get\"), \", \", React.createElement(_components.code, null, \"@post\"), \", \", React.createElement(_components.code, null, \"@put\"), \", \", React.createElement(_components.code, null, \"@delete\"), \", \", React.createElement(_components.code, null, \"@patch\"), \" defines the HTTP method for the operation.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"@paginated\"), \" defines that the operation will return a paginated response.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"So the following definition:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"/**\\r\\n * Customer Service annotated for REST and AsyncAPI serves two purposes:\\r\\n *   1. Document how each service command will be exposed to the outside world.\\r\\n *   2. Generate draft versions of AsyncAPI and OpenAPI from your ZDL models.\\r\\n */\\r\\n@rest(\\\"/customers\\\")\\r\\nservice CustomerService for (Customer) {\\r\\n    @post\\r\\n    createCustomer(Customer) Customer\\r\\n    @put(\\\"/{customerId}\\\")\\r\\n    updateCustomer(id, Customer) Customer?\\r\\n    @put({ path: \\\"/{customerId}/address/{identifier}\\\", params: {identifier: Long} }) // specify param types\\r\\n    updateCustomerAddress(id, AddressInput) Customer?\\r\\n    @delete(\\\"/{customerId}\\\")\\r\\n    deleteCustomer(id)\\r\\n    @get(\\\"/{customerId}\\\")\\r\\n    getCustomer(id) Customer?\\r\\n    @paginated\\r\\n    @get({path: \\\"/search\\\", params: {search: String}}) // this creates a query param in the OpenAPI\\r\\n    listCustomers() Customer[]\\r\\n}\\r\\n\\r\\n@inline\\r\\ninput AddressInput {\\r\\n    identifier String\\r\\n    address Address\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Will produce the following OpenAPI definition:\"), \"\\n\", React.createElement(Image, {\n    src: openapiCustomerServiceOutline,\n    alt: \"OpenAPI Customer Service Outline\",\n    align: \"left\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"⚠️ REMEMBER: Once generated, OpenAPI definition becomes the source of truth for your REST API.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"pagination-flavors\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#pagination-flavors\",\n    \"aria-label\": \"pagination flavors permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Pagination Flavor(s)\"), \"\\n\", React.createElement(_components.p, null, \"ZDLToOpenAPI supports the following pagination style out of the box:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@rest(\\\"/customers\\\")\\r\\nservice CustomerService for (Customer) {\\r\\n    @paginated\\r\\n    @get(\\\"/search\\\")\\r\\n    listCustomers() Customer[]\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"becomes ...\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"paths:\\r\\n  /customers/search:\\r\\n    get:\\r\\n      operationId: listCustomers\\r\\n      description: \\\"listCustomers\\\"\\r\\n      tags: [Customer]\\r\\n      parameters:\\r\\n        - $ref: \\\"#/components/parameters/page\\\"\\r\\n        - $ref: \\\"#/components/parameters/limit\\\"\\r\\n        - $ref: \\\"#/components/parameters/sort\\\"\\r\\n      responses:\\r\\n        \\\"200\\\":\\r\\n          description: \\\"OK\\\"\\r\\n          content:\\r\\n            application/json:\\r\\n              schema:\\r\\n                $ref: \\\"#/components/schemas/CustomerPaginated\\\"\\r\\ncomponents:\\r\\n  schemas:\\r\\n    CustomerPaginated:\\r\\n      allOf:\\r\\n      - $ref: \\\"#/components/schemas/Page\\\"\\r\\n      - x-business-entity-paginated: \\\"Customer\\\"\\r\\n      - properties:\\r\\n          content:\\r\\n            type: \\\"array\\\"\\r\\n            items:\\r\\n              $ref: \\\"#/components/schemas/Customer\\\"\\r\\n\\r\\n    Page:\\r\\n      type: object\\r\\n      required:\\r\\n        - \\\"content\\\"\\r\\n        - \\\"totalElements\\\"\\r\\n        - \\\"totalPages\\\"\\r\\n        - \\\"size\\\"\\r\\n        - \\\"number\\\"\\r\\n      properties:\\r\\n        number:\\r\\n          type: integer\\r\\n          minimum: 0\\r\\n        numberOfElements:\\r\\n          type: integer\\r\\n          minimum: 0\\r\\n        size:\\r\\n          type: integer\\r\\n          minimum: 0\\r\\n          maximum: 200\\r\\n          multipleOf: 25\\r\\n        totalElements:\\r\\n          type: integer\\r\\n        totalPages:\\r\\n          type: integer\\r\\n\\r\\n  parameters:\\r\\n    page:\\r\\n      name: page\\r\\n      in: query\\r\\n      description: The number of results page\\r\\n      schema:\\r\\n        type: integer\\r\\n        format: int32\\r\\n        default: 0\\r\\n    limit:\\r\\n      name: limit\\r\\n      in: query\\r\\n      description: The number of results in a single page\\r\\n      schema:\\r\\n        type: integer\\r\\n        format: int32\\r\\n        default: 20\\r\\n    sort:\\r\\n      name: sort\\r\\n      in: query\\r\\n      description: The number of results page\\r\\n      schema:\\r\\n        type: array\\r\\n        items:\\r\\n          type: string\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Currently, you will need to create a custom implementation of ZDLToOpenAPI to support your own pagination style.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"We are working on providing different pagination flavors out of the box and providing a way to customize the pagination style without the need to create your own plugin.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"generating-springmvc-controller-interfaces-with-official-openapi-generator\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#generating-springmvc-controller-interfaces-with-official-openapi-generator\",\n    \"aria-label\": \"generating springmvc controller interfaces with official openapi generator permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Generating SpringMVC Controller Interfaces with official OpenAPI Generator\"), \"\\n\", React.createElement(_components.p, null, \"Use the following configuration to generate SpringMVC Controller Interfaces from OpenAPI with the official \", React.createElement(_components.a, {\n    href: \"https://openapi-generator.tech/docs/generators/spring/\"\n  }, \"OpenAPI Generator - Spring\"), \":\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"<plugin>\\r\\n  <groupId>org.openapitools</groupId>\\r\\n  <artifactId>openapi-generator-maven-plugin</artifactId>\\r\\n  <version>7.8.0</version>\\r\\n  <executions>\\r\\n    <execution>\\r\\n      <goals>\\r\\n        <goal>generate</goal>\\r\\n      </goals>\\r\\n      <phase>generate-sources</phase>\\r\\n      <configuration>\\r\\n        <inputSpec>${project.basedir}/src/main/resources/public/apis/openapi.yml</inputSpec>\\r\\n        <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>\\r\\n        <generatorName>spring</generatorName>\\r\\n        <apiPackage>${openApiApiPackage}</apiPackage>\\r\\n        <modelPackage>${openApiModelPackage}</modelPackage>\\r\\n        <modelNameSuffix>DTO</modelNameSuffix>\\r\\n        <addCompileSourceRoot>true</addCompileSourceRoot>\\r\\n        <generateSupportingFiles>false</generateSupportingFiles>\\r\\n        <typeMappings>\\r\\n          <typeMapping>Double=java.math.BigDecimal</typeMapping>\\r\\n        </typeMappings>\\r\\n        <configOptions>\\r\\n          <useSpringBoot3>true</useSpringBoot3>\\r\\n          <documentationProvider>none</documentationProvider>\\r\\n          <openApiNullable>false</openApiNullable>\\r\\n          <useOptional>false</useOptional>\\r\\n          <useTags>true</useTags>\\r\\n          <interfaceOnly>true</interfaceOnly>\\r\\n          <skipDefaultInterface>true</skipDefaultInterface>\\r\\n          <delegatePattern>false</delegatePattern>\\r\\n        </configOptions>\\r\\n      </configuration>\\r\\n    </execution>\\r\\n  </executions>\\r\\n</plugin>\\n\")), \"\\n\", React.createElement(_components.p, null, \"These settings are compatible with \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/zenwave-sdk/plugins/openapi-controllers/\"\n  }, \"OpenAPI: REST Controllers Generator\"), \":\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<typeMapping>Double=java.math.BigDecimal</typeMapping>\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<useSpringBoot3>true</useSpringBoot3>\"), \" (use SpringBoot 3 and jakarta annotations)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<openApiNullable>false</openApiNullable>\"), \" (we use java.util.Optional instead)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<useOptional>false</useOptional>\"), \" (do not use java.util.Optional for parameters)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<useTags>true</useTags>\"), \" (required for grouping the operations in services by tag)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<interfaceOnly>true</interfaceOnly>\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<delegatePattern>false</delegatePattern>\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"generating-springmvc-controller-from-openapi-skeletons\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#generating-springmvc-controller-from-openapi-skeletons\",\n    \"aria-label\": \"generating springmvc controller from openapi skeletons permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Generating SpringMVC Controller from OpenAPI (skeletons)\"), \"\\n\", React.createElement(_components.p, null, \"You can use ZenWave SDK \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/zenwave-sdk/plugins/openapi-controllers/\"\n  }, \"OpenAPI: REST Controllers Generator\"), \" to generate SpringMVC Controllers (skeletons) from OpenAPI.\"), \"\\n\", React.createElement(_components.p, null, \"You can both use IntelliJ Plugin:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"/**\\r\\n * ZenWave Online Food Delivery - Customers Module.\\r\\n */\\r\\nconfig {\\r\\n    title \\\"ZenWave Online Food Delivery - Customers Module\\\"\\r\\n    basePackage \\\"io.zenwave360.example.customers\\\"\\r\\n    targetFolder \\\"modules/customers\\\"\\r\\n    persistence mongodb\\r\\n\\r\\n    // these can be executed directly from ZenWave IntelliJ Plugin\\r\\n    plugins {\\r\\n\\r\\n        ZDLToOpenAPIPlugin {\\r\\n            idType string\\r\\n            targetFile \\\"{{targetFolder}}/src/main/resources/apis/openapi.yml\\\"\\r\\n        }\\r\\n\\r\\n        OpenAPIControllersPlugin {\\r\\n            apiFile \\\"modules/customers/src/main/resources/apis/openapi.yml\\\" // relative to project root\\r\\n            zdlFile \\\"models/customers.zdl\\\" // this file: relative project root\\r\\n\\r\\n            // these should match the values of openapi-generator-maven-plugin\\r\\n            openApiApiPackage \\\"{{basePackage}}.adapters.web\\\"\\r\\n            openApiModelPackage \\\"{{basePackage}}.adapters.web.model\\\"\\r\\n            openApiModelNameSuffix DTO\\r\\n        }\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Or JBang CLI:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"jbang zw -p io.zenwave360.sdk.plugins.OpenAPIControllersPlugin\\r\\n    apiFile=src/main/resources/model/openapi.yml \\\\\\r\\n    zdlFile=src/main/resources/model/orders-model.jdl \\\\\\r\\n    basePackage=io.zenwave360.example \\\\\\r\\n    controllersPackage={{basePackage}}.adapters.web \\\\\\r\\n    openApiApiPackage=io.zenwave360.example.adapters.web \\\\\\r\\n    openApiModelPackage=io.zenwave360.example.adapters.web.model \\\\\\r\\n    openApiModelNameSuffix=DTO \\\\\\r\\n    targetFolder=.\\n\")), \"\\n\", React.createElement(_components.p, null, \"Generated Code:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" src/main/java/\\r\\n   📦 <basePackage>\\r\\n       📦 adapters\\r\\n           └─ web (controllersPackage)\\r\\n              ├─ 📦 mappers\\r\\n              |   └─ CustomerDTOsMapper.java (MapStruct mapper)\\r\\n              └─ CustomerApiController (SpringMVC: implements CustomerApi)\\r\\n src/test/java/\\r\\n   📦 <basePackage>\\r\\n       📦 adapters\\r\\n           └─ web (controllersPackage)\\r\\n              └─ CustomerApiControllerTest (UnitTest using ServicesInMemoryConfig)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Given you configured rest annotations in your ZDL model, or customize it like \", React.createElement(_components.code, null, \"@get({path: \\\"/somepath\\\", operationId: \\\"someOperationId\\\"})\"), \", this is the implementation you will get out of the box:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@RestController\\r\\n@RequestMapping(\\\"/api\\\")\\r\\npublic class CustomerApiController implements CustomerApi {\\r\\n\\r\\n\\tprivate final Logger log = LoggerFactory.getLogger(getClass());\\r\\n\\r\\n\\t@Autowired\\r\\n\\tprivate NativeWebRequest request;\\r\\n\\r\\n\\tprivate CustomerService customerService;\\r\\n\\r\\n\\t@Autowired\\r\\n\\tpublic CustomerApiController setCustomerService(CustomerService customerService) {\\r\\n\\t\\tthis.customerService = customerService;\\r\\n\\t\\treturn this;\\r\\n\\t}\\r\\n\\r\\n\\tprivate CustomerDTOsMapper mapper = CustomerDTOsMapper.INSTANCE;\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic Optional<NativeWebRequest> getRequest() {\\r\\n\\t\\treturn Optional.ofNullable(request);\\r\\n\\t}\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic ResponseEntity<CustomerDTO> createCustomer(CustomerDTO reqBody) {\\r\\n\\t\\tvar input = mapper.asCustomer(reqBody);\\r\\n\\t\\tvar customer = customerService.createCustomer(input);\\r\\n\\t\\tCustomerDTO responseDTO = mapper.asCustomerDTO(customer);\\r\\n\\t\\treturn ResponseEntity.status(201).body(responseDTO);\\r\\n\\t}\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic ResponseEntity<CustomerPaginatedDTO> listCustomers(Optional<Integer> page, Optional<Integer> limit,\\r\\n\\t\\t\\tOptional<List<String>> sort) {\\r\\n\\t\\tvar customerPage = customerService.listCustomers(pageOf(page, limit, sort));\\r\\n\\t\\tvar responseDTO = mapper.asCustomerPaginatedDTO(customerPage);\\r\\n\\t\\treturn ResponseEntity.status(200).body(responseDTO);\\r\\n\\t}\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic ResponseEntity<CustomerDTO> updateCustomer(String customerId, CustomerDTO reqBody) {\\r\\n\\t\\tvar input = mapper.asCustomer(reqBody);\\r\\n\\t\\tvar customer = customerService.updateCustomer(customerId, input);\\r\\n\\t\\tif (customer.isPresent()) {\\r\\n\\t\\t\\tCustomerDTO responseDTO = mapper.asCustomerDTO(customer.get());\\r\\n\\t\\t\\treturn ResponseEntity.status(200).body(responseDTO);\\r\\n\\t\\t}\\r\\n\\t\\telse {\\r\\n\\t\\t\\treturn ResponseEntity.notFound().build();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic ResponseEntity<Void> deleteCustomer(String customerId) {\\r\\n\\t\\t// TODO: customerService.deleteCustomer(customerId);\\r\\n\\t\\treturn ResponseEntity.status(204).build();\\r\\n\\t}\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic ResponseEntity<CustomerDTO> getCustomer(String customerId) {\\r\\n\\t\\tvar customer = customerService.getCustomer(customerId);\\r\\n\\t\\tif (customer.isPresent()) {\\r\\n\\t\\t\\tCustomerDTO responseDTO = mapper.asCustomerDTO(customer.get());\\r\\n\\t\\t\\treturn ResponseEntity.status(200).body(responseDTO);\\r\\n\\t\\t}\\r\\n\\t\\telse {\\r\\n\\t\\t\\treturn ResponseEntity.notFound().build();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic ResponseEntity<CustomerDTO> updateCustomerAddress(String customerId, String identifier, AddressDTO reqBody) {\\r\\n\\t\\tvar input = mapper.asAddress(reqBody);\\r\\n\\t\\tvar customer = customerService.updateCustomerAddress(customerId, identifier, input);\\r\\n\\t\\tif (customer.isPresent()) {\\r\\n\\t\\t\\tCustomerDTO responseDTO = mapper.asCustomerDTO(customer.get());\\r\\n\\t\\t\\treturn ResponseEntity.status(200).body(responseDTO);\\r\\n\\t\\t}\\r\\n\\t\\telse {\\r\\n\\t\\t\\treturn ResponseEntity.notFound().build();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tprotected Pageable pageOf(Optional<Integer> page, Optional<Integer> limit, Optional<List<String>> sort) {\\r\\n\\t\\treturn PageRequest.of(page.orElse(0), limit.orElse(10));\\r\\n\\t}\\r\\n\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"And this for the Unit Test:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class CustomerApiControllerTest {\\r\\n\\r\\n\\tprivate final Logger log = LoggerFactory.getLogger(getClass());\\r\\n\\r\\n\\tServicesInMemoryConfig context = new ServicesInMemoryConfig();\\r\\n\\r\\n\\tCustomerApiController controller = new CustomerApiController().setCustomerService(context.customerService());\\r\\n\\r\\n\\t@Test\\r\\n\\tpublic void createCustomerTest() {\\r\\n\\t\\tCustomerDTO reqBody = null;\\r\\n\\t\\tvar response = controller.createCustomer(reqBody);\\r\\n\\t\\tAssertions.assertEquals(201, response.getStatusCode().value());\\r\\n\\t}\\r\\n\\r\\n\\t@Test\\r\\n\\tpublic void listCustomersTest() {\\r\\n\\t\\tOptional<Integer> page = null;\\r\\n\\t\\tOptional<Integer> limit = null;\\r\\n\\t\\tOptional<List<String>> sort = null;\\r\\n\\t\\tvar response = controller.listCustomers(page, limit, sort);\\r\\n\\t\\tAssertions.assertEquals(200, response.getStatusCode().value());\\r\\n\\t}\\r\\n\\r\\n\\t@Test\\r\\n\\tpublic void updateCustomerTest() {\\r\\n\\t\\tString customerId = null;\\r\\n\\t\\tCustomerDTO reqBody = null;\\r\\n\\t\\tvar response = controller.updateCustomer(customerId, reqBody);\\r\\n\\t\\tAssertions.assertEquals(200, response.getStatusCode().value());\\r\\n\\t}\\r\\n\\r\\n\\t@Test\\r\\n\\tpublic void deleteCustomerTest() {\\r\\n\\t\\tString customerId = null;\\r\\n\\t\\tvar response = controller.deleteCustomer(customerId);\\r\\n\\t\\tAssertions.assertEquals(204, response.getStatusCode().value());\\r\\n\\t}\\r\\n\\r\\n\\t@Test\\r\\n\\tpublic void getCustomerTest() {\\r\\n\\t\\tString customerId = null;\\r\\n\\t\\tvar response = controller.getCustomer(customerId);\\r\\n\\t\\tAssertions.assertEquals(200, response.getStatusCode().value());\\r\\n\\t}\\r\\n\\r\\n\\t@Test\\r\\n\\tpublic void updateCustomerAddressTest() {\\r\\n\\t\\tString customerId = null;\\r\\n\\t\\tString identifier = null;\\r\\n\\t\\tAddressDTO reqBody = null;\\r\\n\\t\\tvar response = controller.updateCustomerAddress(customerId, identifier, reqBody);\\r\\n\\t\\tAssertions.assertEquals(200, response.getStatusCode().value());\\r\\n\\t}\\r\\n\\r\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/ivangsa/workspace/zenwave/ZenWave360.github.io/website/pages/docs/SDK/Exposing-REST-API.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Button as AriakitButton } from 'ariakit/button'\r\nimport styled, { css } from '@xstyled/styled-components'\r\n\r\nconst variant =\r\n  ({ background, backgroundHover, on }) =>\r\n  () => {\r\n    return css`\r\n      background-color: ${background};\r\n      color: ${on};\r\n\r\n      &:hover:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n\r\n      &:active:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n    `\r\n  }\r\n\r\nconst InnerButton = styled.buttonBox`\r\n  appearance: none;\r\n  border-radius: base;\r\n  transition: base;\r\n  font-weight: 500;\r\n  border: 0;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 16;\r\n  padding: 2 3;\r\n  text-decoration: none !important;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n  }\r\n\r\n  &[data-variant='primary'] {\r\n    ${variant({\r\n      background: 'primary-600',\r\n      backgroundHover: 'primary-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='success'] {\r\n    ${variant({\r\n      background: 'green-600',\r\n      backgroundHover: 'green-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='danger'] {\r\n    ${variant({\r\n      background: 'red-600',\r\n      backgroundHover: 'red-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='neutral'] {\r\n    ${variant({\r\n      background: 'gray-300',\r\n      backgroundHover: 'gray-400',\r\n      on: 'black',\r\n    })}\r\n  }\r\n`\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ variant = 'primary', children, ...props }, ref) => {\r\n    return (\r\n      <AriakitButton ref={ref} data-variant={variant}>\r\n        {(buttonProps) => (\r\n          <InnerButton {...buttonProps} {...props}>\r\n            {children}\r\n          </InnerButton>\r\n        )}\r\n      </AriakitButton>\r\n    )\r\n  },\r\n)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { th, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst InnerFeature = styled.box`\r\n  border-left: 1;\r\n  border-left-style: dashed;\r\n  border-left-color: layout-border;\r\n  padding-left: 4 !important;\r\n  padding-right: 5 !important;\r\n`\r\n\r\nexport const Feature = React.forwardRef((props, ref) => (\r\n  <InnerFeature\r\n    ref={ref}\r\n    col={{ xs: 1, md: 1 / 3 }}\r\n    px={2}\r\n    pt={4}\r\n    pb={{ xs: 2, md: 5 }}\r\n    {...props}\r\n  />\r\n))\r\n\r\nexport const FeatureTitle = styled.h2`\r\n  margin: 3 0;\r\n  font-size: 16;\r\n  font-weight: 500;\r\n  border-left: 1;\r\n  border-color: primary-400;\r\n  margin-left: ${th.px(-9)};\r\n  padding-left: ${th.px(9)};\r\n`\r\n\r\nexport const FeatureText = styled.p`\r\n  color: on-background-light;\r\n  font-size: 15;\r\n  text-align: justify;\r\n  margin: 4 0;\r\n`\r\n\r\nconst InnerFeatureImage = styled.img`\r\n  margin-top: 3;\r\n`\r\n\r\nexport const FeatureImage = React.forwardRef((props, ref) => (\r\n  <InnerFeatureImage ref={ref} width={48} height={48} {...props} />\r\n))\r\n\r\nexport const FeatureList = React.forwardRef((props, ref) => (\r\n  <ScreenContainer ref={ref} row my={-4} px={3} {...props} />\r\n))\r\n\r\nexport const FeatureSection = React.forwardRef((props, ref) => (\r\n  <x.section\r\n    ref={ref}\r\n    py={4}\r\n    borderTop={1}\r\n    borderBottom={1}\r\n    borderColor=\"layout-border\"\r\n    {...props}\r\n  />\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nexport const HeroTitle = styled.h1Box`\r\n  font-size: 38;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  letter-spacing: -1.12px;\r\n  margin: 0 0 2;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 4;\r\n      font-size: 48;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 60;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const HeroTeaser = styled.pBox`\r\n  font-size: 18;\r\n  margin: 3 0;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      font-size: 20;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\n\r\nconst InnerHero = styled(ScreenContainer)`\r\n  background-repeat: no-repeat;\r\n  background-position: top -5% center;\r\n  background-size: 100% auto;\r\n  padding-top: 65%;\r\n  text-align: center;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 0;\r\n      margin-top: 5;\r\n      background-position: center right;\r\n      background-size: 58% auto;\r\n      min-height: 400;\r\n      text-align: left;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      margin-top: 6;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const Hero = React.forwardRef(\r\n  ({ backgroundImageURL, ...props }, ref) => {\r\n    return (\r\n      <InnerHero\r\n        ref={ref}\r\n        backgroundImage={`url(${backgroundImageURL})`}\r\n        {...props}\r\n      />\r\n    )\r\n  },\r\n)\r\n\r\nexport const HeroBody = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} w={{ md: 0.5 }} {...props} />\r\n})\r\n\r\nexport const HeroSection = styled.sectionBox`\r\n  overflow: hidden;\r\n  padding-top: 2;\r\n  padding-bottom: 5;\r\n`\r\n\r\nexport const HeroActionList = React.forwardRef((props, ref) => {\r\n  return (\r\n    <x.div\r\n      ref={ref}\r\n      row\r\n      m={-2}\r\n      justifyContent={{ xs: 'center', md: 'initial' }}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport const HeroAction = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} col=\"auto\" p={2} {...props} />\r\n})\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { useColorMode, th, x } from '@xstyled/styled-components'\r\n\r\nconst ImageContainer = styled.div`\r\n   text-align: ${props => props.align};\r\n`\r\nconst InnerImage = styled.img`\r\n  display: inline-block;\r\n`\r\nconst src = (props, colorMode) => {\r\n    return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const Image = React.forwardRef((props, ref) => (\r\n    <ImageContainer align={props.align || 'center'} className={props.visible}>\r\n        <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </ImageContainer>\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst Cite = styled(x.cite)`\r\n    display: block;\r\n    text-align: right;\r\n    margin-top: 1rem;\r\n`\r\n\r\nexport const Quote = React.forwardRef((props, ref) => {\r\n    return <x.blockquote ref={ref} className=\"quote\" {...props} />\r\n})\r\n\r\nexport const QuoteAuthor = React.forwardRef((props, ref) => {\r\n    return <Cite ref={ref} {...props} />\r\n})\r\n","import styled, {up, css, x, useColorMode} from '@xstyled/styled-components'\r\nimport React from \"react\";\r\n\r\nexport const WideFeatureSection = React.forwardRef((props, ref) => (\r\n    <x.section\r\n        ref={ref}\r\n        py={4}\r\n        borderTop={1}\r\n        borderBottom={1}\r\n        borderColor=\"layout-border\"\r\n        {...props}\r\n    />\r\n))\r\n\r\nexport const WideFeature = styled.divBox`\r\n  display: block;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        margin: 0 20px;\r\n        border-top: 1px dashed;\r\n        border-bottom: 1px dotted;\r\n        border-color: var(--xstyled-colors-layout-border,#d4d4d8);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      `,\r\n  )})\r\n`\r\n\r\nexport const WideFeatureText = styled.divBox`\r\n  padding: 1rem;\r\n  grid-column-start: span 2;\r\n\r\n  font-size: 18;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        font-size: 20;\r\n        padding: 3rem;\r\n        padding-top: 2rem;\r\n      `,\r\n  )}\r\n\r\n  ${up(\r\n      'xl',\r\n      css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\nconst WideFeatureImageContainer = styled.divBox`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`\r\n\r\nconst InnerImage = styled.imgBox`\r\n  display: inline-block;\r\n  //max-width: 300px;\r\n`\r\n\r\nconst src = (props, colorMode) => {\r\n  return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const WideFeatureImage = React.forwardRef((props, ref) => (\r\n    <WideFeatureImageContainer className={props.className}>\r\n      <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </WideFeatureImageContainer>\r\n))\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { marginLeft } from '@xstyled/styled-components'\r\n\r\nconst Gist = ({ gist, file }) => {\r\n  const iframeRef = useRef(null);\r\n\r\n  const fetchGistContent = async () => {\r\n    const url = file\r\n      ? `https://gist.githubusercontent.com/${gist}/raw/${file}`\r\n      : `https://gist.githubusercontent.com/${gist}/raw`;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n        const lineCount = text.split('\\n').length;\r\n        const lineHeight = 22; // Approximate line height in pixels\r\n        const height = lineCount * lineHeight + 40;\r\n        if (iframeRef.current) {\r\n          iframeRef.current.style.height = `${height}px`;\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch Gist content');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Gist content:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGistContent();\r\n  }, [gist, file]);\r\n\r\n  const src = file\r\n    ? `https://gist.github.com/${gist}.pibb?file=${file}`\r\n    : `https://gist.github.com/${gist}.pibb`;\r\n\r\n  const gistUrl = file\r\n    ? `https://gist.github.com/${gist}#file-${file.replace(/\\./g, '-').toLowerCase()}`\r\n    : `https://gist.github.com/${gist}`;\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #ccc', padding: '10px 0 0 0', borderRadius: '5px' }}>\r\n      {file && (\r\n        <header style={{ marginLeft: '10px', fontStyle: 'oblique' }}>\r\n          <span role=\"img\" aria-label=\"source code\">🗒️</span>\r\n          <a href={gistUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {file}\r\n          </a>\r\n        </header>\r\n      )}\r\n      <iframe\r\n        title={file}\r\n        ref={iframeRef}\r\n        src={src}\r\n        width=\"100%\"\r\n        frameBorder=\"0\"\r\n        style={{ margin: '0', padding: '0' }}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Gist };\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport { x } from '@xstyled/styled-components'\r\n\r\nexport const Orange = React.forwardRef((props, ref) => {\r\n  return <x.strong ref={ref} className=\"orange\" {...props} />\r\n})\r\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","ul","li","h2","code","pre","blockquote","h3","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","Image","src","openapiCustomerServiceOutline","alt","align","wrapper","MDXLayout","DocTemplate","children","_ref","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","variant","background","backgroundHover","on","css","InnerButton","styled","Button","ref","_ref2","AriakitButton","buttonProps","InnerFeature","Feature","col","xs","md","px","pt","pb","FeatureTitle","th","FeatureText","InnerFeatureImage","FeatureImage","width","height","FeatureList","ScreenContainer","row","my","FeatureSection","x","py","borderTop","borderBottom","borderColor","HeroTitle","up","HeroTeaser","InnerHero","withConfig","Hero","backgroundImageURL","backgroundImage","HeroBody","w","HeroSection","HeroActionList","m","justifyContent","HeroAction","ImageContainer","InnerImage","colorMode","dark","light","visible","useColorMode","Cite","Quote","QuoteAuthor","WideFeatureSection","WideFeature","WideFeatureText","WideFeatureImageContainer","WideFeatureImage","Gist","gist","file","iframeRef","useRef","useEffect","async","url","response","fetch","ok","text","split","length","current","console","error","fetchGistContent","gistUrl","replace","toLowerCase","border","padding","borderRadius","marginLeft","fontStyle","role","target","rel","title","frameBorder","margin","Orange"],"sourceRoot":""}