{"version":3,"file":"component---smooth-doc-src-templates-post-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-posts-zen-wave-zdl-as-idl-for-open-api-mdx-695d157b53bc3b6cc95c.js","mappings":"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","sources":["webpack://website/./pages/posts/ZenWave_ZDL_As_IDL_for_OpenAPI.mdx","webpack://website/../smooth-doc/src/templates/post.js","webpack://website/../smooth-doc/src/components/Button.js","webpack://website/../smooth-doc/src/components/Feature.js","webpack://website/../smooth-doc/src/components/Hero.js","webpack://website/../smooth-doc/src/components/Image.js","webpack://website/../smooth-doc/src/components/Quote.js","webpack://website/../smooth-doc/src/components/WideFeature.js","webpack://website/../smooth-doc/src/components/Gist.js","webpack://website/../smooth-doc/src/components/Orange.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Image} from \"smooth-doc/components\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    div: \"div\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"This article was first published @medium: \", React.createElement(_components.a, {\n    href: \"https://medium.com/@ivangsa/stop-writing-yaml-for-openapi-use-a-compact-dsl-and-save-time-and-typing-574a138faddc\"\n  }, \"Stop writing YAML for OpenAPI, use a compact DSL and save time and typing\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"generating-openapi-definition-files-from-zenwave-domain-language-models-with-zenwavesdk\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#generating-openapi-definition-files-from-zenwave-domain-language-models-with-zenwavesdk\",\n    \"aria-label\": \"generating openapi definition files from zenwave domain language models with zenwavesdk permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Generating OpenAPI definition files from \\\"ZenWave Domain Language\\\" models with ZenWaveSDK\"), \"\\n\", React.createElement(_components.p, null, \"Because writing YAML by hand is now fun...\"), \"\\n\", React.createElement(_components.p, null, \"You can use \", React.createElement(_components.code, null, \"ZenWave Domain Language\"), \" models as IDL to generate OpenAPI v3 with ZenWave SDK.\"), \"\\n\", React.createElement(_components.p, null, \"Imagine being able to quickly define an API in a more concise and readable way, without losing the rigor of an OpenAPI specification. This article explores how you can leverage \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/docs/event-driven-design/zenwave-domain-language\"\n  }, \"ZenWave Domain Language (ZDL)\"), \", a compact developer-friendly DSL, to generate OpenAPI definitions, simplifying the process of creating API documentation, reducing errors, and improving developer productivity. Whether you're managing an extensive API or just getting started, a DSL might be the key to making your API workflow more efficient.\"), \"\\n\", React.createElement(_components.p, null, \"This is how it looks ZenWave ZDL as OpenAPI IDL (fragment):\"), \"\\n\", React.createElement(Image, {\n    alt: \"This is how it looks ZenWave ZDL as OpenAPI IDL (fragment)\",\n    dark: \"./ZDL-To-OpenAPI-IDL-fragment-dark.png\",\n    light: \"./ZDL-To-OpenAPI-IDL-fragment-light.png\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"zenwave-domain-language-zdl\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#zenwave-domain-language-zdl\",\n    \"aria-label\": \"zenwave domain language zdl permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ZenWave Domain Language (ZDL)\"), \"\\n\", React.createElement(_components.p, null, \"Inspired by JHipster JDL, ZDL is a language for describing DDD Bounded Contexts, including domain entities and their relationships, services, commands, events and business policies... for Event-Driven Architectures.\"), \"\\n\", React.createElement(_components.p, null, \"It's designed to be compact, readable and expressive. Developer friendly, and machine friendly. It works well as an Ubiquitous Language format.\"), \"\\n\", React.createElement(_components.p, null, \"It can also be used as an IDL for authoring OpenAPI (and AsyncAPI) definition files.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://www.zenwave360.io/static/EventStorming-ZDL-Mapping-cb9c987d5d0aff110c5890481034ae20.png\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"creating-a-zdl-for-authoring-an-openapi-definition\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#creating-a-zdl-for-authoring-an-openapi-definition\",\n    \"aria-label\": \"creating a zdl for authoring an openapi definition permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Creating a ZDL for authoring an OpenAPI definition\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"As a minimum requirement, you need a \", React.createElement(_components.code, null, \"service\"), \" and an \", React.createElement(_components.code, null, \"aggregate entity\"), \" for this service.\"), \"\\n\", React.createElement(_components.li, null, \"You can use this \", React.createElement(_components.code, null, \"entity\"), \" as request and response objects or you can define separate DTOs for this purpose using \", React.createElement(_components.code, null, \"input\"), \"and \", React.createElement(_components.code, null, \"output\"), \" entities.\"), \"\\n\", React.createElement(_components.li, null, \"You can also define and reference \", React.createElement(_components.code, null, \"enums\"), \" and \", React.createElement(_components.code, null, \"relationships\"), \" between entities. Nested entities and arrays also work.\"), \"\\n\", React.createElement(_components.li, null, \"Lastly you need to define the service methods and their parameters and annotate them using \", React.createElement(_components.code, null, \"@rest\"), \", \", React.createElement(_components.code, null, \"@post\"), \", \", React.createElement(_components.code, null, \"@get\"), \", \", React.createElement(_components.code, null, \"@put\"), \", \", React.createElement(_components.code, null, \"@delete\"), \", \", React.createElement(_components.code, null, \"@paginated\"), \", \", React.createElement(_components.code, null, \"@inline\"), \" annotations.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@aggregate\\r\\nentity PaymentMethod {\\r\\n    type PaymentMethodType required\\r\\n    cardNumber String required minlength(16) maxlength(16)\\r\\n}\\r\\n\\r\\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\\r\\n\\r\\n@rest(\\\"/payment-methods\\\")\\r\\nservice PaymentsService for (PaymentMethod) {\\r\\n    @post\\r\\n    doSomethingWithANewPayment(PaymentMethod) PaymentMethod\\r\\n\\r\\n    @put(\\\"/{id}\\\")\\r\\n    doSomethingWithAnExistingPayment(id, PaymentMethod) PaymentMethod?\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"NOTE: service method only accept two kind of parameters: \", React.createElement(_components.code, null, \"id\"), \" and command payload (that will map to the request body), but you can use \", React.createElement(_components.code, null, \"@inline\"), \" to expand fields as request path parameters (see below).\"), \"\\n\", React.createElement(_components.p, null, \"Checkout the \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/docs/event-driven-design/zenwave-domain-language#services-and-commands\"\n  }, \"ZDL documentation\"), \" for more details about command methods.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"install-zenwave-sdk-using-jbang\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#install-zenwave-sdk-using-jbang\",\n    \"aria-label\": \"install zenwave sdk using jbang permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Install ZenWave SDK Using JBang\"), \"\\n\", React.createElement(_components.p, null, \"Install an evergreen self updating ZenWave SDK CLI using JBang:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang alias add --force --fresh --name=zw release@zenwave360/zenwave-sdk\\n\")), \"\\n\", React.createElement(_components.p, null, \"Following these instructions for complete details about JBang and IntelliJ Editor: \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/docs/getting-started/\"\n  }, \"https://www.zenwave360.io/docs/getting-started/\")), \"\\n\", React.createElement(_components.p, null, \"Now you can use jbang zw to generate a complete OpenAPI definition file from your ZDL model.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang zw -p ZDLToOpenAPIPlugin \\\\\\r\\nzdlFile=model.zdl \\\\\\r\\nidType=integer \\\\\\r\\nidTypeFormat=int64 \\\\\\r\\ntargetFolder=. \\\\\\r\\ntargetFile=payments-openapi.yml\\n\")), \"\\n\", React.createElement(_components.p, null, \"Or use ZenWave ZDL Editor for IntelliJ configuring the generator plugin on top of your zdl file:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"config {\\r\\n    plugins {\\r\\n        /** Use ZenWave Editor for IntelliJ IDEA to run this */\\r\\n        ZDLToOpenAPIPlugin {\\r\\n            idType integer\\r\\n            idTypeFormat int64\\r\\n            targetFolder \\\".\\\"\\r\\n            targetFile \\\"openapi.yml\\\"\\r\\n        }\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./RunWith-ZenWave-Editor-for-IntelliJ.png\",\n    alt: \"Run With ZenWave Editor for IntelliJ\"\n  })), \"\\n\", React.createElement(_components.p, null, \"Then, check the generated OpenAPI definition file payments-openapi.yml, and see for yourself how much typing you saved!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"expanding-fields-as-request-path-parameters\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#expanding-fields-as-request-path-parameters\",\n    \"aria-label\": \"expanding fields as request path parameters permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Expanding fields as request path parameters\"), \"\\n\", React.createElement(_components.p, null, \"You can use \", React.createElement(_components.code, null, \"@inline\"), \" \", React.createElement(_components.code, null, \"ìnputs\"), \" to expand fields as request path parameters (and service method parameters).\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@inline // expand fields as request parameters\\r\\ninput PaymentMethodInput {\\r\\n    cardNumber String\\r\\n    paymentMethod PaymentMethod\\r\\n}\\r\\n\\r\\n@rest(\\\"/customers\\\")\\r\\nservice PaymentsService for (PaymentMethod) {\\r\\n\\r\\n    @put(\\\"/{paymentMethodId}/cardNumber/{cardNumber}\\\") // see example below to specify param types\\r\\n    updatePaymentMethodByCardNumber(PaymentMethodInput) PaymentMethod?\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"It will pick the first parameter from the entity id and the remaining parameters will be configured as \", React.createElement(_components.code, null, \"string\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./InlinePathParameters-OpenAPI-Generated.png\",\n    alt: \"Inline Path Parameters OpenAPI Generated\"\n  })), \"\\n\", React.createElement(_components.p, null, \"But you can override the path params with configuration, see complete example below.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"complete-zdl-example\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complete-zdl-example\",\n    \"aria-label\": \"complete zdl example permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complete ZDL Example\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@aggregate\\r\\nentity Customer {\\r\\n    name String required maxlength(254) /** Customer name */\\r\\n    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$/)\\r\\n    /** Customer Addresses can be stored in a JSON column in the database. */\\r\\n    @json addresses Address[] minlength(1) maxlength(5) {\\r\\n        street String required maxlength(254)\\r\\n        city String required maxlength(254)\\r\\n    }\\r\\n}\\r\\n\\r\\nentity PaymentMethod {\\r\\n    type PaymentMethodType required\\r\\n    cardNumber String required\\r\\n}\\r\\n\\r\\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\\r\\n\\r\\nrelationship OneToMany {\\r\\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\\r\\n}\\r\\n\\r\\n// you can create 'inputs' as dtos for your service methods, or use entities directly\\r\\ninput CustomerSearchCriteria {\\r\\n    name String\\r\\n    email String\\r\\n    city String\\r\\n    state String\\r\\n}\\r\\n\\r\\n@inline // expand fields as request parameters (and service method parameters)\\r\\ninput AddressInput {\\r\\n    addressId String\\r\\n    address Address\\r\\n}\\r\\n\\r\\n@rest(\\\"/customers\\\")\\r\\nservice CustomerService for (Customer) {\\r\\n    @post\\r\\n    createCustomer(Customer) Customer\\r\\n    @get(\\\"/{id}\\\")\\r\\n    getCustomer(id) Customer?\\r\\n    @put(\\\"/{id}\\\")\\r\\n    updateCustomer(id, Customer) Customer?\\r\\n    @put({ path: \\\"/{customerId}/address/{addressId}\\\", params: {addressId: Long} }) // specify param types\\r\\n    updateCustomerAddress(id, AddressInput) Customer?\\r\\n    @delete(\\\"/{id}\\\")\\r\\n    deleteCustomer(id)\\r\\n    @post(\\\"/search\\\")\\r\\n    @paginated\\r\\n    searchCustomers(CustomerSearchCriteria) Customer[]\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Run:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang zw -p io.zenwave360.sdk.plugins.ZDLToOpenAPIPlugin \\\\\\r\\n    zdlFile=customers-model.zdl \\\\\\r\\n    idType=integer \\\\\\r\\n    idTypeFormat=int64 \\\\\\r\\n    targetFolder=. \\\\\\r\\n    targetFile=openapi.yml\\n\")), \"\\n\", React.createElement(_components.p, null, \"And get surprised by the amount of YAML typing you saved!\"), \"\\n\", React.createElement(_components.p, null, \"Happy coding! 🚀\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/ivangsa/workspace/zenwave/ZenWave360.github.io/website/pages/posts/ZenWave_ZDL_As_IDL_for_OpenAPI.mdx\";\nimport {graphql} from \"gatsby\";\nexport const postQuery = graphql`\n  query PostPage($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n      }\n    }\n  }\n`;\nfunction PostTemplate({children}) {\n  return children;\n}\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Button as AriakitButton } from 'ariakit/button'\r\nimport styled, { css } from '@xstyled/styled-components'\r\n\r\nconst variant =\r\n  ({ background, backgroundHover, on }) =>\r\n  () => {\r\n    return css`\r\n      background-color: ${background};\r\n      color: ${on};\r\n\r\n      &:hover:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n\r\n      &:active:not(:disabled) {\r\n        background-color: ${backgroundHover};\r\n        color: ${on};\r\n      }\r\n    `\r\n  }\r\n\r\nconst InnerButton = styled.buttonBox`\r\n  appearance: none;\r\n  border-radius: base;\r\n  transition: base;\r\n  font-weight: 500;\r\n  border: 0;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 16;\r\n  padding: 2 3;\r\n  text-decoration: none !important;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n  }\r\n\r\n  &[data-variant='primary'] {\r\n    ${variant({\r\n      background: 'primary-600',\r\n      backgroundHover: 'primary-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='success'] {\r\n    ${variant({\r\n      background: 'green-600',\r\n      backgroundHover: 'green-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='danger'] {\r\n    ${variant({\r\n      background: 'red-600',\r\n      backgroundHover: 'red-700',\r\n      on: 'white',\r\n    })}\r\n  }\r\n\r\n  &[data-variant='neutral'] {\r\n    ${variant({\r\n      background: 'gray-300',\r\n      backgroundHover: 'gray-400',\r\n      on: 'black',\r\n    })}\r\n  }\r\n`\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ variant = 'primary', children, ...props }, ref) => {\r\n    return (\r\n      <AriakitButton ref={ref} data-variant={variant}>\r\n        {(buttonProps) => (\r\n          <InnerButton {...buttonProps} {...props}>\r\n            {children}\r\n          </InnerButton>\r\n        )}\r\n      </AriakitButton>\r\n    )\r\n  },\r\n)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { th, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst InnerFeature = styled.box`\r\n  border-left: 1;\r\n  border-left-style: dashed;\r\n  border-left-color: layout-border;\r\n  padding-left: 4 !important;\r\n  padding-right: 5 !important;\r\n`\r\n\r\nexport const Feature = React.forwardRef((props, ref) => (\r\n  <InnerFeature\r\n    ref={ref}\r\n    col={{ xs: 1, md: 1 / 3 }}\r\n    px={2}\r\n    pt={4}\r\n    pb={{ xs: 2, md: 5 }}\r\n    {...props}\r\n  />\r\n))\r\n\r\nexport const FeatureTitle = styled.h2`\r\n  margin: 3 0;\r\n  font-size: 16;\r\n  font-weight: 500;\r\n  border-left: 1;\r\n  border-color: primary-400;\r\n  margin-left: ${th.px(-9)};\r\n  padding-left: ${th.px(9)};\r\n`\r\n\r\nexport const FeatureText = styled.p`\r\n  color: on-background-light;\r\n  font-size: 15;\r\n  text-align: justify;\r\n  margin: 4 0;\r\n`\r\n\r\nconst InnerFeatureImage = styled.img`\r\n  margin-top: 3;\r\n`\r\n\r\nexport const FeatureImage = React.forwardRef((props, ref) => (\r\n  <InnerFeatureImage ref={ref} width={48} height={48} {...props} />\r\n))\r\n\r\nexport const FeatureList = React.forwardRef((props, ref) => (\r\n  <ScreenContainer ref={ref} row my={-4} px={3} {...props} />\r\n))\r\n\r\nexport const FeatureSection = React.forwardRef((props, ref) => (\r\n  <x.section\r\n    ref={ref}\r\n    py={4}\r\n    borderTop={1}\r\n    borderBottom={1}\r\n    borderColor=\"layout-border\"\r\n    {...props}\r\n  />\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nexport const HeroTitle = styled.h1Box`\r\n  font-size: 38;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  letter-spacing: -1.12px;\r\n  margin: 0 0 2;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 4;\r\n      font-size: 48;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 60;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const HeroTeaser = styled.pBox`\r\n  font-size: 18;\r\n  margin: 3 0;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      font-size: 20;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\n\r\nconst InnerHero = styled(ScreenContainer)`\r\n  background-repeat: no-repeat;\r\n  background-position: top -5% center;\r\n  background-size: 100% auto;\r\n  padding-top: 65%;\r\n  text-align: center;\r\n\r\n  ${up(\r\n    'md',\r\n    css`\r\n      padding-top: 0;\r\n      margin-top: 5;\r\n      background-position: center right;\r\n      background-size: 58% auto;\r\n      min-height: 400;\r\n      text-align: left;\r\n    `,\r\n  )}\r\n\r\n  ${up(\r\n    'xl',\r\n    css`\r\n      margin-top: 6;\r\n    `,\r\n  )}\r\n`\r\n\r\nexport const Hero = React.forwardRef(\r\n  ({ backgroundImageURL, ...props }, ref) => {\r\n    return (\r\n      <InnerHero\r\n        ref={ref}\r\n        backgroundImage={`url(${backgroundImageURL})`}\r\n        {...props}\r\n      />\r\n    )\r\n  },\r\n)\r\n\r\nexport const HeroBody = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} w={{ md: 0.5 }} {...props} />\r\n})\r\n\r\nexport const HeroSection = styled.sectionBox`\r\n  overflow: hidden;\r\n  padding-top: 2;\r\n  padding-bottom: 5;\r\n`\r\n\r\nexport const HeroActionList = React.forwardRef((props, ref) => {\r\n  return (\r\n    <x.div\r\n      ref={ref}\r\n      row\r\n      m={-2}\r\n      justifyContent={{ xs: 'center', md: 'initial' }}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport const HeroAction = React.forwardRef((props, ref) => {\r\n  return <x.div ref={ref} col=\"auto\" p={2} {...props} />\r\n})\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport styled, { useColorMode, th, x } from '@xstyled/styled-components'\r\n\r\nconst ImageContainer = styled.div`\r\n   text-align: ${props => props.align};\r\n`\r\nconst InnerImage = styled.img`\r\n  display: inline-block;\r\n`\r\nconst src = (props, colorMode) => {\r\n    return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const Image = React.forwardRef((props, ref) => (\r\n    <ImageContainer align={props.align || 'center'} className={props.visible}>\r\n        <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </ImageContainer>\r\n))\r\n","import React from 'react'\r\nimport styled, { up, css, x } from '@xstyled/styled-components'\r\nimport { ScreenContainer } from './ScreenContainer'\r\n\r\nconst Cite = styled(x.cite)`\r\n    display: block;\r\n    text-align: right;\r\n    margin-top: 1rem;\r\n`\r\n\r\nexport const Quote = React.forwardRef((props, ref) => {\r\n    return <x.blockquote ref={ref} className=\"quote\" {...props} />\r\n})\r\n\r\nexport const QuoteAuthor = React.forwardRef((props, ref) => {\r\n    return <Cite ref={ref} {...props} />\r\n})\r\n","import styled, {up, css, x, useColorMode} from '@xstyled/styled-components'\r\nimport React from \"react\";\r\n\r\nexport const WideFeatureSection = React.forwardRef((props, ref) => (\r\n    <x.section\r\n        ref={ref}\r\n        py={4}\r\n        borderTop={1}\r\n        borderBottom={1}\r\n        borderColor=\"layout-border\"\r\n        {...props}\r\n    />\r\n))\r\n\r\nexport const WideFeature = styled.divBox`\r\n  display: block;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        margin: 0 20px;\r\n        border-top: 1px dashed;\r\n        border-bottom: 1px dotted;\r\n        border-color: var(--xstyled-colors-layout-border,#d4d4d8);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      `,\r\n  )})\r\n`\r\n\r\nexport const WideFeatureText = styled.divBox`\r\n  padding: 1rem;\r\n  grid-column-start: span 2;\r\n\r\n  font-size: 18;\r\n  ${up(\r\n      'md',\r\n      css`\r\n        font-size: 20;\r\n        padding: 3rem;\r\n        padding-top: 2rem;\r\n      `,\r\n  )}\r\n\r\n  ${up(\r\n      'xl',\r\n      css`\r\n      font-size: 24;\r\n    `,\r\n  )}\r\n`\r\nconst WideFeatureImageContainer = styled.divBox`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`\r\n\r\nconst InnerImage = styled.imgBox`\r\n  display: inline-block;\r\n  //max-width: 300px;\r\n`\r\n\r\nconst src = (props, colorMode) => {\r\n  return colorMode === 'dark'? props.dark || props.src : props.light || props.src;\r\n}\r\nexport const WideFeatureImage = React.forwardRef((props, ref) => (\r\n    <WideFeatureImageContainer className={props.className}>\r\n      <InnerImage ref={ref} src={src(props, useColorMode()[0])} {...props} />\r\n    </WideFeatureImageContainer>\r\n))\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { marginLeft } from '@xstyled/styled-components'\r\n\r\nconst Gist = ({ gist, file }) => {\r\n  const iframeRef = useRef(null);\r\n\r\n  const fetchGistContent = async () => {\r\n    const url = file\r\n      ? `https://gist.githubusercontent.com/${gist}/raw/${file}`\r\n      : `https://gist.githubusercontent.com/${gist}/raw`;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n        const lineCount = text.split('\\n').length;\r\n        const lineHeight = 22; // Approximate line height in pixels\r\n        const height = lineCount * lineHeight + 40;\r\n        if (iframeRef.current) {\r\n          iframeRef.current.style.height = `${height}px`;\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch Gist content');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Gist content:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGistContent();\r\n  }, [gist, file]);\r\n\r\n  const src = file\r\n    ? `https://gist.github.com/${gist}.pibb?file=${file}`\r\n    : `https://gist.github.com/${gist}.pibb`;\r\n\r\n  const gistUrl = file\r\n    ? `https://gist.github.com/${gist}#file-${file.replace(/\\./g, '-').toLowerCase()}`\r\n    : `https://gist.github.com/${gist}`;\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #ccc', padding: '10px 0 0 0', borderRadius: '5px' }}>\r\n      {file && (\r\n        <header style={{ marginLeft: '10px', fontStyle: 'oblique' }}>\r\n          <span role=\"img\" aria-label=\"source code\">🗒️</span>\r\n          <a href={gistUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {file}\r\n          </a>\r\n        </header>\r\n      )}\r\n      <iframe\r\n        title={file}\r\n        ref={iframeRef}\r\n        src={src}\r\n        width=\"100%\"\r\n        frameBorder=\"0\"\r\n        style={{ margin: '0', padding: '0' }}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Gist };\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react'\r\nimport { x } from '@xstyled/styled-components'\r\n\r\nexport const Orange = React.forwardRef((props, ref) => {\r\n  return <x.strong ref={ref} className=\"orange\" {...props} />\r\n})\r\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","a","h1","div","code","h2","ul","li","pre","img","_provideComponents","components","React","href","id","style","position","className","dangerouslySetInnerHTML","__html","Image","alt","dark","light","src","wrapper","MDXLayout","PostTemplate","children","_ref","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","variant","background","backgroundHover","on","css","InnerButton","styled","Button","ref","_ref2","AriakitButton","buttonProps","InnerFeature","Feature","col","xs","md","px","pt","pb","FeatureTitle","th","FeatureText","InnerFeatureImage","FeatureImage","width","height","FeatureList","ScreenContainer","row","my","FeatureSection","x","py","borderTop","borderBottom","borderColor","HeroTitle","up","HeroTeaser","InnerHero","withConfig","Hero","backgroundImageURL","backgroundImage","HeroBody","w","HeroSection","HeroActionList","m","justifyContent","HeroAction","ImageContainer","align","InnerImage","colorMode","visible","useColorMode","Cite","Quote","QuoteAuthor","WideFeatureSection","WideFeature","WideFeatureText","WideFeatureImageContainer","WideFeatureImage","Gist","gist","file","iframeRef","useRef","useEffect","async","url","response","fetch","ok","text","split","length","current","console","error","fetchGistContent","gistUrl","replace","toLowerCase","border","padding","borderRadius","marginLeft","fontStyle","role","target","rel","title","frameBorder","margin","Orange"],"sourceRoot":""}