{"componentChunkName":"component---smooth-doc-src-templates-post-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-posts-spring-modulith-events-spring-cloud-stream-externalizer-mdx","path":"/posts/Spring-Modulith-Events-Spring-Cloud-Stream-Externalizer/","result":{"data":{"mdx":{"fields":{"pageType":"post","title":"Externalize Spring-Modulith Events with Spring Cloud Stream"}}},"pageContext":{"id":"29c60635-0df0-5744-a5df-525e0cae22e3","frontmatter":{"title":"Externalize Spring-Modulith Events with Spring Cloud Stream","slug":"/posts/Spring-Modulith-Events-Spring-Cloud-Stream-Externalizer/","image":"spring-modulith-events-spring-cloud-stream.png","author":"Ivan Garcia Sainz-Aja","date":"2025-03-08T07:00:00.000Z","excerpt":" While Spring Modulith provides multiple event externalizers, their capabilities are limited. There are scenarios where you need more flexibility and control. This library addresses these needs by: 1. Leveraging Spring Cloud Stream to support multiple message brokers at once, even inside the same application. 2. Providing enhanced control over message headers and metadata. 3. Supporting flexible payload serialization with both JSON and Avro. ","tags":["ZenWave360","Spring Cloud Stream","Spring Modulith"]},"contentFilePath":"C:/Users/ivangsa/workspace/zenwave/ZenWave360.github.io/website/pages/posts/Spring-Modulith-Events-Spring-Cloud-Stream-Externalizer.mdx"}},"staticQueryHashes":["1122327541","1339625561","148928582","1650910112","2140385554","4275725850"]}