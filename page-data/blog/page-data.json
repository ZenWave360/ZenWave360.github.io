{"componentChunkName":"component---smooth-doc-src-templates-posts-js","path":"/blog/","result":{"data":{"site":{"siteMetadata":{"title":"ZenWave 360ยบ"}},"allBlogPost":{"nodes":[{"id":"d72c7ac7-2710-5433-a9d4-83f55a7907e8","title":"Externalize Spring-Modulith Events with Spring Cloud Stream","slug":"/posts/Spring-Modulith-Events-Spring-Cloud-Stream-Externalizer/","date":"March 08, 2025","image":"spring-modulith-events-spring-cloud-stream.png","tags":["ZenWave360","Spring Cloud Stream","Spring Modulith"],"excerpt":" While Spring Modulith provides multiple event externalizers, their capabilities are limited. There are scenarios where you need more flexibility and control. This library addresses these needs by: 1. Leveraging Spring Cloud Stream to support multiple message brokers at once, even inside the same application. 2. Providing enhanced control over message headers and metadata. 3. Supporting flexible payload serialization with both JSON and Avro. "},{"id":"4d9a5cc7-6850-5ef0-abfb-da1c34c8a679","title":"Transactional OutBox With AsyncAPI SpringCloud Stream And Spring Modulith","slug":"/posts/TransactionalOutBoxWithAsyncAPIAndSpringModulith/","date":"January 03, 2025","image":"TransactionalOutBoxWithAsyncAPIAndSpringModulith-light-250.png","tags":["Transactional Outbox","AsyncAPI","ZenWave SDK","Code Generator","Spring Cloud Stream","Spring Modulith"],"excerpt":"How to implement Transactional Outbox pattern with AsyncAPI, SpringCloud Stream, Spring Modulith and ZenWaveSDK Code Generator for AsyncAPI."},{"id":"f1318867-615c-5e20-a293-4b6a4ec04d34","title":"From OpenAPI to KarateDSL Tests with ZenWave SDK","slug":"/posts/From-OpenAPI-to-KarateDSL-Tests/","date":"October 05, 2024","image":"OpenAPI2Karate.excalidraw.svg","tags":["OpenAPI","API-First","Testing","KarateDSL","Code Generator"],"excerpt":"How to save time and typing by generating KarateDSL tests from OpenAPI definitions with ZenWave SDK."},{"id":"67712207-06c6-52af-87af-cf184cc67170","title":"Generate OpenAPI from ZenWave Domain Language","slug":"/posts/ZenWave_ZDL_As_IDL_for_OpenAPI/","date":"September 24, 2024","image":"ZDL-To-OpenAPI-IDL-fragment-light.png","tags":["ZenWave SDK","Code Generator","ZenWave Domain Language","ZDL","DSL"],"excerpt":"Because writing YAML by hand is now fun... You can use `ZenWave Domain Language` models as IDL to generate OpenAPI v3 with ZenWave SDK."},{"id":"b4e26150-ae91-55bd-ad48-d77cf3951e43","title":"JDL To AsyncAPI v2","slug":"/posts/JHipster-As-IDL-for-AsyncAPIv2/","date":"April 29, 2023","image":"JDL-2-AsyncAPI.svg","tags":["ZenWave SDK","Code Generator","JHipster","DSL"],"excerpt":"Because writing YAML by hand is now fun... You can generate AsyncAPI v2/v3 from  JHipster JDL models with ZenWave SDK."},{"id":"091b8529-0002-5e60-a17c-86612d4ccd81","title":"JDL To OpenAPI","slug":"/posts/JHipster-As-IDL-for-OpenAPIv3/","date":"April 29, 2023","image":"JDL-2-OpenAPI.svg","tags":["ZenWave SDK","Code Generator","JHipster","DSL"],"excerpt":"Because writing YAML by hand is now fun... You can generate OpenAPI v3 from  JHipster JDL models with ZenWave SDK."},{"id":"30572fa6-9ead-597c-bd02-759a98981019","title":"API-First with AsyncAPI","slug":"/posts/API-First-with-AsyncAPI-And-ZenWave-SDK/","date":"March 03, 2023","image":"api-first-with-asyncapi-banner.png","tags":["API-First","EDA","Specification"],"excerpt":"If you are familiar with OpenAPI and OpenAPI Generator API-First process, doing API-First with AsyncAPI is similar."},{"id":"73e700a9-653c-50e8-bb9e-6e855916e8b2","title":"ZenWave AsyncAPI Code Generator","slug":"/posts/ZenWave-AsyncAPI-Code-Generator/","date":"March 03, 2023","image":"ZenWave360-AsyncAPI-SpringCloudStreams.excalidraw.svg","tags":["ZenWave SDK","Code Generator","Java","Spring Cloud Streams"],"excerpt":"With ZenWave SDK plugins, you can generate strongly typed business interfaces, payload and header DTOs and several integration patterns like Transactional Outbox, DeadLetter Queue... from AsyncAPI definitions."}]}},"pageContext":{"filter":{},"limit":100}},"staticQueryHashes":["1122327541","1339625561","148928582","1650910112","2140385554","4275725850"]}