{"data":{"allRemoteCodeContent":{"nodes":[{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L6-L10","language":"zdl","visibleRange":"6,10","content":"        ZDLToOpenAPIPlugin {\n            idType integer\n            idTypeFormat int64\n            targetFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:6,10"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/zenwave-jpa-baseline/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-baseline/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-baseline/zenwave-scripts.zw","language":"zdl","visibleRange":null,"content":"// This is a ZenWave Scripts File (.zw)\n//\n// This file defines ZenWave SDK plugins and their configurations for SDK execution and code generation.\n//\n// Usage:\n// - Execute plugins using the Play button in IntelliJ IDEA ZenWave Model Editor\n// - Or Copy the generated command line hovering the play button on each plugin\n// - Or Run commands directly from terminal using the generated command line\n//\n// Plugin: https://plugins.jetbrains.com/plugin/22858-zenwave-domain-model-editor-for-zdl\n//\n// There are global properties that apply to all plugins, and plugin specific properties.\n// Configuration Precedence (highest to lowest):\n// 1. Command line arguments always have the highest precedence\n// 2. Plugin-specific properties (defined in this file)\n// 3. Global properties (defined in this file)\n// 4. Properties from referenced .zdl files\n//\nconfig {\n\n    // This is a global configuration that applies to all plugins.\n    zdlFile \"zenwave-model.zdl\"\n\n\n    // these should match the values of openapi-generator-maven-plugin\n    // used by the OpenAPIControllersPlugin and SpringWebTestClientPlugin\n    openApiApiPackage \"{{basePackage}}.adapters.web\"\n    openApiModelPackage \"{{basePackage}}.adapters.web.model\"\n    openApiModelNameSuffix DTO\n\n\n    plugins {\n        /** Generates an OpenAPI 3.0 specification from the ZDL model. */\n        ZDLToOpenAPIPlugin {\n            idType integer\n            idTypeFormat int64\n            targetFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n        /** Generates an AsyncAPI 3.0 specification from the ZDL model. */\n        ZDLToAsyncAPIPlugin {\n            asyncapiVersion v3\n            idType integer\n            idTypeFormat int64\n            targetFile \"src/main/resources/public/apis/asyncapi.yml\"\n            // includeKafkaCommonHeaders true\n        }\n        /** Generates a Backend Application from the ZDL model. (Headless Core) */\n        BackendApplicationDefaultPlugin {\n            useLombok true\n            includeEmitEventsImplementation true\n            // --force // overwite all files\n        }\n        /** Generates Spring MVC controllers from the OpenAPI specification (Web Adapters). */\n        OpenAPIControllersPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerIntegrationTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerKarateTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n    }\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/zenwave-jpa-baseline/zenwave-scripts.zw:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/kustomer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/kustomer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/kustomer-address-jpa/zenwave-model.zdl","language":"zdl","visibleRange":null,"content":"/**\n * Sample ZenWave Model Definition.\n * Use zenwave-scripts.zdl to generate your code from this model definition.\n */\nconfig {\n    title \"Project Name\"\n    basePackage \"io.zenwave360.examples.kotlin\"\n    persistence jpa\n    databaseType postgresql\n\n    // you can choose: DefaultProjectLayout, CleanHexagonalProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\n    layout LayeredProjectLayout\n\n    // these should match the values of openapi-generator-maven-plugin\n    // used by the OpenAPIControllersPlugin and SpringWebTestClientPlugin\n    layout.openApiApiPackage \"{{basePackage}}.web\"\n    layout.openApiModelPackage \"{{basePackage}}.web.dtos\"\n    openApiModelNameSuffix DTO\n}\n\n/**\n* Customer entity\n*/\n@aggregate\n@auditing // adds auditing fields to the entity\nentity Customer {\n    name String required maxlength(254) /** Customer name */\n    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\n    /** Customer Addresses can be stored in a JSON column in the database. */\n    @json addresses Address[] minlength(1) maxlength(5) {\n        street String required maxlength(254)\n        city String required maxlength(254)\n    }\n}\n\n@auditing\nentity PaymentMethod {\n    type PaymentMethodType required\n    cardNumber String required\n}\n\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\n\nrelationship OneToMany {\n    @eager\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\n}\n\n// you can create 'inputs' as dtos for your service methods, or use entities directly\ninput CustomerSearchCriteria {\n    name String\n    email String\n    city String\n    state String\n}\n\n@rest(\"/customers\")\nservice CustomerService for (Customer) {\n    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent\n    @get(\"/{customerId}\")\n    getCustomer(id) Customer?\n    @put(\"/{customerId}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\n    @delete(\"/{customerId}\")\n    deleteCustomer(id) withEvents CustomerEvent\n    @post({path: \"/search\", status: 200}) @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]\n}\n\n@copy(Customer)\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerEvent {\n    id Long\n    version Integer\n    // all fields from Customer are copied here, but not relationships\n    paymentMethods PaymentMethod[]\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/kustomer-address-jpa/zenwave-model.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","language":"zdl","visibleRange":null,"content":"config {\n    title \"Clinical Tool Backend\"\n    basePackage \"io.zenwave360.example.clinicaltool\"\n    persistence jpa\n    databaseType postgresql\n\n    layout.commonPackage \"{{basePackage}}.common\"\n    layout.infrastructureRepositoryCommonPackage \"{{commonPackage}}\"\n    layout.adaptersWebMappersCommonPackage \"{{commonPackage}}.mappers\"\n    layout.coreImplementationMappersCommonPackage \"{{commonPackage}}.mappers\"\n\n    // these should match the values of openapi-generator-maven-plugin\n    openApiModelNameSuffix DTO\n    // used by ZDLToOpenAPIPlugin\n    idType integer\n    idTypeFormat int64\n\n    // BackendApplicationDefaultPlugin\n    useLombok true\n    useSpringModulith true\n\n    haltOnFailFormatting false\n\n\n    plugins {\n\n        ZDLToOpenAPIPlugin {\n            title \"Clinical Tool - WebApp API\"\n            zdlFiles \"models/clinical.zdl\"\n            targetFile \"src/main/resources/public/apis/webapp-openapi.yml\"\n            operationIdsToExclude \"getPatientProfileById\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Clinical Tool - Mobile API\"\n            zdlFiles \"models/clinical.zdl\"\n            targetFile \"src/main/resources/public/apis/mobile-openapi.yml\"\n            operationIdsToInclude \"getPatientProfileById,requestOptOut\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Surveys - Backoffice API\"\n            zdlFile \"models/surveys.zdl\"\n            targetFile \"src/main/resources/public/apis/surveys-backoffice-openapi.yml\"\n            operationIdsToExclude \"getSurveyAndQuestionsForPatient,answerSurvey,updateSurveyAnswers,getSurveyAnswers\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Surveys - Public API\"\n            zdlFile \"models/surveys.zdl\"\n            targetFile \"src/main/resources/public/apis/surveys-public-openapi.yml\"\n            operationIdsToInclude \"getSurveyAndQuestionsForPatient,answerSurvey,updateSurveyAnswers,getSurveyAnswers\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Documents API\"\n            zdlFile \"models/documents.zdl\"\n            targetFile \"src/main/resources/public/apis/documents-openapi.yml\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Master Data API\"\n            zdlFiles \"models/masterdata.zdl\"\n            targetFile \"src/main/resources/public/apis/masterdata-openapi.yml\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Terms And Conditions API\"\n            zdlFiles \"models/terms-and-conditions.zdl\"\n            targetFile \"src/main/resources/public/apis/terms-and-conditions-openapi.yml\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"User Managament API\"\n            zdlFiles \"models/users.zdl\"\n            openapiOverlayFiles \"src/main/resources/public/apis/user-additionalproperties-overlay.yml\"\n            targetFile \"src/main/resources/public/apis/users-openapi.yml\"\n        }\n\n\n        //-----------------------------\n\n        BackendApplicationDefaultPlugin {\n            zdlFile \"models/clinical.zdl\"\n            // --force // overwite all files\n        }\n\n        BackendApplicationDefaultPlugin {\n            zdlFile \"models/surveys.zdl\"\n            // --force // overwite all files\n        }\n\n        BackendApplicationDefaultPlugin {\n            zdlFile \"models/documents.zdl\"\n            // --force // overwite all files\n        }\n\n        BackendApplicationDefaultPlugin {\n            zdlFile \"models/masterdata.zdl\"\n            // --force // overwite all files\n        }\n\n        BackendApplicationDefaultPlugin {\n            zdlFile \"models/terms-and-conditions.zdl\"\n            // --force // overwite all files\n        }\n\n        BackendApplicationDefaultPlugin {\n            zdlFile \"models/users.zdl\"\n            // --force // overwite all files\n        }\n\n\n        //-----------------------------\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/clinical.zdl\"\n            openapiFile \"src/main/resources/public/apis/webapp-openapi.yml\"\n\n            layout.customWebModule \"{{basePackage}}.modules.web.webapp\"\n            layout.adaptersWebPackage \"{{layout.customWebModule}}\"\n            layout.openApiApiPackage \"{{layout.customWebModule}}\"\n            layout.openApiModelPackage \"{{layout.customWebModule}}.dtos\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/clinical.zdl\"\n            openapiFile \"src/main/resources/public/apis/mobile-openapi.yml\"\n\n            layout.customWebModule \"{{basePackage}}.modules.web.mobile\"\n            layout.adaptersWebPackage \"{{layout.customWebModule}}\"\n            layout.openApiApiPackage \"{{layout.customWebModule}}\"\n            layout.openApiModelPackage \"{{layout.customWebModule}}.dtos\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/surveys.zdl\"\n            openapiFile \"src/main/resources/public/apis/surveys-backoffice-openapi.yml\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/surveys.zdl\"\n            openapiFile \"src/main/resources/public/apis/surveys-public-openapi.yml\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/documents.zdl\"\n            openapiFile \"src/main/resources/public/apis/documents-openapi.yml\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/masterdata.zdl\"\n            openapiFile \"src/main/resources/public/apis/masterdata-openapi.yml\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/terms-and-conditions.zdl\"\n            openapiFile \"src/main/resources/public/apis/terms-and-conditions-openapi.yml\"\n        }\n\n        OpenAPIControllersPlugin {\n            zdlFiles \"models/users.zdl\"\n            openapiFile \"src/main/resources/public/apis/users-openapi.yml\"\n        }\n\n        //-----------------------------\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/clinical.zdl,models/metrics.zdl\"\n            openapiFile \"src/main/resources/public/apis/webapp-openapi.yml\"\n\n            layout.customWebModule \"{{basePackage}}.modules.web.webapp\"\n            layout.adaptersWebPackage \"{{layout.customWebModule}}\"\n            layout.openApiApiPackage \"{{layout.customWebModule}}\"\n            layout.openApiModelPackage \"{{layout.customWebModule}}.dtos\"\n        }\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/clinical.zdl,models/metrics.zdl\"\n            openapiFile \"src/main/resources/public/apis/mobile-openapi.yml\"\n\n            layout.customWebModule \"{{basePackage}}.modules.web.mobile\"\n            layout.adaptersWebPackage \"{{layout.customWebModule}}\"\n            layout.openApiApiPackage \"{{layout.customWebModule}}\"\n            layout.openApiModelPackage \"{{layout.customWebModule}}.dtos\"\n        }\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/surveys.zdl\"\n            openapiFile \"src/main/resources/public/apis/surveys-backoffice-openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/surveys.zdl\"\n            openapiFile \"src/main/resources/public/apis/surveys-public-openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/documents.zdl\"\n            openapiFile \"src/main/resources/public/apis/documents-openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/masterdata.zdl\"\n            openapiFile \"src/main/resources/public/apis/masterdata-openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            zdlFiles \"models/terms-and-conditions.zdl\"\n            openapiFile \"src/main/resources/public/apis/terms-and-conditions-openapi.yml\"\n        }\n\n        //-----------------------------\n\n        OpenAPIKaratePlugin {\n            basePackage \"{{basePackage}}.adapters.web\"\n            testsPackage \"karate.webapp\"\n            apiFile \"src/main/resources/public/apis/webapp-openapi.yml\"\n        }\n        OpenAPIKaratePlugin {\n            basePackage \"{{basePackage}}.adapters.web\"\n            testsPackage \"karate.mobile\"\n            apiFile \"src/main/resources/public/apis/mobile-openapi.yml\"\n        }\n        OpenAPIKaratePlugin {\n            basePackage \"{{basePackage}}.adapters.web\"\n            testsPackage \"karate.surveys.backoffice\"\n            apiFile \"src/main/resources/public/apis/surveys-backoffice-openapi.yml\"\n        }\n        OpenAPIKaratePlugin {\n            basePackage \"{{basePackage}}.adapters.web\"\n            testsPackage \"karate.surveys.api\"\n            apiFile \"src/main/resources/public/apis/surveys-public-openapi.yml\"\n        }\n\n    }\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java#L3-L33","language":"java","visibleRange":"3,33","content":"/**\n * Hexagonal Architecture (also called Ports and Adapters) with a Clean separation of concerns, following Domain-Driven Design (DDD) and Event-Driven Architecture (EDA) principles.\n *\n * <pre>\n * 📦 {{basePackage}}\n *    📦 adapters\n *        └─ web\n *        |  └─ RestControllers (spring mvc)\n *        └─ events\n *           └─ *EventListeners (spring-cloud-streams)\n *    📦 core\n *        ├─ 📦 domain\n *        |     └─ (entities and aggregates)\n *        ├─ 📦 inbound\n *        |     ├─ dtos/\n *        |     └─ ServiceInterface (inbound service interface)\n *        ├─ 📦 outbound\n *        |     ├─ mongodb\n *        |     |  └─ *RepositoryInterface (spring-data interface)\n *        |     └─ jpa\n *        |        └─ *RepositoryInterface (spring-data interface)\n *        └─ 📦 implementation\n *              ├─ mappers/\n *              └─ ServiceImplementation (inbound service implementation)\n *    📦 infrastructure\n *      ├─ mongodb\n *      |  └─ CustomRepositoryImpl (spring-data custom implementation)\n *      └─ jpa\n *         └─ CustomRepositoryImpl (spring-data custom implementation)\n * </pre>\n */","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java:3,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","language":"zdl","visibleRange":null,"content":"/**\n * Sample ZenWave Model Definition.\n * Use zenwave-scripts.zdl to generate your code from this model definition.\n */\nconfig {\n    title \"ZenWave Customer JPA Example\"\n    basePackage \"io.zenwave360.example\"\n    persistence jpa\n    databaseType postgresql\n\n    layout CleanHexagonalProjectLayout\n\n    // these should match the values of openapi-generator-maven-plugin\n    // used by the OpenAPIControllersPlugin and SpringWebTestClientPlugin\n    openApiApiPackage \"{{basePackage}}.adapters.web\"\n    openApiModelPackage \"{{basePackage}}.adapters.web.model\"\n    openApiModelNameSuffix DTO\n}\n\n/**\n* Customer entity\n*/\n@aggregate\n@auditing // adds auditing fields to the entity\nentity Customer {\n    name String required maxlength(254) /** Customer name */\n    email String required maxlength(254)\n    /** Customer Addresses can be stored in a JSON column in the database. */\n    @json addresses Address[] minlength(1) maxlength(5) {\n        street String required maxlength(254)\n        city String required maxlength(254)\n    }\n}\n\n@auditing\nentity PaymentMethod {\n    type PaymentMethodType required\n    cardNumber String required\n}\n\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\n\nrelationship OneToMany {\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\n}\n\n// you can create 'inputs' as dtos for your service methods, or use entities directly\ninput CustomerSearchCriteria {\n    name String\n    email String\n    city String\n    state String\n}\n\n@rest(\"/customers\")\nservice CustomerService for (Customer) {\n    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent\n    @get(\"/{id}\")\n    getCustomer(id) Customer?\n    @put(\"/{id}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\n    @delete(\"/{id}\")\n    deleteCustomer(id) withEvents CustomerDeletedEvent\n    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]\n}\n\n@copy(Customer)\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerEvent {\n    id Long required\n    version Integer\n    // all fields from Customer are copied here, but not relationships\n    paymentMethods PaymentMethod[]\n}\n\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerDeletedEvent {\n    id Long required\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml#L327-L329","language":"text","visibleRange":"327,329","content":"    SurveyAnswersPatch:\n      allOf:\n      - $ref: \"#/components/schemas/SurveyAnswers\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml:327,329"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","language":"zdl","visibleRange":null,"content":"config {\n    zdlFile \"zenwave-model.zdl\"\n\n    plugins {\n\n        ZDLToOpenAPIPlugin {\n            idType integer\n            idTypeFormat int64\n            targetFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        ZDLToAsyncAPIPlugin {\n            asyncapiVersion v3\n            schemaFormat avro\n            avroPackage \"io.zenwave360.example.core.outbound.events.dtos\"\n            idType long\n            targetFile \"src/main/resources/public/apis/asyncapi.yml\"\n            includeKafkaCommonHeaders true\n        }\n\n        BackendApplicationDefaultPlugin {\n            useLombok true\n            includeEmitEventsImplementation true\n            // --force // overwite all files\n        }\n\n        OpenAPIControllersPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerIntegrationTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerKarateTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n    }\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L1-L18","language":"zdl","visibleRange":"1,18","content":"/**\n * Sample ZenWave Model Definition.\n * Use zenwave-scripts.zdl to generate your code from this model definition.\n */\nconfig {\n    title \"ZenWave Customer JPA Example\"\n    basePackage \"io.zenwave360.example\"\n    persistence jpa\n    databaseType postgresql\n\n    layout CleanHexagonalProjectLayout\n\n    // these should match the values of openapi-generator-maven-plugin\n    // used by the OpenAPIControllersPlugin and SpringWebTestClientPlugin\n    openApiApiPackage \"{{basePackage}}.adapters.web\"\n    openApiModelPackage \"{{basePackage}}.adapters.web.model\"\n    openApiModelNameSuffix DTO\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:1,18"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/zenwave-jpa-baseline/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-baseline/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/zenwave-jpa-baseline/zenwave-model.zdl","language":"zdl","visibleRange":null,"content":"/**\n * Sample ZenWave Model Definition.\n *\n * This model describes a simple Customer entity with a one-to-many relationship with PaymentMethod.\n *\n * Use zenwave-scripts.zw to generate your code from this model definition.\n */\nconfig {\n    title \"ZenWave SDK - Mongodb BaseLine\"\n    basePackage \"io.zenwave360.example\"\n    persistence jpa\n    databaseType postgresql\n\n    // you can choose: DefaultProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout\n    //                 CleanHexagonalProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\n    layout LayeredProjectLayout\n}\n\n/**\n* Customer entity\n*/\n@aggregate\n@auditing // adds auditing fields to the entity\nentity Customer {\n    name String required maxlength(254) /** Customer name */\n    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\n    /** Customer Addresses can be stored in a JSON column in the database. */\n    @json addresses Address[] minlength(1) maxlength(5) {\n        street String required maxlength(254)\n        city String required maxlength(254)\n    }\n}\n\n@auditing\nentity PaymentMethod {\n    type PaymentMethodType required\n    cardNumber String required\n}\n\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\n\nrelationship OneToMany {\n    @eager\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\n}\n\n// you can create 'inputs' as dtos for your service methods, or use entities directly\ninput CustomerSearchCriteria {\n    name String\n    email String\n    city String\n    state String\n}\n\n@rest(\"/customers\")\nservice CustomerService for (Customer) {\n    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent\n    @get(\"/{id}\")\n    getCustomer(id) Customer?\n    @put(\"/{id}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\n    @delete(\"/{id}\")\n    deleteCustomer(id) withEvents CustomerEvent\n    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]\n}\n\n@copy(Customer)\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerEvent {\n    id Long\n    version Integer\n    // all fields from Customer are copied here, but not relationships\n    paymentMethods PaymentMethod[]\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/zenwave-jpa-baseline/zenwave-model.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java#L3-L33","language":"java","visibleRange":"3,33","content":"/**\n * Simple domain project layout.\n *\n * <pre>\n * 📦 {{basePackage}}                            # Root package\n *    📦 config                                  # Spring Boot configuration, security, etc.\n *    📦 domain                                  # Domain Layer (Business Entities and Events)\n *        ├─ *Entities\n *        └─ events/\n *           └─ *DomainEvents\n *    📦 repository                              # Repository Layer (Persistence and Data Access)\n *        ├─ {{persistence}}/\n *        |   ├─ *RepositoryInterface            # Persistence interface (Spring Data, etc.)\n *        |   └─ *RepositoryImpl                 # Repository implementation\n *    📦 events                                  # Events Layer (Internal and Async API Events)\n *        ├─ *EventListeners                     # Event listeners\n *    📦 commands                                # Command Layer (Command Handlers)\n *        ├─ *CommandHandlers                   # Command handlers (e.g., CQRS commands)\n *    📦 service                                 # Service Layer (Business Logic and DTOs)\n *        ├─ dtos/\n *        |   └─ *DTOs                           # Data Transfer Objects\n *        ├─ impl/\n *        |   └─ *ServiceImplementation          # Service implementations\n *        └─ impl/mappers/\n *            └─ *Mappers                        # Object mappers for transformations\n *    📦 web                                     # Web Layer (Controllers and API)\n *        ├─ *RestControllers                   # REST controllers (Spring MVC, etc.)\n *        └─ mappers/\n *           └─ *WebMappers                     # Mappers for web layer transformations\n * </pre>\n */","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java:3,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java#L3-L33","language":"java","visibleRange":"3,33","content":"/**\n * Simple domain project layout.\n *\n * <pre>\n * 📦 {{basePackage}}                            # Root package\n *    📦 config                                  # Spring Boot configuration, security, etc.\n *    📦 domain                                  # Domain Layer (Business Entities and Events)\n *        ├─ *Entities\n *        └─ events/\n *           └─ *DomainEvents\n *    📦 repository                              # Repository Layer (Persistence and Data Access)\n *        ├─ {{persistence}}/\n *        |   ├─ *RepositoryInterface            # Persistence interface (Spring Data, etc.)\n *        |   └─ *RepositoryImpl                 # Repository implementation\n *    📦 events                                  # Events Layer (Internal and Async API Events)\n *        ├─ *EventListeners                     # Event listeners\n *    📦 commands                                # Command Layer (Command Handlers)\n *        ├─ *CommandHandlers                   # Command handlers (e.g., CQRS commands)\n *    📦 service                                 # Service Layer (Business Logic and DTOs)\n *        ├─ dtos/\n *        |   └─ *DTOs                           # Data Transfer Objects\n *        ├─ impl/\n *        |   └─ *ServiceImplementation          # Service implementations\n *        └─ impl/mappers/\n *            └─ *Mappers                        # Object mappers for transformations\n *    📦 web                                     # Web Layer (Controllers and API)\n *        ├─ *RestControllers                   # REST controllers (Spring MVC, etc.)\n *        └─ mappers/\n *           └─ *WebMappers                     # Mappers for web layer transformations\n * </pre>\n */","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/LayeredProjectLayout.java:3,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L158-L166","language":"yml","visibleRange":"158,166","content":"    CustomerPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"Customer\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/Customer\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:158,166"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","language":"zdl","visibleRange":null,"content":"config {\n    title \"Clinical Tool Backend\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.clinical\"\n    // you can choose different layouts, see docs at https://www.zenwave360.io/docs/\n    layout CleanHexagonalProjectLayout\n}\n\n@aggregate\nentity Hospital {\n    name String required unique maxlength(254)\n    lang String required maxlength(3) /** Primary language of the hospital */\n    timezone String required maxlength(3) /** ECT (Europe/Madrid)  */\n}\n\n@aggregate\n@auditing\nentity Doctor {\n    userId Long\n    profilePictureId Long\n    hospitalId Long required\n    name String required maxlength(100)\n    surname String required maxlength(100)\n    surname2 String maxlength(100)\n    email String maxlength(100) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\n    phoneNumber String maxlength(20)\n    lang String maxlength(3) /** Primary language of the doctor */\n}\n\n@aggregate\n@auditing\nentity Patient {\n    userId Long\n    spikeUUID String /** se modifica directamente via Spike webhook en WearableDataRepository */\n    hospitalId Long required\n    profilePictureId Long\n\n    @naturalId\n    phoneNumber String required maxlength(20)\n    @naturalId\n    hisNumber String required maxlength(100)\n\n    email String required maxlength(100) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\n\n    generalInfo GeneralInfo {\n        name String required maxlength(100)\n        surname String required maxlength(100)\n        surname2 String maxlength(100)\n        identityDocumentType IdentityDocumentType required\n        identityDocumentNumber String required maxlength(20)\n        birthDate LocalDate required\n        gender GenderType required\n        lang String maxlength(3) /** Primary language of the patient */\n    }\n\n    healthInsuranceInfo HealthInsuranceInfo {\n        insuranceCompanyId String required maxlength(100)\n        insuranceCardNumber String required maxlength(20)\n    }\n\n    @json documentIds Long[]\n}\n\nrelationship OneToMany {\n    Patient{medicalContacts required } to MedicalContact{patient required}\n    Patient{personalContacts required } to PersonalContact{patient required}\n    Patient{patientAddresses required } to PatientAddress{patient required}\n    Patient{hospitalAddresses required } to HospitalAddress{patient required}\n    Patient{patientWearables required } to PatientWearable{patient required}\n}\n\n@aggregate\nentity ProvisionalPatient {\n    @naturalId\n    phoneNumber String required maxlength(20)\n    @naturalId\n    hisNumber String required maxlength(100)\n    @json patient Patient\n}\n\n@skip\nentity Address {\n   street String required maxlength(100)\n   city String required maxlength(100)\n   postalCode String required maxlength(10)\n   countryCode String required maxlength(3)\n   additionalInfo String maxlength(254)\n}\n\n@copy(Address)\nentity PatientAddress {\n   current Boolean required\n}\n\n@copy(Address)\nentity HospitalAddress {\n}\n\nenum IdentityDocumentType {\n    DNI(1), NIE(2), PASSPORT(3)\n}\n\nenum GenderType {\n    MALE(1), FEMALE(2), OTHER(3)\n}\n\n\nentity PatientWearable {\n    wearableType String required\n    serialNumber String maxlength(20)\n}\n\n\nentity MedicalContact {\n    name String required maxlength(100)\n    surname String required maxlength(100)\n    surname2 String maxlength(100)\n    hospital String maxlength(254)\n    area String maxlength(100)\n    jobPosition String maxlength(100)\n    phoneNumber String required maxlength(20)\n    email String required maxlength(100) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\n}\n\nentity PersonalContact {\n    name String required maxlength(100)\n    surname String required maxlength(100)\n    surname2 String maxlength(100)\n    phoneNumber String required maxlength(20)\n    email String required maxlength(100) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)\n    patientRelationshipType PatientRelationshipType\n    emergencyContact Boolean required\n}\n\nenum PatientRelationshipType {\n    SON_DAUGTHER(1), CARE_GIVER(2), OTHER(3)\n}\n\n@inline\ninput HospitalId {\n    hospitalId Long required\n}\n\n@inline\ninput CriterioPatient {\n    hisNumber String required maxlength(100)\n    phoneNumber String required maxlength(20)\n}\n\noutput PatientHospital {\n    patientId Long\n    hospitalId Long\n    hisNumber String\n    fullName String\n    gender GenderType\n    dni String\n    birthDate LocalDate\n    phone String\n    email String\n    insuranceCardNumber String\n    address String\n}\n\n@rest\nservice HospitalService for (Hospital, Doctor) {\n    @get(\"/hospitals/{id}\")\n    getHospital(id) Hospital?\n    @post(\"/hospitals\")\n    createHospital(Hospital) Hospital\n    @put(\"/hospitals/{id}\")\n    updateHospital(id, Hospital) Hospital?\n    @get(\"/hospitals\")\n    listHospitals() Hospital[]\n\n    @post(\"/doctors\")\n    createDoctor(Doctor) Doctor withEvents DoctorCreated\n    @put(\"/doctors/{id}\")\n    updateDoctor(id, Doctor) Doctor?\n    @get(\"/doctors/{id}\")\n    getDoctor(id) Doctor?\n    @get(\"/doctors\")\n    listDoctors() Doctor[]\n\n    @get(\"/hospital/{hospitalId}/doctors\")\n    @entityForId(Hospital)\n    listHospitalDoctors(HospitalId) Doctor[]\n\n    @get(\"/hospital/{hospitalId}/patients\")\n    @entityForId(Hospital)\n    listHospitalPatients(HospitalId) PatientHospital[]\n}\n\ninput DocumentSignatureRequestedInput {\n    documentInfoId Long required\n    patientId Long required\n}\n\n@rest\nservice PatientsService for (Patient, ProvisionalPatient) {\n    /**\n    * Loads a saved temporal patient or new one if not found.\n    */\n    @get(\"/patients/{hisNumber}/{phoneNumber}\")\n    loadPatient(@natural id) Patient\n\n    /**\n    * Persist a temporal patient in the database.\n    */\n    @patch(\"/patients/{hisNumber}/{phoneNumber}\")\n    partialPatientUpdate(@natural id, Patient) Patient\n\n    /**\n    * Persite a patient in the database and deletes any temporal data.\n    */\n    @post(\"/patients\")\n    createPatient(Patient) Patient withEvents PatientCreated\n\n    /**\n    * Updates a patient in the database.\n    */\n    @put(\"/patients/{id}\")\n    updatePatient(id, Patient) Patient?\n\n    /**\n    * Load a patient by id\n    */\n    @get(\"/patients/{id}\")\n    getPatient(id) Patient?\n\n    /**\n    * Load a patient profile by id to mobile app.\n    */\n    @get(\"/patients/{id}/profile\")\n    @policies(isMobile)\n    @entityForId(Patient)\n    getPatientProfileById(id) PatientProfile\n\n    @post({ path: \"/patients/{id}/opt-out\", status: 200 })\n    @entityForId(Patient)\n    requestOptOut(id)\n\n    @listener({model: \"models/documents.zdl\", event: DocumentSignatureRequested})\n    associateDocumentWithPatient(DocumentSignatureRequestedInput)\n}\n\noutput PatientProfile {\n    name String required maxlength(100)\n    surname String required maxlength(100)\n    surname2 String maxlength(100)\n    birthDate LocalDate required\n    gender GenderType required\n    phoneNumber String required maxlength(20)\n}\n\nevent DoctorCreated {\n    doctor Doctor\n}\n\nevent PatientCreated {\n    patient Patient\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml#L326-L362","language":"xml","visibleRange":"326,362","content":"\t\t\t<plugin>\n\t\t\t\t<groupId>org.openapitools</groupId>\n\t\t\t\t<artifactId>openapi-generator-maven-plugin</artifactId>\n\t\t\t\t<version>7.10.0</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>generate</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<phase>generate-sources</phase>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<inputSpec>${project.basedir}/src/main/resources/public/apis/openapi.yml</inputSpec>\n\t\t\t\t\t\t\t<skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>\n\t\t\t\t\t\t\t<generatorName>spring</generatorName>\n\t\t\t\t\t\t\t<apiPackage>${openApiApiPackage}</apiPackage>\n\t\t\t\t\t\t\t<modelPackage>${openApiModelPackage}</modelPackage>\n\t\t\t\t\t\t\t<modelNameSuffix>DTO</modelNameSuffix>\n\t\t\t\t\t\t\t<addCompileSourceRoot>true</addCompileSourceRoot>\n\t\t\t\t\t\t\t<generateSupportingFiles>false</generateSupportingFiles>\n\t\t\t\t\t\t\t<typeMappings>\n\t\t\t\t\t\t\t\t<typeMapping>Double=java.math.BigDecimal</typeMapping>\n\t\t\t\t\t\t\t</typeMappings>\n\t\t\t\t\t\t\t<configOptions>\n\t\t\t\t\t\t\t\t<useSpringBoot3>true</useSpringBoot3>\n\t\t\t\t\t\t\t\t<documentationProvider>none</documentationProvider>\n\t\t\t\t\t\t\t\t<openApiNullable>false</openApiNullable>\n\t\t\t\t\t\t\t\t<useOptional>false</useOptional>\n\t\t\t\t\t\t\t\t<useTags>true</useTags>\n\t\t\t\t\t\t\t\t<interfaceOnly>true</interfaceOnly>\n\t\t\t\t\t\t\t\t<skipDefaultInterface>true</skipDefaultInterface>\n\t\t\t\t\t\t\t\t<delegatePattern>false</delegatePattern>\n\t\t\t\t\t\t\t\t<sortParamsByRequiredFlag>false</sortParamsByRequiredFlag>\n\t\t\t\t\t\t\t</configOptions>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml:326,362"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java#L3-L33","language":"java","visibleRange":"3,33","content":"/**\n * Hexagonal Architecture (also called Ports and Adapters) with a Clean separation of concerns, following Domain-Driven Design (DDD) and Event-Driven Architecture (EDA) principles.\n *\n * <pre>\n * 📦 {{basePackage}}\n *    📦 adapters\n *        └─ web\n *        |  └─ RestControllers (spring mvc)\n *        └─ events\n *           └─ *EventListeners (spring-cloud-streams)\n *    📦 core\n *        ├─ 📦 domain\n *        |     └─ (entities and aggregates)\n *        ├─ 📦 inbound\n *        |     ├─ dtos/\n *        |     └─ ServiceInterface (inbound service interface)\n *        ├─ 📦 outbound\n *        |     ├─ mongodb\n *        |     |  └─ *RepositoryInterface (spring-data interface)\n *        |     └─ jpa\n *        |        └─ *RepositoryInterface (spring-data interface)\n *        └─ 📦 implementation\n *              ├─ mappers/\n *              └─ ServiceImplementation (inbound service implementation)\n *    📦 infrastructure\n *      ├─ mongodb\n *      |  └─ CustomRepositoryImpl (spring-data custom implementation)\n *      └─ jpa\n *         └─ CustomRepositoryImpl (spring-data custom implementation)\n * </pre>\n */","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/CleanHexagonalProjectLayout.java:3,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L20-L46","language":"zdl","visibleRange":"20,46","content":"/**\n* Customer entity\n*/\n@aggregate\n@auditing // adds auditing fields to the entity\nentity Customer {\n    name String required maxlength(254) /** Customer name */\n    email String required maxlength(254)\n    /** Customer Addresses can be stored in a JSON column in the database. */\n    @json addresses Address[] minlength(1) maxlength(5) {\n        street String required maxlength(254)\n        city String required maxlength(254)\n    }\n}\n\n@auditing\nentity PaymentMethod {\n    type PaymentMethodType required\n    cardNumber String required\n}\n\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\n\nrelationship OneToMany {\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:20,46"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L215-L264","language":"yml","visibleRange":"215,264","content":"    Page:\n      type: object\n      required:\n        - \"content\"\n        - \"totalElements\"\n        - \"totalPages\"\n        - \"size\"\n        - \"number\"\n      properties:\n        number:\n          type: integer\n          minimum: 0\n        numberOfElements:\n          type: integer\n          minimum: 0\n        size:\n          type: integer\n          minimum: 0\n          maximum: 200\n          multipleOf: 25\n        totalElements:\n          type: integer\n        totalPages:\n          type: integer\n\n  parameters:\n    page:\n      name: page\n      in: query\n      description: The number of results page\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    limit:\n      name: limit\n      in: query\n      description: The number of results in a single page\n      schema:\n        type: integer\n        format: int32\n        default: 20\n    sort:\n      name: sort\n      in: query\n      description: The number of results page\n      schema:\n        type: array\n        items:\n          type: string","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:215,264"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/users.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/users.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/users.zdl","language":"zdl","visibleRange":null,"content":"config {\n    title \"User Management\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.users\"\n    // you can choose: DefaultProjectLayout, CleanHexagonalProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\n    layout SimpleDomainProjectLayout\n}\n\n@aggregate\n@auditing\nentity User (application_user) {\n    name String\n    @naturalId\n    username String required unique\n    email String required unique\n    password String\n\n    @set\n    roles String[] required\n\n    enabled Boolean\n    credentialsNonExpired Boolean\n    accountNonExpired Boolean\n    accountNonLocked Boolean\n\n    @jsonb additionalProperties Map\n}\n\ninput SearchCriteria {\n    username String\n    email String\n    role String\n    enabled Boolean\n    searchTerms Map\n}\n\n@rest(\"/users\")\nservice UserService for (User) {\n\n    @get(\"/{username}\")\n    findByUsername(@natural id) User?\n\n    @post\n    createUser(User) User\n    @put(\"/{username}\")\n    updateUser(@natural id, User) User?\n\n    @put(path: \"/{username}/lock\", status: 200)\n    lockAccount(@natural id) User?\n    @put(path: \"/{username}/unlock\", status: 200)\n    unLockAccount(@natural id) User?\n    @delete(\"/{username}\")\n    deleteUser(@natural id)\n\n    @post(path: \"/search\", status: 200) @paginated\n    searchUsers(SearchCriteria) User[]\n    @get(\"/list\") @paginated\n    listUsers() User[]\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/users.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java#L3-L33","language":"java","visibleRange":"3,33","content":"/**\n * Simple domain project layout.\n *\n * <pre>\n * 📦 {{basePackage}}\n *    └─ 📦 config\n *    └─ 📦 model (entities and aggregates)\n *    └─ 📦 dtos\n *    └─ 📦 events\n *    ├─ 📦 mappers\n *    ├─ *EventListeners (spring-cloud-streams)\n *    ├─ *RestControllers (spring mvc)\n *    ├─ ServiceImplementation\n *    └─ *RepositoryInterface\n * </pre>\n */\npublic class SimpleDomainProjectLayout extends ProjectLayout {\n\n    {\n        basePackage = \"{{basePackage}}\";\n        // in case of modular project\n        configPackage = \"{{basePackage}}.config\";\n        commonPackage = \"{{basePackage}}\"; // set to \"{{basePackage}}.common\" in modular projects\n        modulesPackage = \"{{basePackage}}.modules\";\n\n        // module specific\n        moduleBasePackage = \"{{basePackage}}\";\n        moduleConfigPackage = \"{{moduleBasePackage}}.config\";\n\n        // domain entities and events\n        entitiesPackage = \"{{moduleBasePackage}}.domain\";","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java:3,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java#L3-L33","language":"java","visibleRange":"3,33","content":"/**\n * Simple domain project layout.\n *\n * <pre>\n * 📦 {{basePackage}}\n *    └─ 📦 config\n *    └─ 📦 model (entities and aggregates)\n *    └─ 📦 dtos\n *    └─ 📦 events\n *    ├─ 📦 mappers\n *    ├─ *EventListeners (spring-cloud-streams)\n *    ├─ *RestControllers (spring mvc)\n *    ├─ ServiceImplementation\n *    └─ *RepositoryInterface\n * </pre>\n */\npublic class SimpleDomainProjectLayout extends ProjectLayout {\n\n    {\n        basePackage = \"{{basePackage}}\";\n        // in case of modular project\n        configPackage = \"{{basePackage}}.config\";\n        commonPackage = \"{{basePackage}}\"; // set to \"{{basePackage}}.common\" in modular projects\n        modulesPackage = \"{{basePackage}}.modules\";\n\n        // module specific\n        moduleBasePackage = \"{{basePackage}}\";\n        moduleConfigPackage = \"{{moduleBasePackage}}.config\";\n\n        // domain entities and events\n        entitiesPackage = \"{{moduleBasePackage}}.domain\";","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/SimpleDomainProjectLayout.java:3,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java#L79-L106","language":"yml","visibleRange":"79,106","content":"    @Override\n    public ResponseEntity<DocumentInfoDTO> uploadDocument(\n            org.springframework.web.multipart.MultipartFile file,\n            Long id,\n            Integer version,\n            String uuid,\n            String fileName,\n            String documentType,\n            String contentType,\n            List<String> tags,\n            DocumentDataDTO documentData) {\n        log.debug(\n                \"REST request to uploadDocument: {}, {}, {}, {}, {}, {}, {}, {}, {}\",\n                file,\n                id,\n                version,\n                uuid,\n                fileName,\n                documentType,\n                contentType,\n                tags,\n                documentData);\n        var input =\n                mapper.asDocumentInfo(file, id, version, uuid, fileName, documentType, contentType, tags, documentData);\n        var documentInfo = documentService.uploadDocument(input);\n        DocumentInfoDTO responseDTO = mapper.asDocumentInfoDTO(documentInfo);\n        return ResponseEntity.status(201).body(responseDTO);\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java:79,106"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Customer.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Customer.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Customer.java#L23-L115","language":"java","visibleRange":"23,115","content":"@lombok.Getter\n@lombok.Setter\n@Entity\n@Table(name = \"customer\")\n@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n@EntityListeners(AuditingEntityListener.class)\npublic class Customer implements Serializable {\n\n    @java.io.Serial\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\n    private Long id;\n\n    @Version\n    private Integer version;\n\n    /** Customer name */\n    @NotNull\n    @Size(max = 254)\n    @Column(name = \"name\", nullable = false, length = 254)\n    private String name;\n\n    @NotNull\n    @Size(max = 254)\n    @Pattern(regexp = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}\")\n    @Column(name = \"email\", nullable = false, length = 254)\n    private String email;\n\n    /** Customer Addresses can be stored in a JSON column in the database. */\n    @Size(min = 1, max = 5)\n    @org.hibernate.annotations.JdbcTypeCode(org.hibernate.type.SqlTypes.JSON)\n    @Column(name = \"addresses\")\n    private List<Address> addresses = new ArrayList<>();\n\n    @NotNull\n    @Size(max = 3)\n    @OneToMany(mappedBy = \"customer\", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true)\n    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n    private Set<PaymentMethod> paymentMethods = new HashSet<>();\n\n    @CreatedBy\n    @Column(name = \"created_by\", updatable = false)\n    protected String createdBy;\n\n    @CreatedDate\n    @Column(name = \"created_date\", columnDefinition = \"TIMESTAMP\", updatable = false)\n    protected LocalDateTime createdDate;\n\n    @LastModifiedBy\n    @Column(name = \"last_modified_by\")\n    protected String lastModifiedBy;\n\n    @LastModifiedDate\n    @Column(name = \"last_modified_date\", columnDefinition = \"TIMESTAMP\")\n    protected LocalDateTime lastModifiedDate;\n\n    // manage relationships\n    public Customer addPaymentMethods(PaymentMethod paymentMethods) {\n        this.paymentMethods.add(paymentMethods);\n        paymentMethods.setCustomer(this);\n        return this;\n    }\n\n    public Customer removePaymentMethods(PaymentMethod paymentMethods) {\n        this.paymentMethods.remove(paymentMethods);\n        paymentMethods.setCustomer(null);\n        return this;\n    }\n\n    /*\n     * https://vladmihalcea.com/the-best-way-to-implement-equals-hashcode-and-tostring-\n     * with-jpa-and-hibernate/\n     */\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (!(o instanceof Customer)) {\n            return false;\n        }\n        Customer other = (Customer) o;\n        return getId() != null && getId().equals(other.getId());\n    }\n\n    @Override\n    public int hashCode() {\n        return getClass().hashCode();\n    }\n\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Customer.java:23,115"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","language":"zdl","visibleRange":null,"content":"/**\n * Sample ZenWave Model Definition.\n * Use zenwave-scripts.zdl to generate your code from this model definition.\n */\nconfig {\n    title \"ZenWave Customer JPA Example\"\n    basePackage \"io.zenwave360.example\"\n    persistence jpa\n    databaseType postgresql\n\n    layout CleanHexagonalProjectLayout\n\n    // these should match the values of openapi-generator-maven-plugin\n    // used by the OpenAPIControllersPlugin and SpringWebTestClientPlugin\n    openApiApiPackage \"{{basePackage}}.adapters.web\"\n    openApiModelPackage \"{{basePackage}}.adapters.web.model\"\n    openApiModelNameSuffix DTO\n}\n\n/**\n* Customer entity\n*/\n@aggregate\n@auditing // adds auditing fields to the entity\nentity Customer {\n    name String required maxlength(254) /** Customer name */\n    email String required maxlength(254)\n    /** Customer Addresses can be stored in a JSON column in the database. */\n    @json addresses Address[] minlength(1) maxlength(5) {\n        street String required maxlength(254)\n        city String required maxlength(254)\n    }\n}\n\n@auditing\nentity PaymentMethod {\n    type PaymentMethodType required\n    cardNumber String required\n}\n\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\n\nrelationship OneToMany {\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\n}\n\n// you can create 'inputs' as dtos for your service methods, or use entities directly\ninput CustomerSearchCriteria {\n    name String\n    email String\n    city String\n    state String\n}\n\n@rest(\"/customers\")\nservice CustomerService for (Customer) {\n    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent\n    @get(\"/{id}\")\n    getCustomer(id) Customer?\n    @put(\"/{id}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\n    @delete(\"/{id}\")\n    deleteCustomer(id) withEvents CustomerDeletedEvent\n    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]\n}\n\n@copy(Customer)\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerEvent {\n    id Long required\n    version Integer\n    // all fields from Customer are copied here, but not relationships\n    paymentMethods PaymentMethod[]\n}\n\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerDeletedEvent {\n    id Long required\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java#L60-L70","language":"java","visibleRange":"60,70","content":"    @Override\n    public ResponseEntity<Resource> downloadDocument(Long id, Boolean preview) {\n        log.debug(\"REST request to downloadDocument: {}, {}\", id, preview);\n        var documentInfo = documentService.downloadDocument(id);\n        byte[] bytes = null; // TODO get bytes from documentData.data\n        ByteArrayResource resource = new ByteArrayResource(bytes);\n        return ResponseEntity.status(200)\n                .header(\"Content-Disposition\", \"inline\") // or attachment; filename=example.pdf\n                .contentType(MediaType.APPLICATION_OCTET_STREAM) // TODO: set content type\n                .body(resource);\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java:60,70"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","language":"yaml","visibleRange":null,"content":"openapi: 3.0.1\ninfo:\n  title: \"ZenWave Customer JPA Example\"\n  version: 0.0.1\n  description: \"ZenWave Customer JPA Example\"\n  contact:\n    email: email@domain.com\nservers:\n  - description: localhost\n    url: http://localhost:8080/api\n  - description: custom\n    url: \"{protocol}://{server}/{path}\"\n    variables:\n      protocol:\n        enum: ['http', 'https']\n        default: 'http'\n      server:\n        default: 'localhost:8080'\n      path:\n        default: 'api'\ntags:\n  - name: \"Default\"\n  - name: \"Customer\"\n\n\npaths:\n  /customers:\n    post:\n      operationId: createCustomer\n      description: \"createCustomer\"\n      tags: [Customer]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n  /customers/{id}:\n    get:\n      operationId: getCustomer\n      description: \"getCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n    put:\n      operationId: updateCustomer\n      description: \"updateCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n    delete:\n      operationId: deleteCustomer\n      description: \"deleteCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"204\":\n          description: \"OK\"\n  /customers/search:\n    post:\n      operationId: searchCustomers\n      description: \"searchCustomers\"\n      tags: [Customer]\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSearchCriteria\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPaginated\"\n\ncomponents:\n  schemas:\n    Customer:\n      type: \"object\"\n      x-business-entity: \"Customer\"\n      required:\n      - \"name\"\n      - \"email\"\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n        version:\n          type: \"integer\"\n        name:\n          type: \"string\"\n          maxLength: 254\n          description: \"Customer name\"\n        email:\n          type: \"string\"\n          maxLength: 254\n          pattern: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}\"\n          description: \"\"\n        addresses:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/Address\"\n            minLength: 1\n            maxLength: 5\n        paymentMethods:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/PaymentMethod\"\n    CustomerPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"Customer\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/Customer\"\n    CustomerSearchCriteria:\n      type: \"object\"\n      x-business-entity: \"CustomerSearchCriteria\"\n      properties:\n        name:\n          type: \"string\"\n        email:\n          type: \"string\"\n        city:\n          type: \"string\"\n        state:\n          type: \"string\"\n    PaymentMethodType:\n      type: \"string\"\n      x-business-entity: \"PaymentMethodType\"\n      enum:\n      - \"VISA\"\n      - \"MASTERCARD\"\n    Address:\n      type: \"object\"\n      x-business-entity: \"Address\"\n      required:\n      - \"street\"\n      - \"city\"\n      properties:\n        street:\n          type: \"string\"\n          maxLength: 254\n        city:\n          type: \"string\"\n          maxLength: 254\n    PaymentMethod:\n      type: \"object\"\n      x-business-entity: \"PaymentMethod\"\n      required:\n      - \"type\"\n      - \"cardNumber\"\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n        version:\n          type: \"integer\"\n        type:\n          $ref: \"#/components/schemas/PaymentMethodType\"\n        cardNumber:\n          type: \"string\"\n\n    Page:\n      type: object\n      required:\n        - \"content\"\n        - \"totalElements\"\n        - \"totalPages\"\n        - \"size\"\n        - \"number\"\n      properties:\n        number:\n          type: integer\n          minimum: 0\n        numberOfElements:\n          type: integer\n          minimum: 0\n        size:\n          type: integer\n          minimum: 0\n          maximum: 200\n          multipleOf: 25\n        totalElements:\n          type: integer\n        totalPages:\n          type: integer\n\n  parameters:\n    page:\n      name: page\n      in: query\n      description: The number of results page\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    limit:\n      name: limit\n      in: query\n      description: The number of results in a single page\n      schema:\n        type: integer\n        format: int32\n        default: 20\n    sort:\n      name: sort\n      in: query\n      description: The number of results page\n      schema:\n        type: array\n        items:\n          type: string\n\n  securitySchemes:\n    basicAuth:     # <-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n    bearerAuth:     # <-- arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT    # optional, arbitrary value for documentation purposes\n\nsecurity:\n  - basicAuth: []  # <-- use the same name here\n  - bearerAuth: []  # <-- use the same name here\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml#L326-L362","language":"xml","visibleRange":"326,362","content":"\t\t\t<plugin>\n\t\t\t\t<groupId>org.openapitools</groupId>\n\t\t\t\t<artifactId>openapi-generator-maven-plugin</artifactId>\n\t\t\t\t<version>7.10.0</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>generate</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<phase>generate-sources</phase>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<inputSpec>${project.basedir}/src/main/resources/public/apis/openapi.yml</inputSpec>\n\t\t\t\t\t\t\t<skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>\n\t\t\t\t\t\t\t<generatorName>spring</generatorName>\n\t\t\t\t\t\t\t<apiPackage>${openApiApiPackage}</apiPackage>\n\t\t\t\t\t\t\t<modelPackage>${openApiModelPackage}</modelPackage>\n\t\t\t\t\t\t\t<modelNameSuffix>DTO</modelNameSuffix>\n\t\t\t\t\t\t\t<addCompileSourceRoot>true</addCompileSourceRoot>\n\t\t\t\t\t\t\t<generateSupportingFiles>false</generateSupportingFiles>\n\t\t\t\t\t\t\t<typeMappings>\n\t\t\t\t\t\t\t\t<typeMapping>Double=java.math.BigDecimal</typeMapping>\n\t\t\t\t\t\t\t</typeMappings>\n\t\t\t\t\t\t\t<configOptions>\n\t\t\t\t\t\t\t\t<useSpringBoot3>true</useSpringBoot3>\n\t\t\t\t\t\t\t\t<documentationProvider>none</documentationProvider>\n\t\t\t\t\t\t\t\t<openApiNullable>false</openApiNullable>\n\t\t\t\t\t\t\t\t<useOptional>false</useOptional>\n\t\t\t\t\t\t\t\t<useTags>true</useTags>\n\t\t\t\t\t\t\t\t<interfaceOnly>true</interfaceOnly>\n\t\t\t\t\t\t\t\t<skipDefaultInterface>true</skipDefaultInterface>\n\t\t\t\t\t\t\t\t<delegatePattern>false</delegatePattern>\n\t\t\t\t\t\t\t\t<sortParamsByRequiredFlag>false</sortParamsByRequiredFlag>\n\t\t\t\t\t\t\t</configOptions>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml:326,362"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","language":"zdl","visibleRange":null,"content":"config {\n    title \"Documents Model\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.documents\"\n    // you can choose: DefaultProjectLayout, CleanHexagonalProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\n    layout SimpleDomainProjectLayout\n}\n\n@aggregate\nentity DocumentInfo {\n    uuid String\n    fileName String required\n    documentType String required\n    contentType String required\n    tags String[]\n}\n\nentity DocumentData {\n    data Blob required\n}\n\nrelationship OneToOne {\n    DocumentInfo{documentData required } to @Id DocumentData{document required}\n}\n\n@inline\ninput DocumentIds {\n    documentIds Long[]\n}\n\n@rest(\"/documents\")\nservice DocumentService for (DocumentInfo) {\n\n    @get({path: \"/\"})\n    listDocumentInfo(DocumentIds) DocumentInfo[]\n\n    @get({path: \"/{id}\", params: {preview: boolean} })\n    @filedownload(\"documentData.data\")\n    downloadDocument(id) DocumentInfo\n\n    @post({path: \"/upload\", status: 201})\n    @fileupload(\"file\")\n    uploadDocument(DocumentInfo) DocumentInfo\n\n    @delete({path: \"/{id}\", status: 204})\n    deleteDocumentInfo(id)\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/HexagonalProjectLayout.java","originalUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/HexagonalProjectLayout.java","sourceUrl":"https://github.com/ZenWave360/zenwave-sdk/blob/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/HexagonalProjectLayout.java#L3-L35","language":"java","visibleRange":"3,35","content":"/**\n * Hexagonal project layout.\n *\n * <pre>\n * 📦 {{basePackage}}\n *    📦 domain                         # Domain model (Entities, Aggregates, Value Objects)\n *        └─ *Entities\n *        |\n *    📦 ports                          # Port interfaces\n *        ├─ inbound                   # Primary ports (driving adapters)\n *        |   └─ UserServicePort       # Interface for business logic (input)\n *        └─ outbound                  # Secondary ports (driven adapters)\n *            └─ UserRepositoryPort    # Interface for persistence (output)\n *        |\n *    📦 application                   # Application core (business logic services)\n *        ├─ services                 # Service implementations\n *        |   └─ UserServiceImpl      # Implements UserServicePort, uses UserRepositoryPort\n *        └─ mappers                 # Optional: Mapping between entities and DTOs\n *        |\n *    📦 adapters                      # Interface adapters (controllers, repositories, listeners)\n *        ├─ web                     # Web adapter (e.g., REST)\n *        |   └─ UserController      # Calls UserServicePort\n *        ├─ persistence             # Persistence adapters\n *        |   ├─ mongodb/\n *        |   |   └─ MongoUserRepository (implements UserRepositoryPort)\n *        |   └─ jpa/\n *        |       └─ JpaUserRepository (implements UserRepositoryPort)\n *        └─ events                  # Event-driven adapters\n *            └─ UserEventListener   # Listens to events, calls UserServicePort\n *        |\n *    📦 config                  # Spring Boot configurations\n * </pre>\n */","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-sdk/refs/heads/main/zenwave-sdk-cli/src/main/java/io/zenwave360/sdk/zdl/layouts/HexagonalProjectLayout.java:3,35"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Address.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Address.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Address.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.domain;\n\nimport jakarta.persistence.Column;\nimport jakarta.validation.constraints.NotNull;\nimport jakarta.validation.constraints.Size;\n\nimport java.io.Serializable;\n\n/** */\n@lombok.Getter\n@lombok.Setter\n// @Embeddable // json embedded\npublic class Address implements Serializable {\n\n    @java.io.Serial\n    private static final long serialVersionUID = 1L;\n\n    @NotNull\n    @Size(max = 254)\n    @Column(name = \"street\", nullable = false, length = 254)\n    private String street;\n\n    @NotNull\n    @Size(max = 254)\n    @Column(name = \"city\", nullable = false, length = 254)\n    private String city;\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/Address.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml","language":"yaml","visibleRange":null,"content":"asyncapi: 3.0.0\ninfo:\n  title: \"ZenWave Customer JPA Example\"\n  version: 0.0.1\n  tags:\n    - name: \"Default\"\n    - name: \"Customer\"\n\ndefaultContentType: application/json\n\nchannels:\n  CustomersChannel:\n    address: \"customers\"\n    messages:\n      CustomerDeletedEventMessage:\n        $ref: '#/components/messages/CustomerDeletedEventMessage'\n      CustomerEventMessage:\n        $ref: '#/components/messages/CustomerEventMessage'\n\noperations:\n  onCustomerEvent:\n    action: send\n    tags:\n      - name: Customer\n    channel:\n      $ref: '#/channels/CustomersChannel'\n  onCustomerDeletedEvent:\n    action: send\n    tags:\n      - name: Customer\n    channel:\n      $ref: '#/channels/CustomersChannel'\n\n\ncomponents:\n  messages:\n    CustomerEventMessage:\n      name: CustomerEventMessage\n      title: \"\"\n      summary: \"\"\n      traits:\n        - $ref: '#/components/messageTraits/CommonHeaders'\n      payload:\n        schemaFormat: application/vnd.apache.avro+json;version=1.9.0\n        schema:\n          $ref: \"avro/CustomerEvent.avsc\"\n    CustomerDeletedEventMessage:\n      name: CustomerDeletedEventMessage\n      title: \"\"\n      summary: \"\"\n      traits:\n        - $ref: '#/components/messageTraits/CommonHeaders'\n      payload:\n        schemaFormat: application/vnd.apache.avro+json;version=1.9.0\n        schema:\n          $ref: \"avro/CustomerDeletedEvent.avsc\"\n\n  messageTraits:\n    CommonHeaders:\n      headers:\n        type: object\n        properties:\n          kafka_messageKey:\n            type: \"long\"\n            \n            description: This header value will be populated automatically at runtime\n            x-runtime-expression: $message.payload#/id\n\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java#L14-L37","language":"java","visibleRange":"14,37","content":"/** Test controller for CustomerApiController. */\nclass CustomerApiControllerTest {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    ServicesInMemoryConfig context = new ServicesInMemoryConfig();\n\n    CustomerApiController controller = new CustomerApiController(context.customerService());\n\n    @BeforeEach\n    void setUp() {\n        context.reloadTestData();\n    }\n\n    @Test\n    void createCustomerTest() {\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.createCustomer(reqBody);\n        Assertions.assertEquals(201, response.getStatusCode().value());\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java:14,37"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/masterdata.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/masterdata.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/masterdata.zdl","language":"zdl","visibleRange":null,"content":"config {\n    title \"Master Data\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.masterdata\"\n    // you can choose: DefaultProjectLayout, CleanHexagonalProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\n    layout SimpleDomainProjectLayout\n}\n\n@aggregate\nentity MasterData {\n    @naturalId\n    type MasterDataType required\n    @naturalId\n    key String required maxlength(254)\n    value String required maxlength(254)\n    @jsonb translations MasterDataTranslation[] {\n        lang String required\n        text String required\n    }\n}\n\nenum MasterDataType {\n    GENDER(1)\n    ID_DOCUMENT_TYPE(2)\n    COUNTRY(3)\n    INSURANCE_COMPANY(4)\n    MEDICAL_AREA(5)\n}\n\noutput MasterDataKeyValue {\n    key String\n    value String\n}\n\n@inline\ninput MasterDataFilter {\n    type MasterDataType\n    lang String\n}\n\n@rest(\"/masterdata\")\nservice MasterDataService for (MasterData) {\n    @post\n    createMasterData(MasterData) MasterData\n    @get(\"/{id}\")\n    getMasterData(id) MasterData?\n    @put(\"/{id}\")\n    updateMasterData(id, MasterData) MasterData?\n    @get @paginated\n    listMasterData() MasterData[]\n    @delete(\"/{id}\")\n    deleteMasterData(id)\n\n    @get(\"/type/{type}/{lang}\")\n    listMasterDataOfType(MasterDataFilter) MasterDataKeyValue[]\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/masterdata.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethod.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethod.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethod.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.domain;\n\nimport jakarta.persistence.*;\nimport jakarta.validation.constraints.NotNull;\nimport org.hibernate.annotations.Cache;\nimport org.hibernate.annotations.CacheConcurrencyStrategy;\nimport org.springframework.data.annotation.CreatedBy;\nimport org.springframework.data.annotation.CreatedDate;\nimport org.springframework.data.annotation.LastModifiedBy;\nimport org.springframework.data.annotation.LastModifiedDate;\nimport org.springframework.data.jpa.domain.support.AuditingEntityListener;\n\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\n\n/** */\n@lombok.Getter\n@lombok.Setter\n@Entity\n@Table(name = \"payment_method\")\n@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n@EntityListeners(AuditingEntityListener.class)\npublic class PaymentMethod implements Serializable {\n\n    @java.io.Serial\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\n    @SequenceGenerator(name = \"sequenceGenerator\")\n    private Long id;\n\n    @Version\n    private Integer version;\n\n    @NotNull\n    @Column(name = \"type\", nullable = false)\n    @Convert(converter = PaymentMethodType.PaymentMethodTypeConverter.class)\n    private PaymentMethodType type;\n\n    @NotNull\n    @Column(name = \"card_number\", nullable = false)\n    private String cardNumber;\n\n    @NotNull\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"customer_id\")\n    private Customer customer;\n\n    @CreatedBy\n    @Column(name = \"created_by\", updatable = false)\n    protected String createdBy;\n\n    @CreatedDate\n    @Column(name = \"created_date\", columnDefinition = \"TIMESTAMP\", updatable = false)\n    protected LocalDateTime createdDate;\n\n    @LastModifiedBy\n    @Column(name = \"last_modified_by\")\n    protected String lastModifiedBy;\n\n    @LastModifiedDate\n    @Column(name = \"last_modified_date\", columnDefinition = \"TIMESTAMP\")\n    protected LocalDateTime lastModifiedDate;\n\n    /*\n     * https://vladmihalcea.com/the-best-way-to-implement-equals-hashcode-and-tostring-\n     * with-jpa-and-hibernate/\n     */\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (!(o instanceof PaymentMethod)) {\n            return false;\n        }\n        PaymentMethod other = (PaymentMethod) o;\n        return getId() != null && getId().equals(other.getId());\n    }\n\n    @Override\n    public int hashCode() {\n        return getClass().hashCode();\n    }\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethod.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java#L14-L27","language":"java","visibleRange":"14,27","content":"@ActiveProfiles(\"test\")\n@DockerComposeInitializer.EnableDockerCompose\n@org.springframework.transaction.annotation.Transactional\npublic abstract class BaseWebTestClientTest {\n\n    @Autowired\n    protected WebApplicationContext context;\n    protected WebTestClient webTestClient;\n\n    @BeforeEach\n    void setup() {\n        this.webTestClient = MockMvcWebTestClient.bindToApplicationContext(this.context).build();\n    }\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java:14,27"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethodType.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethodType.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethodType.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.domain;\n\nimport jakarta.persistence.AttributeConverter;\nimport jakarta.persistence.Converter;\nimport java.util.Arrays;\n\n/** Enum for PaymentMethodType. */\npublic enum PaymentMethodType {\n\n    VISA(1), MASTERCARD(2),;\n\n    private final Integer value;\n\n    private PaymentMethodType(Integer value) {\n        this.value = value;\n    }\n\n    public Integer getValue() {\n        return value;\n    }\n\n    public static PaymentMethodType fromValue(Integer value) {\n        return Arrays.stream(PaymentMethodType.values()).filter(e -> e.value.equals(value)).findFirst().orElse(null);\n    }\n\n    @Converter\n    static class PaymentMethodTypeConverter implements AttributeConverter<PaymentMethodType, Integer> {\n\n        @Override\n        public Integer convertToDatabaseColumn(PaymentMethodType attribute) {\n            if (attribute == null) {\n                return null;\n            }\n\n            return attribute.value;\n        }\n\n        @Override\n        public PaymentMethodType convertToEntityAttribute(Integer dbData) {\n            return PaymentMethodType.fromValue(dbData);\n        }\n\n    }\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/domain/PaymentMethodType.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","language":"zdl","visibleRange":null,"content":"config {\n    title \"Clinical Surveys Backend\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.surveys\"\n    layout LayeredProjectLayout\n}\n\napis {\n    openapi(provider) BackOfficeAPI {\n        url \"src/main/resources/public/apis/surveys-backoffice-openapi.yml\"\n    }\n    openapi(provider) PublicAPI {\n        url \"src/main/resources/public/apis/surveys-public-openapi.yml\"\n    }\n}\n\n@aggregate\n@auditing\nentity Survey {\n    @naturalId\n    name String required maxlength(254) /** Unique identifier for the survey */\n    @naturalId\n    hospitalId Long required\n    title String required maxlength(254) /** Public title for the survey */\n    lang String required maxlength(3) /** Default language for this survey */\n    @jsonb sections SurveySection[] {\n        name String required maxlength(254) /** Unique identifier for the section */\n        translations SectionTranslation[] {\n            lang String required\n            title String required\n            summary String\n        }\n        questionIds Long[] /** Sorted List of Questions for this section */\n    }\n}\n\n@aggregate\n@auditing\nentity Question {\n    name String required unique maxlength(254) /** Unique identifier for the question */\n    questionType QuestionType required\n    required boolean = true\n    rangeStart Integer\n    rangeEnd Integer\n    @jsonb translations QuestionTranslation[] {\n        lang String required\n        text String required\n    }\n    @jsonb options Option[] { // mas facil mantener el orden que con OneToMany\n        name String required maxlength(254)\n        translations OptionTranslation[] {\n            lang String required\n            text String required\n        }\n    }\n    includeOther Boolean = false\n}\n\nenum QuestionType {\n    YES_NO(1), MULTIPLE_SELECTION(2), SINGLE_SELECTION(3), TEXT(4), NUMBER(5), DECIMAL(6), RANGE(7),\n}\n\n@aggregate\n@auditing\nentity SurveyAnswers {\n    @naturalId\n    surveyId Long required\n    @naturalId\n    patientId Long required\n    @naturalId\n    date LocalDate required\n    lang String required\n    @jsonb answers Answer[] {\n        questionId Long required\n        value String\n        values String[]\n        otherValue String\n    }\n}\n\n\ninput SurveysByHospital {\n    hospitalId Long required\n    lang String maxlength(3)\n}\n\n/**\n* Service for managing surveys and questions in the backoffice.\n*/\n@apis(BackOfficeAPI)\n@rest(\"/backoffice/surveys\")\nservice SurveysBackofficeService for (Survey, Question) {\n    @get\n    listSurveys() Survey[]\n    @get(\"/{id}\")\n    getSurvey(id) Survey?\n    @post\n    createSurvey(Survey) Survey\n    @put(\"/{id}\")\n    updateSurvey(id, Survey) Survey?\n    @delete(\"/{id}\")\n    @entityForId(Survey)\n    deleteSurvey(id)\n\n    @get(\"/questions\")\n    listQuestions() Question[]\n    @get(\"/questions/{id}\")\n    getQuestion(id) Question?\n    @post(\"/questions\")\n    createQuestion(Question) Question\n    @put(\"/questions/{id}\")\n    updateQuestion(id, Question) Question?\n    @entityForId(Question)\n    @delete(\"/questions/{id}\")\n    deleteQuestion(id)\n}\n\n/**\n* This object represent a full survey with all the questions and options translated to the patient language.\n*/\noutput SurveyAndQuestions {\n    surveyId Long required /** Persistence identifier for the survey */\n    name String required maxlength(254) /** Unique identifier for the survey across all environments */\n    title String required maxlength(254) /** Public title for the survey */\n    hospitalId Long required\n    lang String required maxlength(3) /** Default language for this survey */\n    sections SurveySectionOutput[] {\n        name String required maxlength(254) /** Unique identifier for the section */\n        title String required maxlength(254) /** Public title for the section */\n        summary String\n        questions QuestionTranslationOutput[] {\n            questionId Long required\n            required boolean = true\n            rangeStart Integer\n            rangeEnd Integer\n            text String required maxlength(254) /** Translated text for the question */\n            questionType QuestionType required\n            options OptionTranslationOutput[] {\n                name String required maxlength(254) /** Internal name for the option */\n                text String required /** Translated text for the option */\n            }\n            includeOther boolean = false\n        }\n    }\n}\n\n@inline\ninput SurveyByNameAndPatient {\n    name String required maxlength(254)\n    patientId Long required\n    lang String maxlength(3)\n}\n\n/**\n* Public service to get Surveys and Questions for a patient and to answer the survey.\n*/\n@apis(PublicAPI)\n@rest(\"/public/surveys\")\nservice SurveysService for (SurveyAnswers) {\n\n    @get({ path: \"/{name}/patient/{patientId}/questions\", params: { lang: String } })\n    getSurveyAndQuestionsForPatient(SurveyByNameAndPatient) SurveyAndQuestions\n\n    @post(\"/{surveyId}/patient/{patientId}/answers/{date}\")\n    answerSurvey(@natural id, SurveyAnswers) SurveyAnswers\n\n    @patch({ path: \"/{surveyId}/patient/{patientId}/answers/{date}\", params: { surveryId: Long } })\n    updateSurveyAnswers(@natural id, SurveyAnswers) SurveyAnswers?\n\n    @get(\"/{surveyId}/patient/{patientId}/answers/{date}\")\n    getSurveyAnswers(@natural id) SurveyAnswers?\n\n}\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L55-L68","language":"zdl","visibleRange":"55,68","content":"@rest(\"/customers\")\nservice CustomerService for (Customer) {\n    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent\n    @get(\"/{id}\")\n    getCustomer(id) Customer?\n    @put(\"/{id}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\n    @delete(\"/{id}\")\n    deleteCustomer(id) withEvents CustomerDeletedEvent\n    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:55,68"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/terms-and-conditions.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/terms-and-conditions.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/terms-and-conditions.zdl","language":"zdl","visibleRange":null,"content":"config {\n    title \"Clinical Terms And Conditions Backend\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.termsandconditions\"\n    // you can choose: DefaultProjectLayout, CleanHexagonalProjectLayout, LayeredProjectLayout, SimpleDomainProjectLayout, HexagonalProjectLayout, CleanArchitectureProjectLayout\n    layout SimpleDomainProjectLayout\n\n}\n\n\n@aggregate\nentity AcceptedTermsAndConditions {\n    @naturalId\n    userId Long required\n    termsAndConditionsId Long required\n    acceptedDate Instant required\n}\n\n@aggregate\nentity TermsAndConditions {\n    content TextBlob required\n    lang String required maxlength(3) /** language code */\n    contentVersion String unique required /** Arbitrary version string */\n    startDate LocalDate unique required /** Date when the terms and conditions are valid (inclusive) */\n}\n\n@inline\ninput Lang {\n    lang String required maxlength(3) /** language code */\n}\n\ninput AcceptedTermsAndConditionsInput {\n    termsAndConditionsId Long required\n}\n\n@rest(\"/terms-and-conditions\")\nservice TermsAndConditionsService for (AcceptedTermsAndConditions, TermsAndConditions) {\n    @get\n    listTermsAndConditions() TermsAndConditions[]\n    @get(\"/{id}\")\n    getTermsAndConditions(id) TermsAndConditions?\n    @post\n    createTermsAndConditions(TermsAndConditions) TermsAndConditions\n    @put(\"/{id}\")\n    updateTermsAndConditions(id, TermsAndConditions) TermsAndConditions?\n\n    @get(\"/latest/{lang}\")\n    getCurrentTermsAndConditions(Lang) TermsAndConditions?\n    @post({ path: \"/accept\", status: 200 })\n    acceptTermsAndConditions(AcceptedTermsAndConditionsInput)\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/terms-and-conditions.zdl:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/outbound/jpa/CustomerRepository.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/outbound/jpa/CustomerRepository.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/outbound/jpa/CustomerRepository.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.outbound.jpa;\n\nimport io.zenwave360.example.core.domain.Customer;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n/** Spring Data JPA repository for the Customer entity. */\n@SuppressWarnings(\"unused\")\n@Repository\npublic interface CustomerRepository extends JpaRepository<Customer, Long> {\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/outbound/jpa/CustomerRepository.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","language":"yaml","visibleRange":null,"content":"openapi: 3.0.1\ninfo:\n  title: \"ZenWave Customer JPA Example\"\n  version: 0.0.1\n  description: \"ZenWave Customer JPA Example\"\n  contact:\n    email: email@domain.com\nservers:\n  - description: localhost\n    url: http://localhost:8080/api\n  - description: custom\n    url: \"{protocol}://{server}/{path}\"\n    variables:\n      protocol:\n        enum: ['http', 'https']\n        default: 'http'\n      server:\n        default: 'localhost:8080'\n      path:\n        default: 'api'\ntags:\n  - name: \"Default\"\n  - name: \"Customer\"\n\n\npaths:\n  /customers:\n    post:\n      operationId: createCustomer\n      description: \"createCustomer\"\n      tags: [Customer]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n  /customers/{id}:\n    get:\n      operationId: getCustomer\n      description: \"getCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n    put:\n      operationId: updateCustomer\n      description: \"updateCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n    delete:\n      operationId: deleteCustomer\n      description: \"deleteCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"204\":\n          description: \"OK\"\n  /customers/search:\n    post:\n      operationId: searchCustomers\n      description: \"searchCustomers\"\n      tags: [Customer]\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSearchCriteria\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPaginated\"\n\ncomponents:\n  schemas:\n    Customer:\n      type: \"object\"\n      x-business-entity: \"Customer\"\n      required:\n      - \"name\"\n      - \"email\"\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n        version:\n          type: \"integer\"\n        name:\n          type: \"string\"\n          maxLength: 254\n          description: \"Customer name\"\n        email:\n          type: \"string\"\n          maxLength: 254\n          pattern: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}\"\n          description: \"\"\n        addresses:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/Address\"\n            minLength: 1\n            maxLength: 5\n        paymentMethods:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/PaymentMethod\"\n    CustomerPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"Customer\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/Customer\"\n    CustomerSearchCriteria:\n      type: \"object\"\n      x-business-entity: \"CustomerSearchCriteria\"\n      properties:\n        name:\n          type: \"string\"\n        email:\n          type: \"string\"\n        city:\n          type: \"string\"\n        state:\n          type: \"string\"\n    PaymentMethodType:\n      type: \"string\"\n      x-business-entity: \"PaymentMethodType\"\n      enum:\n      - \"VISA\"\n      - \"MASTERCARD\"\n    Address:\n      type: \"object\"\n      x-business-entity: \"Address\"\n      required:\n      - \"street\"\n      - \"city\"\n      properties:\n        street:\n          type: \"string\"\n          maxLength: 254\n        city:\n          type: \"string\"\n          maxLength: 254\n    PaymentMethod:\n      type: \"object\"\n      x-business-entity: \"PaymentMethod\"\n      required:\n      - \"type\"\n      - \"cardNumber\"\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n        version:\n          type: \"integer\"\n        type:\n          $ref: \"#/components/schemas/PaymentMethodType\"\n        cardNumber:\n          type: \"string\"\n\n    Page:\n      type: object\n      required:\n        - \"content\"\n        - \"totalElements\"\n        - \"totalPages\"\n        - \"size\"\n        - \"number\"\n      properties:\n        number:\n          type: integer\n          minimum: 0\n        numberOfElements:\n          type: integer\n          minimum: 0\n        size:\n          type: integer\n          minimum: 0\n          maximum: 200\n          multipleOf: 25\n        totalElements:\n          type: integer\n        totalPages:\n          type: integer\n\n  parameters:\n    page:\n      name: page\n      in: query\n      description: The number of results page\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    limit:\n      name: limit\n      in: query\n      description: The number of results in a single page\n      schema:\n        type: integer\n        format: int32\n        default: 20\n    sort:\n      name: sort\n      in: query\n      description: The number of results page\n      schema:\n        type: array\n        items:\n          type: string\n\n  securitySchemes:\n    basicAuth:     # <-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n    bearerAuth:     # <-- arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT    # optional, arbitrary value for documentation purposes\n\nsecurity:\n  - basicAuth: []  # <-- use the same name here\n  - bearerAuth: []  # <-- use the same name here\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw#L1-L11","language":"zdl","visibleRange":"1,11","content":"config {\n    title \"Clinical Tool Backend\"\n    basePackage \"io.zenwave360.example.clinicaltool\"\n    persistence jpa\n    databaseType postgresql\n\n    layout.commonPackage \"{{basePackage}}.common\"\n    layout.infrastructureRepositoryCommonPackage \"{{commonPackage}}\"\n    layout.adaptersWebMappersCommonPackage \"{{commonPackage}}.mappers\"\n    layout.coreImplementationMappersCommonPackage \"{{commonPackage}}.mappers\"\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw:1,11"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L59-L60","language":"zdl","visibleRange":"59,60","content":"    @get(\"/{id}\")\n    getCustomer(id) Customer?","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:59,60"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl#L1-L6","language":"zdl","visibleRange":"1,6","content":"config {\n    title \"Clinical Tool Backend\"\n    layout.moduleBasePackage \"io.zenwave360.example.clinicaltool.modules.clinical\"\n    // you can choose different layouts, see docs at https://www.zenwave360.io/docs/\n    layout CleanHexagonalProjectLayout\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl:1,6"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L45-L63","language":"yaml","visibleRange":"45,63","content":"  /customers/{id}:\n    get:\n      operationId: getCustomer\n      description: \"getCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:45,63"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl#L197-L243","language":"zdl","visibleRange":"197,243","content":"@rest\nservice PatientsService for (Patient, ProvisionalPatient) {\n    /**\n    * Loads a saved temporal patient or new one if not found.\n    */\n    @get(\"/patients/{hisNumber}/{phoneNumber}\")\n    loadPatient(@natural id) Patient\n\n    /**\n    * Persist a temporal patient in the database.\n    */\n    @patch(\"/patients/{hisNumber}/{phoneNumber}\")\n    partialPatientUpdate(@natural id, Patient) Patient\n\n    /**\n    * Persite a patient in the database and deletes any temporal data.\n    */\n    @post(\"/patients\")\n    createPatient(Patient) Patient withEvents PatientCreated\n\n    /**\n    * Updates a patient in the database.\n    */\n    @put(\"/patients/{id}\")\n    updatePatient(id, Patient) Patient?\n\n    /**\n    * Load a patient by id\n    */\n    @get(\"/patients/{id}\")\n    getPatient(id) Patient?\n\n    /**\n    * Load a patient profile by id to mobile app.\n    */\n    @get(\"/patients/{id}/profile\")\n    @policies(isMobile)\n    @entityForId(Patient)\n    getPatientProfileById(id) PatientProfile\n\n    @post({ path: \"/patients/{id}/opt-out\", status: 200 })\n    @entityForId(Patient)\n    requestOptOut(id)\n\n    @listener({model: \"models/documents.zdl\", event: DocumentSignatureRequested})\n    associateDocumentWithPatient(DocumentSignatureRequestedInput)\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl:197,243"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/inmemory/CustomerRepositoryInMemory.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/inmemory/CustomerRepositoryInMemory.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/inmemory/CustomerRepositoryInMemory.java#L1-L33","language":"java","visibleRange":"1,33","content":"package io.zenwave360.example.infrastructure.jpa.inmemory;\n\nimport io.zenwave360.example.core.domain.Customer;\nimport io.zenwave360.example.core.outbound.jpa.CustomerRepository;\n\nimport static org.apache.commons.lang3.ObjectUtils.firstNonNull;\n\npublic class CustomerRepositoryInMemory extends InMemoryJpaRepository<Customer> implements CustomerRepository {\n\n    private long nextId = 0;\n    private final PrimaryKeyGenerator<Long> primaryKeyGenerator = () -> nextId++;\n\n    public Customer save(Customer entity) {\n        entity = super.save(entity);\n        entity.getPaymentMethods().forEach(paymentMethod -> {\n            paymentMethod.setId(firstNonNull(paymentMethod.getId(), primaryKeyGenerator.next()));\n        });\n        return entity;\n    }\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/inmemory/CustomerRepositoryInMemory.java:1,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl#L160-L161","language":"zdl","visibleRange":"160,161","content":"    @get({ path: \"/{name}/patient/{patientId}/questions\", params: { lang: String } })\n    getSurveyAndQuestionsForPatient(SurveyByNameAndPatient) SurveyAndQuestions","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl:160,161"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L55-L68","language":"zdl","visibleRange":"55,68","content":"@rest(\"/customers\")\nservice CustomerService for (Customer) {\n    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent\n    @get(\"/{id}\")\n    getCustomer(id) Customer?\n    @put(\"/{id}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent\n    @delete(\"/{id}\")\n    deleteCustomer(id) withEvents CustomerDeletedEvent\n    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:55,68"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw#L27-L39","language":"zdl","visibleRange":"27,39","content":"        ZDLToOpenAPIPlugin {\n            title \"Clinical Tool - WebApp API\"\n            zdlFiles \"models/clinical.zdl\"\n            targetFile \"src/main/resources/public/apis/webapp-openapi.yml\"\n            operationIdsToExclude \"getPatientProfileById\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Clinical Tool - Mobile API\"\n            zdlFiles \"models/clinical.zdl\"\n            targetFile \"src/main/resources/public/apis/mobile-openapi.yml\"\n            operationIdsToInclude \"getPatientProfileById,requestOptOut\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw:27,39"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml#L28-L55","language":"yaml","visibleRange":"28,55","content":"  /public/surveys/{name}/patient/{patientId}/questions:\n    get:\n      operationId: getSurveyAndQuestionsForPatient\n      description: \"getSurveyAndQuestionsForPatient\"\n      tags: [Surveys]\n      parameters:\n        - name: \"name\"\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: \"patientId\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: \"lang\"\n          in: query\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SurveyAndQuestions\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml:28,55"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw#L116-L124","language":"zdl","visibleRange":"116,124","content":"        OpenAPIControllersPlugin {\n            zdlFiles \"models/clinical.zdl\"\n            openapiFile \"src/main/resources/public/apis/webapp-openapi.yml\"\n\n            layout.customWebModule \"{{basePackage}}.modules.web.webapp\"\n            layout.adaptersWebPackage \"{{layout.customWebModule}}\"\n            layout.openApiApiPackage \"{{layout.customWebModule}}\"\n            layout.openApiModelPackage \"{{layout.customWebModule}}.dtos\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw:116,124"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L57-L58","language":"zdl","visibleRange":"57,58","content":"    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:57,58"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw#L126-L134","language":"zdl","visibleRange":"126,134","content":"        OpenAPIControllersPlugin {\n            zdlFiles \"models/clinical.zdl\"\n            openapiFile \"src/main/resources/public/apis/mobile-openapi.yml\"\n\n            layout.customWebModule \"{{basePackage}}.modules.web.mobile\"\n            layout.adaptersWebPackage \"{{layout.customWebModule}}\"\n            layout.openApiApiPackage \"{{layout.customWebModule}}\"\n            layout.openApiModelPackage \"{{layout.customWebModule}}.dtos\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw:126,134"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L27-L44","language":"yaml","visibleRange":"27,44","content":"  /customers:\n    post:\n      operationId: createCustomer\n      description: \"createCustomer\"\n      tags: [Customer]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:27,44"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/inbound/CustomerService.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/inbound/CustomerService.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/inbound/CustomerService.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.inbound;\n\nimport io.zenwave360.example.core.domain.Customer;\nimport io.zenwave360.example.core.inbound.dtos.CustomerSearchCriteria;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\n\nimport java.util.Optional;\n\n/** Inbound Service Port for managing [Customer]. */\npublic interface CustomerService {\n\n    /** With Events: [CustomerEvent]. */\n    public Customer createCustomer(Customer input);\n\n    /** */\n    public Optional<Customer> getCustomer(Long id);\n\n    /** With Events: [CustomerEvent]. */\n    public Optional<Customer> updateCustomer(Long id, Customer input);\n\n    /** With Events: [CustomerEvent]. */\n    public void deleteCustomer(Long id);\n\n    /** */\n    public Page<Customer> searchCustomers(CustomerSearchCriteria input, Pageable pageable);\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/inbound/CustomerService.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw#L41-L53","language":"zdl","visibleRange":"41,53","content":"        ZDLToOpenAPIPlugin {\n            title \"Surveys - Backoffice API\"\n            zdlFile \"models/surveys.zdl\"\n            targetFile \"src/main/resources/public/apis/surveys-backoffice-openapi.yml\"\n            operationIdsToExclude \"getSurveyAndQuestionsForPatient,answerSurvey,updateSurveyAnswers,getSurveyAnswers\"\n        }\n\n        ZDLToOpenAPIPlugin {\n            title \"Surveys - Public API\"\n            zdlFile \"models/surveys.zdl\"\n            targetFile \"src/main/resources/public/apis/surveys-public-openapi.yml\"\n            operationIdsToInclude \"getSurveyAndQuestionsForPatient,answerSurvey,updateSurveyAnswers,getSurveyAnswers\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/zenwave-scripts.zw:41,53"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/users.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/users.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/users.zdl#L54-L55","language":"zdl","visibleRange":"54,55","content":"    @post(path: \"/search\", status: 200) @paginated\n    searchUsers(SearchCriteria) User[]","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/users.zdl:54,55"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl#L136-L144","language":"zdl","visibleRange":"136,144","content":"}\n\n@inline\ninput HospitalId {\n    hospitalId Long required\n}\n\n@inline\ninput CriterioPatient {","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl:136,144"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java#L63-L73","language":"java","visibleRange":"63,73","content":"        var documentInfo = documentService.downloadDocument(id);\n        byte[] bytes = null; // TODO get bytes from documentData.data\n        ByteArrayResource resource = new ByteArrayResource(bytes);\n        return ResponseEntity.status(200)\n                .header(\"Content-Disposition\", \"inline\") // or attachment; filename=example.pdf\n                .contentType(MediaType.APPLICATION_OCTET_STREAM) // TODO: set content type\n                .body(resource);\n    }\n\n    @Override\n    public ResponseEntity<Void> deleteDocumentInfo(Long id) {","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/documents/DocumentApiController.java:63,73"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.implementation;\n\nimport io.zenwave360.example.core.domain.Customer;\nimport io.zenwave360.example.core.implementation.mappers.CustomerServiceMapper;\nimport io.zenwave360.example.core.implementation.mappers.EventsMapper;\nimport io.zenwave360.example.core.inbound.CustomerService;\nimport io.zenwave360.example.core.inbound.dtos.CustomerSearchCriteria;\nimport io.zenwave360.example.core.outbound.events.CustomerEventsProducer;\nimport io.zenwave360.example.core.outbound.jpa.CustomerRepository;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationEventPublisher;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.Optional;\n\n/** Service Implementation for managing [Customer]. */\n@Service\n@Transactional(readOnly = true)\n@lombok.AllArgsConstructor\npublic class CustomerServiceImpl implements CustomerService {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    private final CustomerServiceMapper customerServiceMapper = CustomerServiceMapper.INSTANCE;\n\n    private final CustomerRepository customerRepository;\n\n    private final EventsMapper eventsMapper = EventsMapper.INSTANCE;\n\n    private final CustomerEventsProducer eventsProducer;\n\n    private final ApplicationEventPublisher applicationEventPublisher;\n\n    @Transactional\n    public Customer createCustomer(Customer input) {\n        log.debug(\"[CRUD] Request to save Customer: {}\", input);\n        var customer = customerServiceMapper.update(new Customer(), input);\n        customer = customerRepository.save(customer);\n        // TODO: may need to reload the entity to fetch relationships 'mapped by id'\n        // emit events\n        var customerEvent = eventsMapper.asCustomerEvent(customer);\n        eventsProducer.onCustomerEvent(customerEvent);\n        return customer;\n    }\n\n    public Optional<Customer> getCustomer(Long id) {\n        log.debug(\"[CRUD] Request to get Customer : {}\", id);\n        var customer = customerRepository.findById(id);\n        return customer;\n    }\n\n    @Transactional\n    public Optional<Customer> updateCustomer(Long id, Customer input) {\n        log.debug(\"Request updateCustomer: {} {}\", id, input);\n\n        var customer = customerRepository.findById(id).map(existingCustomer -> {\n            return customerServiceMapper.update(existingCustomer, input);\n        }).map(customerRepository::save);\n        if (customer.isPresent()) {\n            // emit events\n            var customerEvent = eventsMapper.asCustomerEvent(customer.get());\n            eventsProducer.onCustomerEvent(customerEvent);\n        }\n        return customer;\n    }\n\n    @Transactional\n    public void deleteCustomer(Long id) {\n        log.debug(\"[CRUD] Request to delete Customer : {}\", id);\n        customerRepository.deleteById(id);\n        // emit events\n        var customerEvent = eventsMapper.asCustomerEvent(id);\n        eventsProducer.onCustomerDeletedEvent(customerEvent);\n    }\n\n    public Page<Customer> searchCustomers(CustomerSearchCriteria input, Pageable pageable) {\n        log.debug(\"Request searchCustomers: {} {}\", input, pageable);\n\n        var customers = customerRepository.findAll(pageable);\n        return customers;\n    }\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/users-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/users-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/users-openapi.yml#L142-L164","language":"yaml","visibleRange":"142,164","content":"  /users/search:\n    post:\n      operationId: \"searchUsers\"\n      description: \"searchUsers\"\n      tags:\n      - \"User\"\n      parameters:\n      - $ref: \"#/components/parameters/page\"\n      - $ref: \"#/components/parameters/limit\"\n      - $ref: \"#/components/parameters/sort\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchCriteria\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPaginated\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/users-openapi.yml:142,164"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/infrastructure/events/DefaultEventPublisher.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/infrastructure/events/DefaultEventPublisher.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/infrastructure/events/DefaultEventPublisher.java#L11-L23","language":"zdl","visibleRange":"11,23","content":"public class DefaultEventPublisher implements EventPublisher {\n\n    private final ApplicationEventPublisher applicationEventPublisher;\n\n    public void onDoctorCreated(DoctorCreated event) {\n        applicationEventPublisher.publishEvent(event);\n    }\n\n    public void onPatientCreated(PatientCreated event) {\n        applicationEventPublisher.publishEvent(event);\n    }\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/infrastructure/events/DefaultEventPublisher.java:11,23"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L61-L62","language":"zdl","visibleRange":"61,62","content":"    @put(\"/{id}\")\n    updateCustomer(id, Customer) Customer? withEvents CustomerEvent","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:61,62"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.core.implementation;\n\nimport io.zenwave360.example.config.ServicesInMemoryConfig;\nimport io.zenwave360.example.core.domain.Address;\nimport io.zenwave360.example.core.domain.Customer;\nimport io.zenwave360.example.core.inbound.dtos.CustomerSearchCriteria;\nimport io.zenwave360.example.infrastructure.jpa.inmemory.CustomerRepositoryInMemory;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.data.domain.PageRequest;\n\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n/** Acceptance Test for CustomerService. */\nclass CustomerServiceTest {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    ServicesInMemoryConfig context = new ServicesInMemoryConfig();\n\n    CustomerServiceImpl customerService = context.customerService();\n\n    CustomerRepositoryInMemory customerRepository = context.customerRepository();\n\n    @BeforeEach\n    void setUp() {\n        context.reloadTestData();\n    }\n\n    @Test\n    void createCustomerTest() {\n        var input = new Customer();\n         input.setName(\"name\");\n         input.setEmail(\"me@email.com\");\n         input.setAddresses(List.of(new Address() //\n                 .setStreet(\"street\")\n                 .setCity(\"city\")\n         ));\n        var customer = customerService.createCustomer(input);\n        assertNotNull(customer.getId());\n        assertTrue(customerRepository.containsEntity(customer));\n    }\n\n    @Test\n    void getCustomerTest() {\n        var id = 1L; // TODO fill id\n        var customer = customerService.getCustomer(id);\n        assertTrue(customer.isPresent());\n    }\n\n    @Test\n    void updateCustomerTest() {\n        var id = 1L; // TODO fill id\n        var input = new Customer();\n        input.setName(\"name\");\n        input.setEmail(\"me@email.com\");\n        input.setAddresses(List.of(new Address() //\n                .setStreet(\"street\")\n                .setCity(\"city\")\n        ));\n        assertTrue(customerRepository.containsKey(id));\n        var customer = customerService.updateCustomer(id, input);\n        assertTrue(customer.isPresent());\n        assertTrue(customerRepository.containsEntity(customer.get()));\n    }\n\n    @Test\n    void deleteCustomerTest() {\n        var id = 1L; // TODO fill id\n        assertTrue(customerRepository.containsKey(id));\n        customerService.deleteCustomer(id);\n        assertFalse(customerRepository.containsKey(id));\n    }\n\n    @Test\n    void searchCustomersTest() {\n        var searchCriteria = new CustomerSearchCriteria();\n        var results = customerService.searchCustomers(searchCriteria, PageRequest.of(0, 10));\n        Assertions.assertNotNull(results);\n        Assertions.assertFalse(results.isEmpty());\n    }\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L64-L87","language":"yaml","visibleRange":"64,87","content":"    put:\n      operationId: updateCustomer\n      description: \"updateCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:64,87"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl#L40-L42","language":"zdl","visibleRange":"40,42","content":"    @post({path: \"/upload\", status: 201})\n    @fileupload(\"file\")\n    uploadDocument(DocumentInfo) DocumentInfo","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl:40,42"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/CustomerRepositoryIntegrationTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/CustomerRepositoryIntegrationTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/CustomerRepositoryIntegrationTest.java#L40-L70","language":"java","visibleRange":"40,70","content":"    @Test\n    void saveTest() {\n        Customer customer = new Customer();\n        customer.setName(\"Jane Smith\");\n        customer.setEmail(\"jane.smith@example.com\");\n        customer.setAddresses(List.of(\n                        new Address()\n                                .setStreet(\"456 Elm St\")\n                                .setCity(\"Othertown\")\n                )\n        );\n\n        // OneToMany paymentMethods owner: true\n        var paymentMethods = new PaymentMethod();\n        paymentMethods.setType(PaymentMethodType.VISA);\n        paymentMethods.setCardNumber(\"6543210987654321\");\n        customer.addPaymentMethods(paymentMethods);\n\n        // Persist aggregate root\n        var created = customerRepository.save(customer);\n\n        // reloading to get relationships persisted by id\n        entityManager.flush();\n        entityManager.refresh(created);\n        Assertions.assertNotNull(created.getId());\n        Assertions.assertNotNull(created.getVersion());\n        Assertions.assertNotNull(created.getCreatedBy());\n        Assertions.assertNotNull(created.getCreatedDate());\n\n        Assertions.assertTrue(customer.getPaymentMethods().stream().allMatch(item -> item.getId() != null));\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/CustomerRepositoryIntegrationTest.java:40,70"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L63-L64","language":"zdl","visibleRange":"63,64","content":"    @delete(\"/{id}\")\n    deleteCustomer(id) withEvents CustomerDeletedEvent","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:63,64"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml#L88-L104","language":"yaml","visibleRange":"88,104","content":"  /documents/upload:\n    post:\n      operationId: uploadDocument\n      description: \"uploadDocument\"\n      tags: [Document]\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    file:\n                      type: string\n                      format: binary\n                - $ref: \"#/components/schemas/DocumentInfo\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml:88,104"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L88-L101","language":"yaml","visibleRange":"88,101","content":"    delete:\n      operationId: deleteCustomer\n      description: \"deleteCustomer\"\n      tags: [Customer]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"204\":\n          description: \"OK\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:88,101"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl#L36-L38","language":"zdl","visibleRange":"36,38","content":"    @get({path: \"/{id}\", params: {preview: boolean} })\n    @filedownload(\"documentData.data\")\n    downloadDocument(id) DocumentInfo","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl:36,38"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml#L45-L73","language":"yaml","visibleRange":"45,73","content":"  /documents/{id}:\n    get:\n      operationId: downloadDocument\n      description: \"downloadDocument\"\n      tags: [Document]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: \"preview\"\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"OK\"\n          headers:\n            Content-Disposition:\n              description: \"Controls file download behavior. Values: 'inline' (display in browser) or 'attachment; filename=example.pdf' (download file)\"\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                type: string\n                format: binary","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml:45,73"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl#L166-L167","language":"zdl","visibleRange":"166,167","content":"    @patch({ path: \"/{surveyId}/patient/{patientId}/answers/{date}\", params: { surveryId: Long } })\n    updateSurveyAnswers(@natural id, SurveyAnswers) SurveyAnswers?","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/surveys.zdl:166,167"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/config/DockerComposeInitializer.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/config/DockerComposeInitializer.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/config/DockerComposeInitializer.java#L43-L49","language":"java","visibleRange":"43,49","content":"    private static final String DOCKER_COMPOSE_FILE = \"./docker-compose.yml\";\n\n    private static final List<Service> SERVICES = List.of(\n            new Service(\"postgresql\", 5432, \"DATASOURCE_URL\", \"jdbc:postgresql://%s:%s/app\"),\n            new Service(\"kafka\", 9092, \"KAFKA_BOOTSTRAP_SERVERS\", \"%s:%s\"),\n            new Service(\"schema-registry\", 8081, \"SCHEMA_REGISTRY_URL\", \"http://%s:%s\")\n    );","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/config/DockerComposeInitializer.java:43,49"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/BaseRepositoryIntegrationTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/BaseRepositoryIntegrationTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/BaseRepositoryIntegrationTest.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.infrastructure.jpa;\n\nimport io.zenwave360.example.config.DockerComposeInitializer;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.ActiveProfiles;\n\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.MOCK)\n@ActiveProfiles(\"test\")\n@DockerComposeInitializer.EnableDockerCompose\n@org.springframework.transaction.annotation.Transactional\npublic abstract class BaseRepositoryIntegrationTest {\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/infrastructure/jpa/BaseRepositoryIntegrationTest.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml#L93-L133","language":"yaml","visibleRange":"93,133","content":"    patch:\n      operationId: updateSurveyAnswers\n      description: \"updateSurveyAnswers\"\n      tags: [Surveys]\n      parameters:\n        - name: \"surveyId\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: \"patientId\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: \"date\"\n          in: path\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: \"surveryId\"\n          in: query\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SurveyAnswersPatch\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SurveyAnswers\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/surveys-public-openapi.yml:93,133"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl#L211-L215","language":"zdl","visibleRange":"211,215","content":"    /**\n    * Persite a patient in the database and deletes any temporal data.\n    */\n    @post(\"/patients\")\n    createPatient(Patient) Patient withEvents PatientCreated","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/clinical.zdl:211,215"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java#L19-L33","language":"java","visibleRange":"19,33","content":"/** Acceptance Test for CustomerService. */\nclass CustomerServiceTest {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    ServicesInMemoryConfig context = new ServicesInMemoryConfig();\n\n    CustomerServiceImpl customerService = context.customerService();\n\n    CustomerRepositoryInMemory customerRepository = context.customerRepository();\n\n    @BeforeEach\n    void setUp() {\n        context.reloadTestData();\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/core/implementation/CustomerServiceTest.java:19,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/core/implementation/PatientsServiceImpl.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/core/implementation/PatientsServiceImpl.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/core/implementation/PatientsServiceImpl.java#L53-L62","language":"java","visibleRange":"53,62","content":"        return patient;\n    }\n\n    @Transactional\n    public Patient createPatient(Patient input) {\n        log.debug(\"[CRUD] Request to save Patient: {}\", input);\n        var patient = patientsServiceMapper.update(new Patient(), input);\n        patient = patientRepository.save(patient);\n        // emit events\n        var patientCreated = eventsMapper.asPatientCreated(input);","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/clinical/core/implementation/PatientsServiceImpl.java:53,62"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/pom.xml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/pom.xml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/pom.xml#L394-L396","language":"xml","visibleRange":"394,396","content":"                            <schemaMappings>\n                                SurveyAnswersPatch=java.util.Map\n                            </schemaMappings>","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/pom.xml:394,396"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/resources/data/jpa/customer/1.json","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/resources/data/jpa/customer/1.json","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/resources/data/jpa/customer/1.json","language":"json","visibleRange":null,"content":"{\n  \"id\": 1,\n  \"version\": 1,\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"John Doe\",\n  \"addresses\": [\n    {\n      \"city\": \"Anytown\",\n      \"street\": \"123 Main St\"\n    }\n  ],\n  \"paymentMethods\": [\n    {\n      \"type\": 1,\n      \"cardNumber\": \"1234567890123456\",\n      \"createdBy\": \"system\",\n      \"createdDate\": \"2023-01-01T00:00:00\",\n      \"lastModifiedBy\": \"system\",\n      \"lastModifiedDate\": \"2023-01-01T00:00:00\"\n    }\n  ],\n  \"createdBy\": \"system\",\n  \"createdDate\": \"2023-01-01T00:00:00\",\n  \"lastModifiedBy\": \"system\",\n  \"lastModifiedDate\": \"2023-01-01T00:00:00\"\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/resources/data/jpa/customer/1.json:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/surveys/web/SurveysApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/surveys/web/SurveysApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/surveys/web/SurveysApiController.java#L71-L73","language":"java","visibleRange":"71,73","content":"    @Override\n    public ResponseEntity<SurveyAnswersDTO> updateSurveyAnswers(\n            Long surveyId, Long patientId, LocalDate date, Long surveryId, Map input) {","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/java/io/zenwave360/example/clinicaltool/modules/surveys/web/SurveysApiController.java:71,73"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/mappers/CustomerDTOsMapper.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/mappers/CustomerDTOsMapper.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/mappers/CustomerDTOsMapper.java#L14-L36","language":"java","visibleRange":"14,36","content":"@Mapper(uses = BaseMapper.class)\npublic interface CustomerDTOsMapper {\n\n    CustomerDTOsMapper INSTANCE = Mappers.getMapper(CustomerDTOsMapper.class);\n\n    // request mappings\n    CustomerSearchCriteria asCustomerSearchCriteria(CustomerSearchCriteriaDTO dto);\n\n    Customer asCustomer(CustomerDTO dto);\n\n    // response mappings\n\n    List<CustomerDTO> asCustomerDTOList(List<Customer> entityList);\n\n    CustomerPaginatedDTO asCustomerPaginatedDTO(Page<Customer> page);\n\n    default Page<CustomerDTO> asCustomerDTOPage(Page<Customer> page) {\n        return page.map(this::asCustomerDTO);\n    }\n\n    CustomerDTO asCustomerDTO(Customer entity);\n\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/mappers/CustomerDTOsMapper.java:14,36"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L65-L67","language":"zdl","visibleRange":"65,67","content":"    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:65,67"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java#L28-L37","language":"java","visibleRange":"28,37","content":"    @Test\n    void createCustomerTest() {\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.createCustomer(reqBody);\n        Assertions.assertEquals(201, response.getStatusCode().value());\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java:28,37"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L112-L123","language":"yaml","visibleRange":"112,123","content":"        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSearchCriteria\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPaginated\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:112,123"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java#L65-L73","language":"java","visibleRange":"65,73","content":"    @Test\n    void searchCustomersTest() {\n        Optional<Integer> page = Optional.of(0);\n        Optional<Integer> limit = Optional.of(10);\n        Optional<List<String>> sort = Optional.of(List.of(\"name\"));\n        CustomerSearchCriteriaDTO reqBody = new CustomerSearchCriteriaDTO();\n        var response = controller.searchCustomers(reqBody, page, limit, sort);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java:65,73"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl#L40-L42","language":"zdl","visibleRange":"40,42","content":"    @post({path: \"/upload\", status: 201})\n    @fileupload(\"file\")\n    uploadDocument(DocumentInfo) DocumentInfo","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl:40,42"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java#L14-L37","language":"java","visibleRange":"14,37","content":"/** Test controller for CustomerApiController. */\nclass CustomerApiControllerTest {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    ServicesInMemoryConfig context = new ServicesInMemoryConfig();\n\n    CustomerApiController controller = new CustomerApiController(context.customerService());\n\n    @BeforeEach\n    void setUp() {\n        context.reloadTestData();\n    }\n\n    @Test\n    void createCustomerTest() {\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.createCustomer(reqBody);\n        Assertions.assertEquals(201, response.getStatusCode().value());\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java:14,37"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java#L14-L27","language":"java","visibleRange":"14,27","content":"@ActiveProfiles(\"test\")\n@DockerComposeInitializer.EnableDockerCompose\n@org.springframework.transaction.annotation.Transactional\npublic abstract class BaseWebTestClientTest {\n\n    @Autowired\n    protected WebApplicationContext context;\n    protected WebTestClient webTestClient;\n\n    @BeforeEach\n    void setup() {\n        this.webTestClient = MockMvcWebTestClient.bindToApplicationContext(this.context).build();\n    }\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/BaseWebTestClientTest.java:14,27"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml#L88-L112","language":"yaml","visibleRange":"88,112","content":"  /documents/upload:\n    post:\n      operationId: uploadDocument\n      description: \"uploadDocument\"\n      tags: [Document]\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    file:\n                      type: string\n                      format: binary\n                - $ref: \"#/components/schemas/DocumentInfo\"\n                \n      responses:\n        \"201\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentInfo\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml:88,112"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/models/documents.zdl#L36-L38","language":"zdl","visibleRange":"36,38","content":"    @get({path: \"/{id}\", params: {preview: boolean} })\n    @filedownload(\"documentData.data\")\n    downloadDocument(id) DocumentInfo","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/models/documents.zdl:36,38"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L70-L82","language":"zdl","visibleRange":"70,82","content":"@copy(Customer)\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerEvent {\n    id Long required\n    version Integer\n    // all fields from Customer are copied here, but not relationships\n    paymentMethods PaymentMethod[]\n}\n\n@asyncapi({ channel: \"CustomersChannel\", topic: \"customers\" })\nevent CustomerDeletedEvent {\n    id Long required\n}","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:70,82"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml#L45-L73","language":"yaml","visibleRange":"45,73","content":"  /documents/{id}:\n    get:\n      operationId: downloadDocument\n      description: \"downloadDocument\"\n      tags: [Document]\n      parameters:\n        - name: \"id\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: \"preview\"\n          in: query\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"OK\"\n          headers:\n            Content-Disposition:\n              description: \"Controls file download behavior. Values: 'inline' (display in browser) or 'attachment; filename=example.pdf' (download file)\"\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                type: string\n                format: binary","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/modulith-clinical-tool-jpa/src/main/resources/public/apis/documents-openapi.yml:45,73"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L27-L29","language":"zdl","visibleRange":"27,29","content":"        OpenAPIControllersPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:27,29"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml#L376-L437","language":"xml","visibleRange":"376,437","content":"\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>io.zenwave360.sdk</groupId>\n\t\t\t\t\t\t<artifactId>zenwave-sdk-maven-plugin</artifactId>\n\t\t\t\t\t\t<version>${zenwave.version}</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<inputSpec>${project.basedir}/src/main/resources/public/apis/asyncapi.yml</inputSpec>\n\t\t\t\t\t\t\t<skip>false</skip>\n\t\t\t\t\t\t\t<addCompileSourceRoot>true</addCompileSourceRoot>\n\t\t\t\t\t\t\t<addTestCompileSourceRoot>true</addTestCompileSourceRoot>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<!-- DTOs -->\n<!--\t\t\t\t\t\t\t<execution>-->\n<!--\t\t\t\t\t\t\t\t<id>generate-asyncapi-dtos</id>-->\n<!--\t\t\t\t\t\t\t\t<phase>generate-sources</phase>-->\n<!--\t\t\t\t\t\t\t\t<goals>-->\n<!--\t\t\t\t\t\t\t\t\t<goal>generate</goal>-->\n<!--\t\t\t\t\t\t\t\t</goals>-->\n<!--\t\t\t\t\t\t\t\t<configuration>-->\n<!--\t\t\t\t\t\t\t\t\t<generatorName>jsonschema2pojo</generatorName>-->\n<!--\t\t\t\t\t\t\t\t\t<configOptions>-->\n<!--\t\t\t\t\t\t\t\t\t\t<modelPackage>${asyncApiModelPackage}</modelPackage>-->\n<!--\t\t\t\t\t\t\t\t\t\t<jsonschema2pojo.isUseJakartaValidation>true</jsonschema2pojo.isUseJakartaValidation>-->\n<!--\t\t\t\t\t\t\t\t\t\t<jsonschema2pojo.useLongIntegers>true</jsonschema2pojo.useLongIntegers>-->\n<!--\t\t\t\t\t\t\t\t\t\t<jsonschema2pojo.includeAdditionalProperties>true</jsonschema2pojo.includeAdditionalProperties>-->\n<!--\t\t\t\t\t\t\t\t\t</configOptions>-->\n<!--\t\t\t\t\t\t\t\t</configuration>-->\n<!--\t\t\t\t\t\t\t</execution>-->\n\t\t\t\t\t\t\t<!-- Generate PROVIDER -->\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>generate-asyncapi</id>\n\t\t\t\t\t\t\t\t<phase>generate-sources</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>generate</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t\t<generatorName>spring-cloud-streams3</generatorName>\n\t\t\t\t\t\t\t\t\t<configOptions>\n\t\t\t\t\t\t\t\t\t\t<role>provider</role>\n\t\t\t\t\t\t\t\t\t\t<style>imperative</style>\n\t\t\t\t\t\t\t\t\t\t<transactionalOutbox>modulith</transactionalOutbox>\n\t\t\t\t\t\t\t\t\t\t<includeApplicationEventListener>true</includeApplicationEventListener>\n\t\t\t\t\t\t\t\t\t\t<modelPackage>${asyncApiModelPackage}</modelPackage>\n\t\t\t\t\t\t\t\t\t\t<producerApiPackage>${asyncApiProducerApiPackage}</producerApiPackage>\n\t\t\t\t\t\t\t\t\t\t<consumerApiPackage>${asyncApiConsumerApiPackage}</consumerApiPackage>\n\t\t\t\t\t\t\t\t\t</configOptions>\n\t\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t\t<dependencies>\n\t\t\t\t\t\t\t<dependency>\n\t\t\t\t\t\t\t\t<groupId>io.zenwave360.sdk.plugins</groupId>\n\t\t\t\t\t\t\t\t<artifactId>asyncapi-spring-cloud-streams3</artifactId>\n\t\t\t\t\t\t\t\t<version>${zenwave.version}</version>\n\t\t\t\t\t\t\t</dependency>\n\t\t\t\t\t\t\t<dependency>\n\t\t\t\t\t\t\t\t<groupId>io.zenwave360.sdk.plugins</groupId>\n\t\t\t\t\t\t\t\t<artifactId>asyncapi-jsonschema2pojo</artifactId>\n\t\t\t\t\t\t\t\t<version>${zenwave.version}</version>\n\t\t\t\t\t\t\t</dependency>\n\t\t\t\t\t\t</dependencies>\n\t\t\t\t\t</plugin>","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml:376,437"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/pom.xml#L439-L460","language":"xml","visibleRange":"439,460","content":"\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.avro</groupId>\n\t\t\t\t\t\t<artifactId>avro-maven-plugin</artifactId>\n\t\t\t\t\t\t<version>1.11.1</version>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>schema</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<phase>generate-sources</phase>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sourceDirectory>${project.basedir}/src/main/resources/public/apis/avro</sourceDirectory>\n\t\t\t\t\t\t\t<outputDirectory>${project.basedir}/target/generated-sources/avro</outputDirectory>\n\t\t\t\t\t\t\t<imports>\n\t\t\t\t\t\t\t\t<import>${project.basedir}/src/main/resources/public/apis/avro/PaymentMethodType.avsc</import>\n\t\t\t\t\t\t\t\t<import>${project.basedir}/src/main/resources/public/apis/avro/PaymentMethod.avsc</import>\n\t\t\t\t\t\t\t\t<import>${project.basedir}/src/main/resources/public/apis/avro/Address.avsc</import>\n\t\t\t\t\t\t\t</imports>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/pom.xml:439,460"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L57-L58","language":"zdl","visibleRange":"57,58","content":"    @post\n    createCustomer(Customer) Customer withEvents CustomerEvent","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:57,58"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java#L35-L41","language":"java","visibleRange":"35,41","content":"/**\n * REST controller for CustomerApi.\n */\n@RestController\n@RequestMapping(\"/api\")\npublic class CustomerApiController implements CustomerApi {\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java:35,41"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L27-L44","language":"yaml","visibleRange":"27,44","content":"  /customers:\n    post:\n      operationId: createCustomer\n      description: \"createCustomer\"\n      tags: [Customer]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:27,44"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L31-L33","language":"zdl","visibleRange":"31,33","content":"        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:31,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java#L69-L77","language":"java","visibleRange":"69,77","content":"\n    @Override\n    public ResponseEntity<CustomerDTO> createCustomer(CustomerDTO reqBody) {\n        log.debug(\"REST request to createCustomer: {}\", reqBody);\n        var input = mapper.asCustomer(reqBody);\n        var customer = customerService.createCustomer(input);\n        CustomerDTO responseDTO = mapper.asCustomerDTO(customer);\n        return ResponseEntity.status(201).body(responseDTO);\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java:69,77"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.adapters.web;\n\nimport io.zenwave360.example.adapters.web.model.*;\nimport io.zenwave360.example.config.ServicesInMemoryConfig;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.List;\nimport java.util.Optional;\n\n/** Test controller for CustomerApiController. */\nclass CustomerApiControllerTest {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    ServicesInMemoryConfig context = new ServicesInMemoryConfig();\n\n    CustomerApiController controller = new CustomerApiController(context.customerService());\n\n    @BeforeEach\n    void setUp() {\n        context.reloadTestData();\n    }\n\n    @Test\n    void createCustomerTest() {\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.createCustomer(reqBody);\n        Assertions.assertEquals(201, response.getStatusCode().value());\n    }\n\n    @Test\n    void getCustomerTest() {\n        Long id = 1L;\n        var response = controller.getCustomer(id);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }\n\n    @Test\n    void updateCustomerTest() {\n        Long id = 1L;\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.updateCustomer(id, reqBody);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }\n\n    @Test\n    void deleteCustomerTest() {\n        Long id = 1L;\n        var response = controller.deleteCustomer(id);\n        Assertions.assertEquals(204, response.getStatusCode().value());\n    }\n\n    @Test\n    void searchCustomersTest() {\n        Optional<Integer> page = Optional.of(0);\n        Optional<Integer> limit = Optional.of(10);\n        Optional<List<String>> sort = Optional.of(List.of(\"name\"));\n        CustomerSearchCriteriaDTO reqBody = new CustomerSearchCriteriaDTO();\n        var response = controller.searchCustomers(reqBody, page, limit, sort);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L65-L67","language":"zdl","visibleRange":"65,67","content":"    @post(\"/search\")\n    @paginated\n    searchCustomers(CustomerSearchCriteria) Customer[]","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:65,67"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml#L102-L123","language":"yaml","visibleRange":"102,123","content":"  /customers/search:\n    post:\n      operationId: searchCustomers\n      description: \"searchCustomers\"\n      tags: [Customer]\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerSearchCriteria\"\n      responses:\n        \"200\":\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPaginated\"","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/openapi.yml:102,123"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L35-L44","language":"zdl","visibleRange":"35,44","content":"        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerIntegrationTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:35,44"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java#L105-L119","language":"java","visibleRange":"105,119","content":"    public ResponseEntity<Void> deleteCustomer(Long id) {\n        log.debug(\"REST request to deleteCustomer: {}\", id);\n        customerService.deleteCustomer(id);\n        return ResponseEntity.status(204).build();\n    }\n\n    @Override\n    public ResponseEntity<CustomerPaginatedDTO> searchCustomers(Integer page, Integer limit, List<String> sort, CustomerSearchCriteriaDTO reqBody) {\n        log.debug(\"REST request to searchCustomers: {}, {}, {}, {}\", page, limit, sort, reqBody);\n        var input = mapper.asCustomerSearchCriteria(reqBody);\n        var customerPage = customerService.searchCustomers(input, pageOf(page, limit, sort));\n        var responseDTO = mapper.asCustomerPaginatedDTO(customerPage);\n        return ResponseEntity.status(200).body(responseDTO);\n    }\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/adapters/web/CustomerApiController.java:105,119"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L31-L33","language":"zdl","visibleRange":"31,33","content":"        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:31,33"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.adapters.web;\n\nimport io.zenwave360.example.adapters.web.model.*;\nimport io.zenwave360.example.config.ServicesInMemoryConfig;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.List;\nimport java.util.Optional;\n\n/** Test controller for CustomerApiController. */\nclass CustomerApiControllerTest {\n\n    private final Logger log = LoggerFactory.getLogger(getClass());\n\n    ServicesInMemoryConfig context = new ServicesInMemoryConfig();\n\n    CustomerApiController controller = new CustomerApiController(context.customerService());\n\n    @BeforeEach\n    void setUp() {\n        context.reloadTestData();\n    }\n\n    @Test\n    void createCustomerTest() {\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.createCustomer(reqBody);\n        Assertions.assertEquals(201, response.getStatusCode().value());\n    }\n\n    @Test\n    void getCustomerTest() {\n        Long id = 1L;\n        var response = controller.getCustomer(id);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }\n\n    @Test\n    void updateCustomerTest() {\n        Long id = 1L;\n        CustomerDTO reqBody = new CustomerDTO();\n        reqBody.setName(\"John Doe\");\n        reqBody.setEmail(\"john.doe@example.com\");\n        reqBody.setAddresses(List.of(new AddressDTO(\"Anytown\", \"123 Main St\")));\n        reqBody.setPaymentMethods(List.of(new PaymentMethodDTO(PaymentMethodTypeDTO.VISA, \"1234567890123456\")));\n        var response = controller.updateCustomer(id, reqBody);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }\n\n    @Test\n    void deleteCustomerTest() {\n        Long id = 1L;\n        var response = controller.deleteCustomer(id);\n        Assertions.assertEquals(204, response.getStatusCode().value());\n    }\n\n    @Test\n    void searchCustomersTest() {\n        Optional<Integer> page = Optional.of(0);\n        Optional<Integer> limit = Optional.of(10);\n        Optional<List<String>> sort = Optional.of(List.of(\"name\"));\n        CustomerSearchCriteriaDTO reqBody = new CustomerSearchCriteriaDTO();\n        var response = controller.searchCustomers(reqBody, page, limit, sort);\n        Assertions.assertEquals(200, response.getStatusCode().value());\n    }\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CustomerApiControllerTest.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.adapters.web;\n\nimport io.zenwave360.example.adapters.web.model.CustomerDTO;\nimport io.zenwave360.example.adapters.web.model.PaymentMethodTypeDTO;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.http.MediaType;\n\nimport static org.springframework.http.HttpMethod.*;\n\n/**\n* Business Flow Test for: createCustomer, getCustomer, updateCustomer, deleteCustomer.\n*/\nclass CreateUpdateDeleteCustomerIntegrationTest extends BaseWebTestClientTest {\n\n    /**\n    * Business Flow Test for: createCustomer, getCustomer, updateCustomer, deleteCustomer.\n    */\n    @Test\n    void testCreateUpdateDeleteCustomerIntegrationTest() {\n        // createCustomer: createCustomer\n        var customerRequestBody0 = \"\"\"\n                {\n                  \"email\": \"jane.doe@example.com\",\n                  \"name\": \"Jane Doe\",\n                  \"addresses\": [\n                    {\n                      \"city\": \"Othertown\",\n                      \"street\": \"456 Elm St\"\n                    }\n                  ],\n                  \"paymentMethods\": [\n                    {\n                      \"type\": \"VISA\",\n                      \"cardNumber\": \"6543210987654321\"\n                    }\n                  ]\n                }\n                \"\"\";\n\n        var createCustomerResponse0 = webTestClient.method(POST).uri(\"/api/customers\")\n            .accept(MediaType.APPLICATION_JSON)\n            .contentType(MediaType.APPLICATION_JSON)\n            .bodyValue(customerRequestBody0)\n            .exchange()\n            .expectStatus().isEqualTo(201)\n            .expectHeader().contentType(MediaType.APPLICATION_JSON)\n            .returnResult(CustomerDTO.class);\n\n    \n        // getCustomer: getCustomer\n        var id = createCustomerResponse0.getResponseBody().blockFirst().getId();\n\n        var getCustomerResponse1 = webTestClient.method(GET).uri(\"/api/customers/{id}\", id)\n            .accept(MediaType.APPLICATION_JSON)\n            .exchange()\n            .expectStatus().isEqualTo(200)\n            .expectHeader().contentType(MediaType.APPLICATION_JSON)\n            .returnResult(CustomerDTO.class);\n\n    \n        // updateCustomer: updateCustomer\n        CustomerDTO customerRequestBody2 = getCustomerResponse1.getResponseBody().blockFirst();\n        customerRequestBody2.setName(\"updated\");\n        customerRequestBody2.setEmail(\"updated@email.com\");\n        customerRequestBody2.getPaymentMethods().get(0).setType(PaymentMethodTypeDTO.VISA);\n\n        var updateCustomerResponse2 = webTestClient.method(PUT).uri(\"/api/customers/{id}\", id)\n            .accept(MediaType.APPLICATION_JSON)\n            .contentType(MediaType.APPLICATION_JSON)\n            .bodyValue(customerRequestBody2)\n            .exchange()\n            .expectStatus().isEqualTo(200)\n            .expectHeader().contentType(MediaType.APPLICATION_JSON)\n            .returnResult(CustomerDTO.class);\n\n    \n        // deleteCustomer: deleteCustomer\n\n        webTestClient.method(DELETE).uri(\"/api/customers/{id}\", id)\n            .accept(MediaType.APPLICATION_JSON)\n            .exchange()\n            .expectStatus().isEqualTo(204);\n\n\n        // getCustomer: getCustomer (not found)\n        webTestClient.method(GET).uri(\"/api/customers/{id}\", id)\n                .accept(MediaType.APPLICATION_JSON)\n                .exchange()\n                .expectStatus().isEqualTo(404);\n    }\n\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L35-L44","language":"zdl","visibleRange":"35,44","content":"        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerIntegrationTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:35,44"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L24-L44","language":"zdl","visibleRange":"24,44","content":"            // --force // overwite all files\n        }\n\n        OpenAPIControllersPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }\n\n        SpringWebTestClientPlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerIntegrationTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }\n\n        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:24,44"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java","language":"java","visibleRange":null,"content":"package io.zenwave360.example.adapters.web;\n\nimport io.zenwave360.example.adapters.web.model.CustomerDTO;\nimport io.zenwave360.example.adapters.web.model.PaymentMethodTypeDTO;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.http.MediaType;\n\nimport static org.springframework.http.HttpMethod.*;\n\n/**\n* Business Flow Test for: createCustomer, getCustomer, updateCustomer, deleteCustomer.\n*/\nclass CreateUpdateDeleteCustomerIntegrationTest extends BaseWebTestClientTest {\n\n    /**\n    * Business Flow Test for: createCustomer, getCustomer, updateCustomer, deleteCustomer.\n    */\n    @Test\n    void testCreateUpdateDeleteCustomerIntegrationTest() {\n        // createCustomer: createCustomer\n        var customerRequestBody0 = \"\"\"\n                {\n                  \"email\": \"jane.doe@example.com\",\n                  \"name\": \"Jane Doe\",\n                  \"addresses\": [\n                    {\n                      \"city\": \"Othertown\",\n                      \"street\": \"456 Elm St\"\n                    }\n                  ],\n                  \"paymentMethods\": [\n                    {\n                      \"type\": \"VISA\",\n                      \"cardNumber\": \"6543210987654321\"\n                    }\n                  ]\n                }\n                \"\"\";\n\n        var createCustomerResponse0 = webTestClient.method(POST).uri(\"/api/customers\")\n            .accept(MediaType.APPLICATION_JSON)\n            .contentType(MediaType.APPLICATION_JSON)\n            .bodyValue(customerRequestBody0)\n            .exchange()\n            .expectStatus().isEqualTo(201)\n            .expectHeader().contentType(MediaType.APPLICATION_JSON)\n            .returnResult(CustomerDTO.class);\n\n    \n        // getCustomer: getCustomer\n        var id = createCustomerResponse0.getResponseBody().blockFirst().getId();\n\n        var getCustomerResponse1 = webTestClient.method(GET).uri(\"/api/customers/{id}\", id)\n            .accept(MediaType.APPLICATION_JSON)\n            .exchange()\n            .expectStatus().isEqualTo(200)\n            .expectHeader().contentType(MediaType.APPLICATION_JSON)\n            .returnResult(CustomerDTO.class);\n\n    \n        // updateCustomer: updateCustomer\n        CustomerDTO customerRequestBody2 = getCustomerResponse1.getResponseBody().blockFirst();\n        customerRequestBody2.setName(\"updated\");\n        customerRequestBody2.setEmail(\"updated@email.com\");\n        customerRequestBody2.getPaymentMethods().get(0).setType(PaymentMethodTypeDTO.VISA);\n\n        var updateCustomerResponse2 = webTestClient.method(PUT).uri(\"/api/customers/{id}\", id)\n            .accept(MediaType.APPLICATION_JSON)\n            .contentType(MediaType.APPLICATION_JSON)\n            .bodyValue(customerRequestBody2)\n            .exchange()\n            .expectStatus().isEqualTo(200)\n            .expectHeader().contentType(MediaType.APPLICATION_JSON)\n            .returnResult(CustomerDTO.class);\n\n    \n        // deleteCustomer: deleteCustomer\n\n        webTestClient.method(DELETE).uri(\"/api/customers/{id}\", id)\n            .accept(MediaType.APPLICATION_JSON)\n            .exchange()\n            .expectStatus().isEqualTo(204);\n\n\n        // getCustomer: getCustomer (not found)\n        webTestClient.method(GET).uri(\"/api/customers/{id}\", id)\n                .accept(MediaType.APPLICATION_JSON)\n                .exchange()\n                .expectStatus().isEqualTo(404);\n    }\n\n\n}\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/java/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerIntegrationTest.java:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-model.zdl#L62-L62","language":"zdl","visibleRange":"62,62","content":"    updateCustomer(id, Customer) Customer? withEvents CustomerEvent","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-model.zdl:62,62"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CustomerApi.feature","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CustomerApi.feature","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CustomerApi.feature","language":"cucumber","visibleRange":null,"content":"@openapi-file=src/main/resources/public/apis/openapi.yml\nFeature: CustomerApi\n\nBackground:\n* url baseUrl\n# * def auth = { username: '', password: '' }\n* def authHeader = call read('classpath:karate-auth.js') auth\n* configure headers = authHeader || {}\n\n@operationId=createCustomer\nScenario: createCustomer\n\nGiven path '/customers'\nAnd request\n\"\"\"\n{\n  \"name\" : \"name-iv8wf61cpxe13fa3j0\",\n  \"email\" : \"kraig.hermann@gmail.com\",\n  \"addresses\" : [ {\n    \"street\" : \"street-wivpwm357mj4r1\",\n    \"city\" : \"Connellyside\"\n  } ],\n  \"paymentMethods\" : [ {\n    \"type\" : \"VISA\",\n    \"cardNumber\" : \"cardNumber-ydvoeke77t3z\"\n  } ]\n}\n\"\"\"\nWhen method post\nThen status 201\n* def createCustomerResponse = response\n* def customerId = response.id\n# TODO: Add response validation\n\n\n@operationId=getCustomer\nScenario: getCustomer\n\n* def pathParams = { id: 53 }\nGiven path '/customers/', pathParams.id\nWhen method get\nThen status 200\n* def getCustomerResponse = response\n* def customerId = response.id\n# TODO: Add response validation\n\n\n@operationId=updateCustomer\nScenario: updateCustomer\n\n* def pathParams = { id: 53 }\nGiven path '/customers/', pathParams.id\nAnd request\n\"\"\"\n{\n  \"name\" : \"name-t58rqm1n6zb\",\n  \"email\" : \"reta.wiza@gmail.com\",\n  \"addresses\" : [ {\n    \"street\" : \"street-e2pn9ih8t7du14h93\",\n    \"city\" : \"East Genesis\"\n  } ],\n  \"paymentMethods\" : [ {\n    \"type\" : \"MASTERCARD\",\n    \"cardNumber\" : \"cardNumber-qx3ag249vxzjgkh\"\n  } ]\n}\n\"\"\"\nWhen method put\nThen status 200\n* def updateCustomerResponse = response\n* def customerId = response.id\n# TODO: Add response validation\n\n\n@operationId=deleteCustomer\nScenario: deleteCustomer\n\n* def pathParams = { id: 89 }\nGiven path '/customers/', pathParams.id\nWhen method delete\nThen status 204\n* def deleteCustomerResponse = response\n# TODO: Add response validation\n\n\n@operationId=searchCustomers\nScenario: searchCustomers\n\nGiven path '/customers/search'\nAnd def queryParams = { page: 71, limit: 20, sort: ['name:asc'] }\nAnd request\n\"\"\"\n{\n  \"name\" : \"name-xrx9m9s1\",\n  \"email\" : \"tyron.heidenreich@yahoo.co\",\n  \"city\" : \"Bellamouth\",\n  \"state\" : \"state-y1x18r2h\"\n}\n\"\"\"\nWhen method post\nThen status 201\n* def searchCustomersResponse = response\n* def customerPaginatedId = response.id\n# TODO: Add response validation\n\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CustomerApi.feature:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java#L56-L69","language":"java","visibleRange":"56,69","content":"    @Transactional\n    public Optional<Customer> updateCustomer(Long id, Customer input) {\n        log.debug(\"Request updateCustomer: {} {}\", id, input);\n\n        var customer = customerRepository.findById(id).map(existingCustomer -> {\n            return customerServiceMapper.update(existingCustomer, input);\n        }).map(customerRepository::save);\n        if (customer.isPresent()) {\n            // emit events\n            var customerEvent = eventsMapper.asCustomerEvent(customer.get());\n            eventsProducer.onCustomerEvent(customerEvent);\n        }\n        return customer;\n    }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/java/io/zenwave360/example/core/implementation/CustomerServiceImpl.java:56,69"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L46-L51","language":"zdl","visibleRange":"46,51","content":"        OpenAPIKaratePlugin {\n            openapiFile \"src/main/resources/public/apis/openapi.yml\"\n            groupBy businessFlow\n            businessFlowTestName CreateUpdateDeleteCustomerKarateTest\n            operationIds createCustomer,updateCustomer,deleteCustomer,getCustomer\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:46,51"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/zenwave-scripts.zw#L12-L19","language":"zdl","visibleRange":"12,19","content":"        ZDLToAsyncAPIPlugin {\n            asyncapiVersion v3\n            schemaFormat avro\n            avroPackage \"io.zenwave360.example.core.outbound.events.dtos\"\n            idType long\n            targetFile \"src/main/resources/public/apis/asyncapi.yml\"\n            includeKafkaCommonHeaders true\n        }","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/zenwave-scripts.zw:12,19"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerKarateTest.feature","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerKarateTest.feature","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerKarateTest.feature","language":"cucumber","visibleRange":null,"content":"@openapi-file=src/main/resources/public/apis/openapi.yml\nFeature: CreateUpdateDeleteCustomerKarateTest\n\nBackground:\n* url baseUrl\n# * def auth = { username: '', password: '' }\n* def authHeader = call read('classpath:karate-auth.js') auth\n* configure headers = authHeader || {}\n\n@business-flow\n@operationId=createCustomer,updateCustomer,deleteCustomer,getCustomer\nScenario: CreateUpdateDeleteCustomerKarateTest\n\n# createCustomer\nGiven path '/customers'\nAnd request\n\"\"\"\n{\n  \"id\" : 21,\n  \"version\" : 13,\n  \"name\" : \"name-5ugq20772n1\",\n  \"email\" : \"rosaria.hyatt@gmail.com\",\n  \"addresses\" : [ {\n    \"street\" : \"street-z\",\n    \"city\" : \"West Edmundbury\"\n  } ],\n  \"paymentMethods\" : [ {\n    \"id\" : 37,\n    \"version\" : 10,\n    \"type\" : \"MASTERCARD\",\n    \"cardNumber\" : \"cardNumber-9c2xzm77ig5\"\n  } ]\n}\n\"\"\"\nWhen method post\nThen status 201\n* def createCustomerResponse = response\n* def customerId = response.id\n# TODO: Add response validation\n\n\n# updateCustomer\n* def pathParams = { id: 2 }\nGiven path '/customers/', pathParams.id\nAnd request\n\"\"\"\n{\n  \"id\" : 79,\n  \"version\" : 7,\n  \"name\" : \"name-mu8j1eqcaoy2a7ex9uup1\",\n  \"email\" : \"jerica.emmerich@hotmail.co\",\n  \"addresses\" : [ {\n    \"street\" : \"street-7ug0jz4c5ghumuz2yst\",\n    \"city\" : \"Sydneychester\"\n  } ],\n  \"paymentMethods\" : [ {\n    \"id\" : 30,\n    \"version\" : 82,\n    \"type\" : \"MASTERCARD\",\n    \"cardNumber\" : \"cardNumber-f\"\n  } ]\n}\n\"\"\"\nWhen method put\nThen status 200\n* def updateCustomerResponse = response\n* def customerId = response.id\n# TODO: Add response validation\n\n\n# deleteCustomer\n* def pathParams = { id: 42 }\nGiven path '/customers/', pathParams.id\nWhen method delete\nThen status 204\n* def deleteCustomerResponse = response\n# TODO: Add response validation\n\n\n# getCustomer\n* def pathParams = { id: 71 }\nGiven path '/customers/', pathParams.id\nWhen method get\nThen status 404\n* def getCustomerResponse = response\n* def customerId = response.id\n# TODO: Add response validation\n\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/test/resources/io/zenwave360/example/adapters/web/CreateUpdateDeleteCustomerKarateTest.feature:full"},{"url":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml","originalUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml","sourceUrl":"https://github.com/ZenWave360/zenwave-playground/blob/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml","language":"yaml","visibleRange":null,"content":"asyncapi: 3.0.0\ninfo:\n  title: \"ZenWave Customer JPA Example\"\n  version: 0.0.1\n  tags:\n    - name: \"Default\"\n    - name: \"Customer\"\n\ndefaultContentType: application/json\n\nchannels:\n  CustomersChannel:\n    address: \"customers\"\n    messages:\n      CustomerDeletedEventMessage:\n        $ref: '#/components/messages/CustomerDeletedEventMessage'\n      CustomerEventMessage:\n        $ref: '#/components/messages/CustomerEventMessage'\n\noperations:\n  onCustomerEvent:\n    action: send\n    tags:\n      - name: Customer\n    channel:\n      $ref: '#/channels/CustomersChannel'\n  onCustomerDeletedEvent:\n    action: send\n    tags:\n      - name: Customer\n    channel:\n      $ref: '#/channels/CustomersChannel'\n\n\ncomponents:\n  messages:\n    CustomerEventMessage:\n      name: CustomerEventMessage\n      title: \"\"\n      summary: \"\"\n      traits:\n        - $ref: '#/components/messageTraits/CommonHeaders'\n      payload:\n        schemaFormat: application/vnd.apache.avro+json;version=1.9.0\n        schema:\n          $ref: \"avro/CustomerEvent.avsc\"\n    CustomerDeletedEventMessage:\n      name: CustomerDeletedEventMessage\n      title: \"\"\n      summary: \"\"\n      traits:\n        - $ref: '#/components/messageTraits/CommonHeaders'\n      payload:\n        schemaFormat: application/vnd.apache.avro+json;version=1.9.0\n        schema:\n          $ref: \"avro/CustomerDeletedEvent.avsc\"\n\n  messageTraits:\n    CommonHeaders:\n      headers:\n        type: object\n        properties:\n          kafka_messageKey:\n            type: \"long\"\n            \n            description: This header value will be populated automatically at runtime\n            x-runtime-expression: $message.payload#/id\n\n\n","cacheKey":"https://raw.githubusercontent.com/ZenWave360/zenwave-playground/refs/heads/main/examples/customer-address-jpa/src/main/resources/public/apis/asyncapi.yml:full"}]}}}